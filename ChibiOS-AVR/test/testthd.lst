   1               		.file	"testthd.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	thd3_execute:
  13               	.LFB10:
  14               		.file 1 "../../test/testthd.c"
   1:../../test/testthd.c **** /*
   2:../../test/testthd.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../test/testthd.c ****                  2011,2012 Giovanni Di Sirio.
   4:../../test/testthd.c **** 
   5:../../test/testthd.c ****     This file is part of ChibiOS/RT.
   6:../../test/testthd.c **** 
   7:../../test/testthd.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../test/testthd.c ****     it under the terms of the GNU General Public License as published by
   9:../../test/testthd.c ****     the Free Software Foundation; either version 3 of the License, or
  10:../../test/testthd.c ****     (at your option) any later version.
  11:../../test/testthd.c **** 
  12:../../test/testthd.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../test/testthd.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../test/testthd.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../test/testthd.c ****     GNU General Public License for more details.
  16:../../test/testthd.c **** 
  17:../../test/testthd.c ****     You should have received a copy of the GNU General Public License
  18:../../test/testthd.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../test/testthd.c **** */
  20:../../test/testthd.c **** 
  21:../../test/testthd.c **** #include "ch.h"
  22:../../test/testthd.c **** #include "test.h"
  23:../../test/testthd.c **** 
  24:../../test/testthd.c **** /**
  25:../../test/testthd.c ****  * @page test_threads Threads and Scheduler test
  26:../../test/testthd.c ****  *
  27:../../test/testthd.c ****  * File: @ref testthd.c
  28:../../test/testthd.c ****  *
  29:../../test/testthd.c ****  * <h2>Description</h2>
  30:../../test/testthd.c ****  * This module implements the test sequence for the @ref scheduler,
  31:../../test/testthd.c ****  * @ref threads and @ref time subsystems.<br>
  32:../../test/testthd.c ****  * Note that the tests on those subsystems are formally required but most of
  33:../../test/testthd.c ****  * their functionality is already demonstrated because the test suite itself
  34:../../test/testthd.c ****  * depends on them, anyway double check is good.
  35:../../test/testthd.c ****  *
  36:../../test/testthd.c ****  * <h2>Objective</h2>
  37:../../test/testthd.c ****  * Objective of the test module is to cover 100% of the subsystems code.
  38:../../test/testthd.c ****  *
  39:../../test/testthd.c ****  * <h2>Preconditions</h2>
  40:../../test/testthd.c ****  * None.
  41:../../test/testthd.c ****  *
  42:../../test/testthd.c ****  * <h2>Test Cases</h2>
  43:../../test/testthd.c ****  * - @subpage test_threads_001
  44:../../test/testthd.c ****  * - @subpage test_threads_002
  45:../../test/testthd.c ****  * - @subpage test_threads_003
  46:../../test/testthd.c ****  * - @subpage test_threads_004
  47:../../test/testthd.c ****  * .
  48:../../test/testthd.c ****  * @file testthd.c
  49:../../test/testthd.c ****  * @brief Threads and Scheduler test source file
  50:../../test/testthd.c ****  * @file testthd.h
  51:../../test/testthd.c ****  * @brief Threads and Scheduler test header file
  52:../../test/testthd.c ****  */
  53:../../test/testthd.c **** 
  54:../../test/testthd.c **** /**
  55:../../test/testthd.c ****  * @page test_threads_001 Ready List functionality #1
  56:../../test/testthd.c ****  *
  57:../../test/testthd.c ****  * <h2>Description</h2>
  58:../../test/testthd.c ****  * Five threads, with increasing priority, are enqueued in the ready list
  59:../../test/testthd.c ****  * and atomically executed.<br>
  60:../../test/testthd.c ****  * The test expects the threads to perform their operations in increasing
  61:../../test/testthd.c ****  * priority order regardless of the initial order.
  62:../../test/testthd.c ****  */
  63:../../test/testthd.c **** 
  64:../../test/testthd.c **** static msg_t thread(void *p) {
  65:../../test/testthd.c **** 
  66:../../test/testthd.c ****   test_emit_token(*(char *)p);
  67:../../test/testthd.c ****   return 0;
  68:../../test/testthd.c **** }
  69:../../test/testthd.c **** 
  70:../../test/testthd.c **** static void thd1_execute(void) {
  71:../../test/testthd.c **** 
  72:../../test/testthd.c ****   threads[0] = chThdCreateStatic(wa[0], WA_SIZE, chThdGetPriority()-5, thread, "E");
  73:../../test/testthd.c ****   threads[1] = chThdCreateStatic(wa[1], WA_SIZE, chThdGetPriority()-4, thread, "D");
  74:../../test/testthd.c ****   threads[2] = chThdCreateStatic(wa[2], WA_SIZE, chThdGetPriority()-3, thread, "C");
  75:../../test/testthd.c ****   threads[3] = chThdCreateStatic(wa[3], WA_SIZE, chThdGetPriority()-2, thread, "B");
  76:../../test/testthd.c ****   threads[4] = chThdCreateStatic(wa[4], WA_SIZE, chThdGetPriority()-1, thread, "A");
  77:../../test/testthd.c ****   test_wait_threads();
  78:../../test/testthd.c ****   test_assert_sequence(1, "ABCDE");
  79:../../test/testthd.c **** }
  80:../../test/testthd.c **** 
  81:../../test/testthd.c **** ROMCONST struct testcase testthd1 = {
  82:../../test/testthd.c ****   "Threads, enqueuing test #1",
  83:../../test/testthd.c ****   NULL,
  84:../../test/testthd.c ****   NULL,
  85:../../test/testthd.c ****   thd1_execute
  86:../../test/testthd.c **** };
  87:../../test/testthd.c **** 
  88:../../test/testthd.c **** /**
  89:../../test/testthd.c ****  * @page test_threads_002 Ready List functionality #2
  90:../../test/testthd.c ****  *
  91:../../test/testthd.c ****  * <h2>Description</h2>
  92:../../test/testthd.c ****  * Five threads, with pseudo-random priority, are enqueued in the ready list
  93:../../test/testthd.c ****  * and atomically executed.<br>
  94:../../test/testthd.c ****  * The test expects the threads to perform their operations in increasing
  95:../../test/testthd.c ****  * priority order regardless of the initial order.
  96:../../test/testthd.c ****  */
  97:../../test/testthd.c **** 
  98:../../test/testthd.c **** static void thd2_execute(void) {
  99:../../test/testthd.c **** 
 100:../../test/testthd.c ****   threads[1] = chThdCreateStatic(wa[1], WA_SIZE, chThdGetPriority()-4, thread, "D");
 101:../../test/testthd.c ****   threads[0] = chThdCreateStatic(wa[0], WA_SIZE, chThdGetPriority()-5, thread, "E");
 102:../../test/testthd.c ****   threads[4] = chThdCreateStatic(wa[4], WA_SIZE, chThdGetPriority()-1, thread, "A");
 103:../../test/testthd.c ****   threads[3] = chThdCreateStatic(wa[3], WA_SIZE, chThdGetPriority()-2, thread, "B");
 104:../../test/testthd.c ****   /* Done this way for coverage of chThdCreateI() and chThdResume().*/
 105:../../test/testthd.c ****   chSysLock();
 106:../../test/testthd.c ****   threads[2] = chThdCreateI(wa[2], WA_SIZE, chThdGetPriority()-3, thread, "C");
 107:../../test/testthd.c ****   chSysUnlock();
 108:../../test/testthd.c ****   chThdResume(threads[2]);
 109:../../test/testthd.c ****   test_wait_threads();
 110:../../test/testthd.c ****   test_assert_sequence(1, "ABCDE");
 111:../../test/testthd.c **** }
 112:../../test/testthd.c **** 
 113:../../test/testthd.c **** ROMCONST struct testcase testthd2 = {
 114:../../test/testthd.c ****   "Threads, enqueuing test #2",
 115:../../test/testthd.c ****   NULL,
 116:../../test/testthd.c ****   NULL,
 117:../../test/testthd.c ****   thd2_execute
 118:../../test/testthd.c **** };
 119:../../test/testthd.c **** 
 120:../../test/testthd.c **** /**
 121:../../test/testthd.c ****  * @page test_threads_003 Threads priority change test
 122:../../test/testthd.c ****  *
 123:../../test/testthd.c ****  * <h2>Description</h2>
 124:../../test/testthd.c ****  * A series of priority changes are performed on the current thread in order
 125:../../test/testthd.c ****  * to verify that the priority change happens as expected.<br>
 126:../../test/testthd.c ****  * If the @p CH_USE_MUTEXES option is enabled then the priority changes are
 127:../../test/testthd.c ****  * also tested under priority inheritance boosted priority state.
 128:../../test/testthd.c ****  */
 129:../../test/testthd.c **** 
 130:../../test/testthd.c **** static void thd3_execute(void) {
  15               		.loc 1 130 0
  16               		.cfi_startproc
  17 0000 CF92      		push r12
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 12, -2
  21 0002 DF92      		push r13
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 13, -3
  25 0004 EF92      		push r14
  26               	.LCFI2:
  27               		.cfi_def_cfa_offset 5
  28               		.cfi_offset 14, -4
  29 0006 FF92      		push r15
  30               	.LCFI3:
  31               		.cfi_def_cfa_offset 6
  32               		.cfi_offset 15, -5
  33 0008 0F93      		push r16
  34               	.LCFI4:
  35               		.cfi_def_cfa_offset 7
  36               		.cfi_offset 16, -6
  37 000a 1F93      		push r17
  38               	.LCFI5:
  39               		.cfi_def_cfa_offset 8
  40               		.cfi_offset 17, -7
  41 000c CF93      		push r28
  42               	.LCFI6:
  43               		.cfi_def_cfa_offset 9
  44               		.cfi_offset 28, -8
  45 000e DF93      		push r29
  46               	.LCFI7:
  47               		.cfi_def_cfa_offset 10
  48               		.cfi_offset 29, -9
  49               	/* prologue: function */
  50               	/* frame size = 0 */
  51               	/* stack size = 8 */
  52               	.L__stack_usage = 8
 131:../../test/testthd.c ****   tprio_t prio, p1;
 132:../../test/testthd.c **** 
 133:../../test/testthd.c ****   prio = chThdGetPriority();
  53               		.loc 1 133 0
  54 0010 E091 0000 		lds r30,rlist+11
  55 0014 F091 0000 		lds r31,rlist+11+1
  56 0018 D480      		ldd r13,Z+4
  57               	.LVL0:
 134:../../test/testthd.c ****   p1 = chThdSetPriority(prio + 1);
  58               		.loc 1 134 0
  59 001a CD2C      		mov r12,r13
  60 001c C394      		inc r12
  61 001e 8C2D      		mov r24,r12
  62 0020 0E94 0000 		call chThdSetPriority
  63               	.LVL1:
  64 0024 F82E      		mov r15,r24
  65               	.LVL2:
 135:../../test/testthd.c ****   test_assert(1, p1 == prio,
  66               		.loc 1 135 0
  67 0026 61E0      		ldi r22,lo8(1)
  68 0028 8D11      		cpse r24,r13
  69 002a 60E0      		ldi r22,0
  70               	.L2:
  71 002c 81E0      		ldi r24,lo8(1)
  72 002e 90E0      		ldi r25,0
  73 0030 0E94 0000 		call _test_assert
  74               	.LVL3:
  75 0034 8823      		tst r24
  76 0036 01F0      		breq .L17
  77               	.LVL4:
  78               	.L1:
  79               	/* epilogue start */
 136:../../test/testthd.c ****               "unexpected returned priority level");
 137:../../test/testthd.c ****   test_assert(2, chThdGetPriority() == prio + 1,
 138:../../test/testthd.c ****               "unexpected priority level");
 139:../../test/testthd.c ****   p1 = chThdSetPriority(p1);
 140:../../test/testthd.c ****   test_assert(3, p1 == prio + 1,
 141:../../test/testthd.c ****               "unexpected returned priority level");
 142:../../test/testthd.c ****   test_assert(4, chThdGetPriority() == prio,
 143:../../test/testthd.c ****               "unexpected priority level");
 144:../../test/testthd.c **** 
 145:../../test/testthd.c **** #if CH_USE_MUTEXES || defined(__DOXYGEN__)
 146:../../test/testthd.c ****   /* Simulates a priority boost situation (p_prio > p_realprio).*/
 147:../../test/testthd.c ****   chSysLock();
 148:../../test/testthd.c ****   chThdSelf()->p_prio += 2;
 149:../../test/testthd.c ****   chSysUnlock();
 150:../../test/testthd.c ****   test_assert(5, chThdGetPriority() == prio + 2,
 151:../../test/testthd.c ****               "unexpected priority level");
 152:../../test/testthd.c **** 
 153:../../test/testthd.c ****   /* Tries to raise but below the boost level. */
 154:../../test/testthd.c ****   p1 = chThdSetPriority(prio + 1);
 155:../../test/testthd.c ****   test_assert(6, p1 == prio,
 156:../../test/testthd.c ****               "unexpected returned priority level");
 157:../../test/testthd.c ****   test_assert(7, chThdSelf()->p_prio == prio + 2,
 158:../../test/testthd.c ****               "unexpected priority level");
 159:../../test/testthd.c ****   test_assert(8, chThdSelf()->p_realprio == prio + 1,
 160:../../test/testthd.c ****               "unexpected returned real priority level");
 161:../../test/testthd.c **** 
 162:../../test/testthd.c ****   /* Tries to raise above the boost level. */
 163:../../test/testthd.c ****   p1 = chThdSetPriority(prio + 3);
 164:../../test/testthd.c ****   test_assert(9, p1 == prio + 1,
 165:../../test/testthd.c ****               "unexpected returned priority level");
 166:../../test/testthd.c ****   test_assert(10, chThdSelf()->p_prio == prio + 3,
 167:../../test/testthd.c ****               "unexpected priority level");
 168:../../test/testthd.c ****   test_assert(11, chThdSelf()->p_realprio == prio + 3,
 169:../../test/testthd.c ****               "unexpected real priority level");
 170:../../test/testthd.c **** 
 171:../../test/testthd.c ****   chSysLock();
 172:../../test/testthd.c ****   chThdSelf()->p_prio = prio;
 173:../../test/testthd.c ****   chThdSelf()->p_realprio = prio;
 174:../../test/testthd.c ****   chSysUnlock();
 175:../../test/testthd.c **** #endif
 176:../../test/testthd.c **** }
  80               		.loc 1 176 0
  81 0038 DF91      		pop r29
  82 003a CF91      		pop r28
  83 003c 1F91      		pop r17
  84 003e 0F91      		pop r16
  85 0040 FF90      		pop r15
  86 0042 EF90      		pop r14
  87 0044 DF90      		pop r13
  88               	.LVL5:
  89 0046 CF90      		pop r12
  90               	.LVL6:
  91 0048 0895      		ret
  92               	.LVL7:
  93               	.L17:
 137:../../test/testthd.c ****   test_assert(2, chThdGetPriority() == prio + 1,
  94               		.loc 1 137 0
  95 004a 0D2D      		mov r16,r13
  96 004c 10E0      		ldi r17,0
  97 004e E801      		movw r28,r16
  98 0050 2196      		adiw r28,1
  99 0052 E091 0000 		lds r30,rlist+11
 100 0056 F091 0000 		lds r31,rlist+11+1
 101 005a 2481      		ldd r18,Z+4
 102 005c 30E0      		ldi r19,0
 103 005e 61E0      		ldi r22,lo8(1)
 104 0060 2C17      		cp r18,r28
 105 0062 3D07      		cpc r19,r29
 106 0064 01F0      		breq .L5
 107 0066 60E0      		ldi r22,0
 108               	.L5:
 109 0068 82E0      		ldi r24,lo8(2)
 110 006a 90E0      		ldi r25,0
 111 006c 0E94 0000 		call _test_assert
 112               	.LVL8:
 113 0070 8111      		cpse r24,__zero_reg__
 114 0072 00C0      		rjmp .L1
 139:../../test/testthd.c ****   p1 = chThdSetPriority(p1);
 115               		.loc 1 139 0
 116 0074 8F2D      		mov r24,r15
 117 0076 0E94 0000 		call chThdSetPriority
 118               	.LVL9:
 140:../../test/testthd.c ****   test_assert(3, p1 == prio + 1,
 119               		.loc 1 140 0
 120 007a 282F      		mov r18,r24
 121 007c 30E0      		ldi r19,0
 122 007e 61E0      		ldi r22,lo8(1)
 123 0080 C217      		cp r28,r18
 124 0082 D307      		cpc r29,r19
 125 0084 01F0      		breq .L7
 126 0086 60E0      		ldi r22,0
 127               	.L7:
 128 0088 83E0      		ldi r24,lo8(3)
 129 008a 90E0      		ldi r25,0
 130               	.LVL10:
 131 008c 0E94 0000 		call _test_assert
 132               	.LVL11:
 133 0090 8111      		cpse r24,__zero_reg__
 134 0092 00C0      		rjmp .L1
 142:../../test/testthd.c ****   test_assert(4, chThdGetPriority() == prio,
 135               		.loc 1 142 0
 136 0094 E091 0000 		lds r30,rlist+11
 137 0098 F091 0000 		lds r31,rlist+11+1
 138 009c 61E0      		ldi r22,lo8(1)
 139 009e 8481      		ldd r24,Z+4
 140 00a0 8D11      		cpse r24,r13
 141 00a2 60E0      		ldi r22,0
 142               	.L8:
 143 00a4 84E0      		ldi r24,lo8(4)
 144 00a6 90E0      		ldi r25,0
 145 00a8 0E94 0000 		call _test_assert
 146               	.LVL12:
 147 00ac 8111      		cpse r24,__zero_reg__
 148 00ae 00C0      		rjmp .L1
 147:../../test/testthd.c ****   chSysLock();
 149               		.loc 1 147 0
 150               	/* #APP */
 151               	 ;  147 "../../test/testthd.c" 1
 152 00b0 F894      		cli
 153               	 ;  0 "" 2
 148:../../test/testthd.c ****   chThdSelf()->p_prio += 2;
 154               		.loc 1 148 0
 155               	/* #NOAPP */
 156 00b2 E091 0000 		lds r30,rlist+11
 157 00b6 F091 0000 		lds r31,rlist+11+1
 158 00ba 8481      		ldd r24,Z+4
 159 00bc 8E5F      		subi r24,lo8(-(2))
 160 00be 8483      		std Z+4,r24
 149:../../test/testthd.c ****   chSysUnlock();
 161               		.loc 1 149 0
 162               	/* #APP */
 163               	 ;  149 "../../test/testthd.c" 1
 164 00c0 7894      		sei
 165               	 ;  0 "" 2
 150:../../test/testthd.c ****   test_assert(5, chThdGetPriority() == prio + 2,
 166               		.loc 1 150 0
 167               	/* #NOAPP */
 168 00c2 7801      		movw r14,r16
 169 00c4 82E0      		ldi r24,2
 170 00c6 E80E      		add r14,r24
 171 00c8 F11C      		adc r15,__zero_reg__
 172 00ca E091 0000 		lds r30,rlist+11
 173 00ce F091 0000 		lds r31,rlist+11+1
 174 00d2 8481      		ldd r24,Z+4
 175 00d4 90E0      		ldi r25,0
 176 00d6 61E0      		ldi r22,lo8(1)
 177 00d8 8E15      		cp r24,r14
 178 00da 9F05      		cpc r25,r15
 179 00dc 01F0      		breq .L9
 180 00de 60E0      		ldi r22,0
 181               	.L9:
 182 00e0 85E0      		ldi r24,lo8(5)
 183 00e2 90E0      		ldi r25,0
 184 00e4 0E94 0000 		call _test_assert
 185               	.LVL13:
 186 00e8 8111      		cpse r24,__zero_reg__
 187 00ea 00C0      		rjmp .L1
 154:../../test/testthd.c ****   p1 = chThdSetPriority(prio + 1);
 188               		.loc 1 154 0
 189 00ec 8C2D      		mov r24,r12
 190 00ee 0E94 0000 		call chThdSetPriority
 191               	.LVL14:
 155:../../test/testthd.c ****   test_assert(6, p1 == prio,
 192               		.loc 1 155 0
 193 00f2 61E0      		ldi r22,lo8(1)
 194 00f4 8D11      		cpse r24,r13
 195 00f6 60E0      		ldi r22,0
 196               	.L10:
 197 00f8 86E0      		ldi r24,lo8(6)
 198 00fa 90E0      		ldi r25,0
 199               	.LVL15:
 200 00fc 0E94 0000 		call _test_assert
 201               	.LVL16:
 202 0100 8111      		cpse r24,__zero_reg__
 203 0102 00C0      		rjmp .L1
 157:../../test/testthd.c ****   test_assert(7, chThdSelf()->p_prio == prio + 2,
 204               		.loc 1 157 0
 205 0104 E091 0000 		lds r30,rlist+11
 206 0108 F091 0000 		lds r31,rlist+11+1
 207 010c 8481      		ldd r24,Z+4
 208 010e 90E0      		ldi r25,0
 209 0110 61E0      		ldi r22,lo8(1)
 210 0112 E816      		cp r14,r24
 211 0114 F906      		cpc r15,r25
 212 0116 01F0      		breq .L11
 213 0118 60E0      		ldi r22,0
 214               	.L11:
 215 011a 87E0      		ldi r24,lo8(7)
 216 011c 90E0      		ldi r25,0
 217 011e 0E94 0000 		call _test_assert
 218               	.LVL17:
 219 0122 8111      		cpse r24,__zero_reg__
 220 0124 00C0      		rjmp .L1
 159:../../test/testthd.c ****   test_assert(8, chThdSelf()->p_realprio == prio + 1,
 221               		.loc 1 159 0
 222 0126 E091 0000 		lds r30,rlist+11
 223 012a F091 0000 		lds r31,rlist+11+1
 224 012e 878D      		ldd r24,Z+31
 225 0130 90E0      		ldi r25,0
 226 0132 61E0      		ldi r22,lo8(1)
 227 0134 C817      		cp r28,r24
 228 0136 D907      		cpc r29,r25
 229 0138 01F0      		breq .L12
 230 013a 60E0      		ldi r22,0
 231               	.L12:
 232 013c 88E0      		ldi r24,lo8(8)
 233 013e 90E0      		ldi r25,0
 234 0140 0E94 0000 		call _test_assert
 235               	.LVL18:
 236 0144 8111      		cpse r24,__zero_reg__
 237 0146 00C0      		rjmp .L1
 163:../../test/testthd.c ****   p1 = chThdSetPriority(prio + 3);
 238               		.loc 1 163 0
 239 0148 8D2D      		mov r24,r13
 240 014a 8D5F      		subi r24,lo8(-(3))
 241 014c 0E94 0000 		call chThdSetPriority
 242               	.LVL19:
 164:../../test/testthd.c ****   test_assert(9, p1 == prio + 1,
 243               		.loc 1 164 0
 244 0150 90E0      		ldi r25,0
 245 0152 61E0      		ldi r22,lo8(1)
 246 0154 C817      		cp r28,r24
 247 0156 D907      		cpc r29,r25
 248 0158 01F0      		breq .L13
 249 015a 60E0      		ldi r22,0
 250               	.L13:
 251 015c 89E0      		ldi r24,lo8(9)
 252 015e 90E0      		ldi r25,0
 253               	.LVL20:
 254 0160 0E94 0000 		call _test_assert
 255               	.LVL21:
 256 0164 8111      		cpse r24,__zero_reg__
 257 0166 00C0      		rjmp .L1
 166:../../test/testthd.c ****   test_assert(10, chThdSelf()->p_prio == prio + 3,
 258               		.loc 1 166 0
 259 0168 0D5F      		subi r16,-3
 260 016a 1F4F      		sbci r17,-1
 261 016c E091 0000 		lds r30,rlist+11
 262 0170 F091 0000 		lds r31,rlist+11+1
 263 0174 8481      		ldd r24,Z+4
 264 0176 90E0      		ldi r25,0
 265 0178 61E0      		ldi r22,lo8(1)
 266 017a 8017      		cp r24,r16
 267 017c 9107      		cpc r25,r17
 268 017e 01F0      		breq .L14
 269 0180 60E0      		ldi r22,0
 270               	.L14:
 271 0182 8AE0      		ldi r24,lo8(10)
 272 0184 90E0      		ldi r25,0
 273 0186 0E94 0000 		call _test_assert
 274               	.LVL22:
 275 018a 8111      		cpse r24,__zero_reg__
 276 018c 00C0      		rjmp .L1
 168:../../test/testthd.c ****   test_assert(11, chThdSelf()->p_realprio == prio + 3,
 277               		.loc 1 168 0
 278 018e E091 0000 		lds r30,rlist+11
 279 0192 F091 0000 		lds r31,rlist+11+1
 280 0196 878D      		ldd r24,Z+31
 281 0198 90E0      		ldi r25,0
 282 019a 61E0      		ldi r22,lo8(1)
 283 019c 0817      		cp r16,r24
 284 019e 1907      		cpc r17,r25
 285 01a0 01F0      		breq .L15
 286 01a2 60E0      		ldi r22,0
 287               	.L15:
 288 01a4 8BE0      		ldi r24,lo8(11)
 289 01a6 90E0      		ldi r25,0
 290 01a8 0E94 0000 		call _test_assert
 291               	.LVL23:
 292 01ac 8111      		cpse r24,__zero_reg__
 293 01ae 00C0      		rjmp .L1
 171:../../test/testthd.c ****   chSysLock();
 294               		.loc 1 171 0
 295               	/* #APP */
 296               	 ;  171 "../../test/testthd.c" 1
 297 01b0 F894      		cli
 298               	 ;  0 "" 2
 172:../../test/testthd.c ****   chThdSelf()->p_prio = prio;
 299               		.loc 1 172 0
 300               	/* #NOAPP */
 301 01b2 E091 0000 		lds r30,rlist+11
 302 01b6 F091 0000 		lds r31,rlist+11+1
 303 01ba D482      		std Z+4,r13
 173:../../test/testthd.c ****   chThdSelf()->p_realprio = prio;
 304               		.loc 1 173 0
 305 01bc D78E      		std Z+31,r13
 174:../../test/testthd.c ****   chSysUnlock();
 306               		.loc 1 174 0
 307               	/* #APP */
 308               	 ;  174 "../../test/testthd.c" 1
 309 01be 7894      		sei
 310               	 ;  0 "" 2
 311               	/* #NOAPP */
 312 01c0 00C0      		rjmp .L1
 313               		.cfi_endproc
 314               	.LFE10:
 316               		.section	.rodata.str1.1,"aMS",@progbits,1
 317               	.LC0:
 318 0000 4400      		.string	"D"
 319               	.LC1:
 320 0002 4500      		.string	"E"
 321               	.LC2:
 322 0004 4100      		.string	"A"
 323               	.LC3:
 324 0006 4200      		.string	"B"
 325               	.LC4:
 326 0008 4300      		.string	"C"
 327               	.LC5:
 328 000a 4142 4344 		.string	"ABCDE"
 328      4500 
 329               		.text
 331               	thd2_execute:
 332               	.LFB9:
  98:../../test/testthd.c **** static void thd2_execute(void) {
 333               		.loc 1 98 0
 334               		.cfi_startproc
 335 01c2 0F93      		push r16
 336               	.LCFI8:
 337               		.cfi_def_cfa_offset 3
 338               		.cfi_offset 16, -2
 339 01c4 1F93      		push r17
 340               	.LCFI9:
 341               		.cfi_def_cfa_offset 4
 342               		.cfi_offset 17, -3
 343               	/* prologue: function */
 344               	/* frame size = 0 */
 345               	/* stack size = 2 */
 346               	.L__stack_usage = 2
 100:../../test/testthd.c ****   threads[1] = chThdCreateStatic(wa[1], WA_SIZE, chThdGetPriority()-4, thread, "D");
 347               		.loc 1 100 0
 348 01c6 E091 0000 		lds r30,rlist+11
 349 01ca F091 0000 		lds r31,rlist+11+1
 350 01ce 4481      		ldd r20,Z+4
 351 01d0 4450      		subi r20,lo8(-(-4))
 352 01d2 00E0      		ldi r16,lo8(.LC0)
 353 01d4 10E0      		ldi r17,hi8(.LC0)
 354 01d6 20E0      		ldi r18,lo8(gs(thread))
 355 01d8 30E0      		ldi r19,hi8(gs(thread))
 356 01da 67E9      		ldi r22,lo8(-105)
 357 01dc 70E0      		ldi r23,0
 358 01de 8091 0000 		lds r24,wa+2
 359 01e2 9091 0000 		lds r25,wa+2+1
 360 01e6 0E94 0000 		call chThdCreateStatic
 361               	.LVL24:
 362 01ea 9093 0000 		sts threads+2+1,r25
 363 01ee 8093 0000 		sts threads+2,r24
 101:../../test/testthd.c ****   threads[0] = chThdCreateStatic(wa[0], WA_SIZE, chThdGetPriority()-5, thread, "E");
 364               		.loc 1 101 0
 365 01f2 E091 0000 		lds r30,rlist+11
 366 01f6 F091 0000 		lds r31,rlist+11+1
 367 01fa 4481      		ldd r20,Z+4
 368 01fc 4550      		subi r20,lo8(-(-5))
 369 01fe 00E0      		ldi r16,lo8(.LC1)
 370 0200 10E0      		ldi r17,hi8(.LC1)
 371 0202 20E0      		ldi r18,lo8(gs(thread))
 372 0204 30E0      		ldi r19,hi8(gs(thread))
 373 0206 67E9      		ldi r22,lo8(-105)
 374 0208 70E0      		ldi r23,0
 375 020a 8091 0000 		lds r24,wa
 376 020e 9091 0000 		lds r25,wa+1
 377 0212 0E94 0000 		call chThdCreateStatic
 378               	.LVL25:
 379 0216 9093 0000 		sts threads+1,r25
 380 021a 8093 0000 		sts threads,r24
 102:../../test/testthd.c ****   threads[4] = chThdCreateStatic(wa[4], WA_SIZE, chThdGetPriority()-1, thread, "A");
 381               		.loc 1 102 0
 382 021e E091 0000 		lds r30,rlist+11
 383 0222 F091 0000 		lds r31,rlist+11+1
 384 0226 4481      		ldd r20,Z+4
 385 0228 4150      		subi r20,lo8(-(-1))
 386 022a 00E0      		ldi r16,lo8(.LC2)
 387 022c 10E0      		ldi r17,hi8(.LC2)
 388 022e 20E0      		ldi r18,lo8(gs(thread))
 389 0230 30E0      		ldi r19,hi8(gs(thread))
 390 0232 67E9      		ldi r22,lo8(-105)
 391 0234 70E0      		ldi r23,0
 392 0236 8091 0000 		lds r24,wa+8
 393 023a 9091 0000 		lds r25,wa+8+1
 394 023e 0E94 0000 		call chThdCreateStatic
 395               	.LVL26:
 396 0242 9093 0000 		sts threads+8+1,r25
 397 0246 8093 0000 		sts threads+8,r24
 103:../../test/testthd.c ****   threads[3] = chThdCreateStatic(wa[3], WA_SIZE, chThdGetPriority()-2, thread, "B");
 398               		.loc 1 103 0
 399 024a E091 0000 		lds r30,rlist+11
 400 024e F091 0000 		lds r31,rlist+11+1
 401 0252 4481      		ldd r20,Z+4
 402 0254 4250      		subi r20,lo8(-(-2))
 403 0256 00E0      		ldi r16,lo8(.LC3)
 404 0258 10E0      		ldi r17,hi8(.LC3)
 405 025a 20E0      		ldi r18,lo8(gs(thread))
 406 025c 30E0      		ldi r19,hi8(gs(thread))
 407 025e 67E9      		ldi r22,lo8(-105)
 408 0260 70E0      		ldi r23,0
 409 0262 8091 0000 		lds r24,wa+6
 410 0266 9091 0000 		lds r25,wa+6+1
 411 026a 0E94 0000 		call chThdCreateStatic
 412               	.LVL27:
 413 026e 9093 0000 		sts threads+6+1,r25
 414 0272 8093 0000 		sts threads+6,r24
 105:../../test/testthd.c ****   chSysLock();
 415               		.loc 1 105 0
 416               	/* #APP */
 417               	 ;  105 "../../test/testthd.c" 1
 418 0276 F894      		cli
 419               	 ;  0 "" 2
 106:../../test/testthd.c ****   threads[2] = chThdCreateI(wa[2], WA_SIZE, chThdGetPriority()-3, thread, "C");
 420               		.loc 1 106 0
 421               	/* #NOAPP */
 422 0278 E091 0000 		lds r30,rlist+11
 423 027c F091 0000 		lds r31,rlist+11+1
 424 0280 4481      		ldd r20,Z+4
 425 0282 4350      		subi r20,lo8(-(-3))
 426 0284 00E0      		ldi r16,lo8(.LC4)
 427 0286 10E0      		ldi r17,hi8(.LC4)
 428 0288 20E0      		ldi r18,lo8(gs(thread))
 429 028a 30E0      		ldi r19,hi8(gs(thread))
 430 028c 67E9      		ldi r22,lo8(-105)
 431 028e 70E0      		ldi r23,0
 432 0290 8091 0000 		lds r24,wa+4
 433 0294 9091 0000 		lds r25,wa+4+1
 434 0298 0E94 0000 		call chThdCreateI
 435               	.LVL28:
 436 029c E0E0      		ldi r30,lo8(threads+4)
 437 029e F0E0      		ldi r31,hi8(threads+4)
 438 02a0 9183      		std Z+1,r25
 439 02a2 8083      		st Z,r24
 107:../../test/testthd.c ****   chSysUnlock();
 440               		.loc 1 107 0
 441               	/* #APP */
 442               	 ;  107 "../../test/testthd.c" 1
 443 02a4 7894      		sei
 444               	 ;  0 "" 2
 108:../../test/testthd.c ****   chThdResume(threads[2]);
 445               		.loc 1 108 0
 446               	/* #NOAPP */
 447 02a6 8081      		ld r24,Z
 448 02a8 9181      		ldd r25,Z+1
 449 02aa 0E94 0000 		call chThdResume
 450               	.LVL29:
 109:../../test/testthd.c ****   test_wait_threads();
 451               		.loc 1 109 0
 452 02ae 0E94 0000 		call test_wait_threads
 453               	.LVL30:
 110:../../test/testthd.c ****   test_assert_sequence(1, "ABCDE");
 454               		.loc 1 110 0
 455 02b2 60E0      		ldi r22,lo8(.LC5)
 456 02b4 70E0      		ldi r23,hi8(.LC5)
 457 02b6 81E0      		ldi r24,lo8(1)
 458 02b8 90E0      		ldi r25,0
 459               	/* epilogue start */
 111:../../test/testthd.c **** }
 460               		.loc 1 111 0
 461 02ba 1F91      		pop r17
 462 02bc 0F91      		pop r16
 110:../../test/testthd.c ****   test_assert_sequence(1, "ABCDE");
 463               		.loc 1 110 0
 464 02be 0C94 0000 		jmp _test_assert_sequence
 465               	.LVL31:
 466               		.cfi_endproc
 467               	.LFE9:
 470               	thd1_execute:
 471               	.LFB8:
  70:../../test/testthd.c **** static void thd1_execute(void) {
 472               		.loc 1 70 0
 473               		.cfi_startproc
 474 02c2 0F93      		push r16
 475               	.LCFI10:
 476               		.cfi_def_cfa_offset 3
 477               		.cfi_offset 16, -2
 478 02c4 1F93      		push r17
 479               	.LCFI11:
 480               		.cfi_def_cfa_offset 4
 481               		.cfi_offset 17, -3
 482               	/* prologue: function */
 483               	/* frame size = 0 */
 484               	/* stack size = 2 */
 485               	.L__stack_usage = 2
  72:../../test/testthd.c ****   threads[0] = chThdCreateStatic(wa[0], WA_SIZE, chThdGetPriority()-5, thread, "E");
 486               		.loc 1 72 0
 487 02c6 E091 0000 		lds r30,rlist+11
 488 02ca F091 0000 		lds r31,rlist+11+1
 489 02ce 4481      		ldd r20,Z+4
 490 02d0 4550      		subi r20,lo8(-(-5))
 491 02d2 00E0      		ldi r16,lo8(.LC1)
 492 02d4 10E0      		ldi r17,hi8(.LC1)
 493 02d6 20E0      		ldi r18,lo8(gs(thread))
 494 02d8 30E0      		ldi r19,hi8(gs(thread))
 495 02da 67E9      		ldi r22,lo8(-105)
 496 02dc 70E0      		ldi r23,0
 497 02de 8091 0000 		lds r24,wa
 498 02e2 9091 0000 		lds r25,wa+1
 499 02e6 0E94 0000 		call chThdCreateStatic
 500               	.LVL32:
 501 02ea 9093 0000 		sts threads+1,r25
 502 02ee 8093 0000 		sts threads,r24
  73:../../test/testthd.c ****   threads[1] = chThdCreateStatic(wa[1], WA_SIZE, chThdGetPriority()-4, thread, "D");
 503               		.loc 1 73 0
 504 02f2 E091 0000 		lds r30,rlist+11
 505 02f6 F091 0000 		lds r31,rlist+11+1
 506 02fa 4481      		ldd r20,Z+4
 507 02fc 4450      		subi r20,lo8(-(-4))
 508 02fe 00E0      		ldi r16,lo8(.LC0)
 509 0300 10E0      		ldi r17,hi8(.LC0)
 510 0302 20E0      		ldi r18,lo8(gs(thread))
 511 0304 30E0      		ldi r19,hi8(gs(thread))
 512 0306 67E9      		ldi r22,lo8(-105)
 513 0308 70E0      		ldi r23,0
 514 030a 8091 0000 		lds r24,wa+2
 515 030e 9091 0000 		lds r25,wa+2+1
 516 0312 0E94 0000 		call chThdCreateStatic
 517               	.LVL33:
 518 0316 9093 0000 		sts threads+2+1,r25
 519 031a 8093 0000 		sts threads+2,r24
  74:../../test/testthd.c ****   threads[2] = chThdCreateStatic(wa[2], WA_SIZE, chThdGetPriority()-3, thread, "C");
 520               		.loc 1 74 0
 521 031e E091 0000 		lds r30,rlist+11
 522 0322 F091 0000 		lds r31,rlist+11+1
 523 0326 4481      		ldd r20,Z+4
 524 0328 4350      		subi r20,lo8(-(-3))
 525 032a 00E0      		ldi r16,lo8(.LC4)
 526 032c 10E0      		ldi r17,hi8(.LC4)
 527 032e 20E0      		ldi r18,lo8(gs(thread))
 528 0330 30E0      		ldi r19,hi8(gs(thread))
 529 0332 67E9      		ldi r22,lo8(-105)
 530 0334 70E0      		ldi r23,0
 531 0336 8091 0000 		lds r24,wa+4
 532 033a 9091 0000 		lds r25,wa+4+1
 533 033e 0E94 0000 		call chThdCreateStatic
 534               	.LVL34:
 535 0342 9093 0000 		sts threads+4+1,r25
 536 0346 8093 0000 		sts threads+4,r24
  75:../../test/testthd.c ****   threads[3] = chThdCreateStatic(wa[3], WA_SIZE, chThdGetPriority()-2, thread, "B");
 537               		.loc 1 75 0
 538 034a E091 0000 		lds r30,rlist+11
 539 034e F091 0000 		lds r31,rlist+11+1
 540 0352 4481      		ldd r20,Z+4
 541 0354 4250      		subi r20,lo8(-(-2))
 542 0356 00E0      		ldi r16,lo8(.LC3)
 543 0358 10E0      		ldi r17,hi8(.LC3)
 544 035a 20E0      		ldi r18,lo8(gs(thread))
 545 035c 30E0      		ldi r19,hi8(gs(thread))
 546 035e 67E9      		ldi r22,lo8(-105)
 547 0360 70E0      		ldi r23,0
 548 0362 8091 0000 		lds r24,wa+6
 549 0366 9091 0000 		lds r25,wa+6+1
 550 036a 0E94 0000 		call chThdCreateStatic
 551               	.LVL35:
 552 036e 9093 0000 		sts threads+6+1,r25
 553 0372 8093 0000 		sts threads+6,r24
  76:../../test/testthd.c ****   threads[4] = chThdCreateStatic(wa[4], WA_SIZE, chThdGetPriority()-1, thread, "A");
 554               		.loc 1 76 0
 555 0376 E091 0000 		lds r30,rlist+11
 556 037a F091 0000 		lds r31,rlist+11+1
 557 037e 4481      		ldd r20,Z+4
 558 0380 4150      		subi r20,lo8(-(-1))
 559 0382 00E0      		ldi r16,lo8(.LC2)
 560 0384 10E0      		ldi r17,hi8(.LC2)
 561 0386 20E0      		ldi r18,lo8(gs(thread))
 562 0388 30E0      		ldi r19,hi8(gs(thread))
 563 038a 67E9      		ldi r22,lo8(-105)
 564 038c 70E0      		ldi r23,0
 565 038e 8091 0000 		lds r24,wa+8
 566 0392 9091 0000 		lds r25,wa+8+1
 567 0396 0E94 0000 		call chThdCreateStatic
 568               	.LVL36:
 569 039a 9093 0000 		sts threads+8+1,r25
 570 039e 8093 0000 		sts threads+8,r24
  77:../../test/testthd.c ****   test_wait_threads();
 571               		.loc 1 77 0
 572 03a2 0E94 0000 		call test_wait_threads
 573               	.LVL37:
  78:../../test/testthd.c ****   test_assert_sequence(1, "ABCDE");
 574               		.loc 1 78 0
 575 03a6 60E0      		ldi r22,lo8(.LC5)
 576 03a8 70E0      		ldi r23,hi8(.LC5)
 577 03aa 81E0      		ldi r24,lo8(1)
 578 03ac 90E0      		ldi r25,0
 579               	/* epilogue start */
  79:../../test/testthd.c **** }
 580               		.loc 1 79 0
 581 03ae 1F91      		pop r17
 582 03b0 0F91      		pop r16
  78:../../test/testthd.c ****   test_assert_sequence(1, "ABCDE");
 583               		.loc 1 78 0
 584 03b2 0C94 0000 		jmp _test_assert_sequence
 585               	.LVL38:
 586               		.cfi_endproc
 587               	.LFE8:
 590               	thread:
 591               	.LFB7:
  64:../../test/testthd.c **** static msg_t thread(void *p) {
 592               		.loc 1 64 0
 593               		.cfi_startproc
 594               	.LVL39:
 595               	/* prologue: function */
 596               	/* frame size = 0 */
 597               	/* stack size = 0 */
 598               	.L__stack_usage = 0
  66:../../test/testthd.c ****   test_emit_token(*(char *)p);
 599               		.loc 1 66 0
 600 03b6 FC01      		movw r30,r24
 601 03b8 8081      		ld r24,Z
 602               	.LVL40:
 603 03ba 0E94 0000 		call test_emit_token
 604               	.LVL41:
  68:../../test/testthd.c **** }
 605               		.loc 1 68 0
 606 03be 80E0      		ldi r24,0
 607 03c0 90E0      		ldi r25,0
 608 03c2 0895      		ret
 609               		.cfi_endproc
 610               	.LFE7:
 613               	thd4_execute:
 614               	.LFB11:
 177:../../test/testthd.c **** 
 178:../../test/testthd.c **** ROMCONST struct testcase testthd3 = {
 179:../../test/testthd.c ****   "Threads, priority change",
 180:../../test/testthd.c ****   NULL,
 181:../../test/testthd.c ****   NULL,
 182:../../test/testthd.c ****   thd3_execute
 183:../../test/testthd.c **** };
 184:../../test/testthd.c **** 
 185:../../test/testthd.c **** /**
 186:../../test/testthd.c ****  * @page test_threads_004 Threads delays test
 187:../../test/testthd.c ****  *
 188:../../test/testthd.c ****  * <h2>Description</h2>
 189:../../test/testthd.c ****  * Delay APIs and associated macros are tested, the invoking thread is verified
 190:../../test/testthd.c ****  * to wake up at the exact expected time.
 191:../../test/testthd.c ****  */
 192:../../test/testthd.c **** 
 193:../../test/testthd.c **** static void thd4_execute(void) {
 615               		.loc 1 193 0
 616               		.cfi_startproc
 617 03c4 0F93      		push r16
 618               	.LCFI12:
 619               		.cfi_def_cfa_offset 3
 620               		.cfi_offset 16, -2
 621 03c6 1F93      		push r17
 622               	.LCFI13:
 623               		.cfi_def_cfa_offset 4
 624               		.cfi_offset 17, -3
 625 03c8 CF93      		push r28
 626               	.LCFI14:
 627               		.cfi_def_cfa_offset 5
 628               		.cfi_offset 28, -4
 629 03ca DF93      		push r29
 630               	.LCFI15:
 631               		.cfi_def_cfa_offset 6
 632               		.cfi_offset 29, -5
 633               	/* prologue: function */
 634               	/* frame size = 0 */
 635               	/* stack size = 4 */
 636               	.L__stack_usage = 4
 194:../../test/testthd.c ****   systime_t time;
 195:../../test/testthd.c **** 
 196:../../test/testthd.c ****   test_wait_tick();
 637               		.loc 1 196 0
 638 03cc 0E94 0000 		call test_wait_tick
 639               	.LVL42:
 197:../../test/testthd.c **** 
 198:../../test/testthd.c ****   /* Timeouts in microseconds.*/
 199:../../test/testthd.c ****   time = chTimeNow();
 640               		.loc 1 199 0
 641 03d0 C091 0000 		lds r28,vtlist+6
 642 03d4 D091 0000 		lds r29,vtlist+6+1
 643               	.LVL43:
 200:../../test/testthd.c ****   chThdSleepMicroseconds(100000);
 644               		.loc 1 200 0
 645 03d8 84E6      		ldi r24,lo8(100)
 646 03da 90E0      		ldi r25,0
 647 03dc 0E94 0000 		call chThdSleep
 648               	.LVL44:
 201:../../test/testthd.c ****   test_assert_time_window(1, time + US2ST(100000), time + US2ST(100000) + 1);
 649               		.loc 1 201 0
 650 03e0 AE01      		movw r20,r28
 651 03e2 4B59      		subi r20,-101
 652 03e4 5F4F      		sbci r21,-1
 653 03e6 BE01      		movw r22,r28
 654 03e8 6C59      		subi r22,-100
 655 03ea 7F4F      		sbci r23,-1
 656 03ec 81E0      		ldi r24,lo8(1)
 657 03ee 90E0      		ldi r25,0
 658 03f0 0E94 0000 		call _test_assert_time_window
 659               	.LVL45:
 660 03f4 8823      		tst r24
 661 03f6 01F0      		breq .L25
 662               	.LVL46:
 663               	.L21:
 664               	/* epilogue start */
 202:../../test/testthd.c **** 
 203:../../test/testthd.c ****   /* Timeouts in milliseconds.*/
 204:../../test/testthd.c ****   time = chTimeNow();
 205:../../test/testthd.c ****   chThdSleepMilliseconds(100);
 206:../../test/testthd.c ****   test_assert_time_window(2, time + MS2ST(100), time + MS2ST(100) + 1);
 207:../../test/testthd.c **** 
 208:../../test/testthd.c ****   /* Timeouts in seconds.*/
 209:../../test/testthd.c ****   time = chTimeNow();
 210:../../test/testthd.c ****   chThdSleepSeconds(1);
 211:../../test/testthd.c ****   test_assert_time_window(3, time + S2ST(1), time + S2ST(1) + 1);
 212:../../test/testthd.c **** 
 213:../../test/testthd.c ****   /* Absolute timelines.*/
 214:../../test/testthd.c ****   time = chTimeNow() + MS2ST(100);
 215:../../test/testthd.c ****   chThdSleepUntil(time);
 216:../../test/testthd.c ****   test_assert_time_window(4, time, time + 1);
 217:../../test/testthd.c **** }
 665               		.loc 1 217 0
 666 03f8 DF91      		pop r29
 667 03fa CF91      		pop r28
 668 03fc 1F91      		pop r17
 669 03fe 0F91      		pop r16
 670 0400 0895      		ret
 671               	.LVL47:
 672               	.L25:
 204:../../test/testthd.c ****   time = chTimeNow();
 673               		.loc 1 204 0
 674 0402 C091 0000 		lds r28,vtlist+6
 675 0406 D091 0000 		lds r29,vtlist+6+1
 676               	.LVL48:
 205:../../test/testthd.c ****   chThdSleepMilliseconds(100);
 677               		.loc 1 205 0
 678 040a 84E6      		ldi r24,lo8(100)
 679 040c 90E0      		ldi r25,0
 680 040e 0E94 0000 		call chThdSleep
 681               	.LVL49:
 206:../../test/testthd.c ****   test_assert_time_window(2, time + MS2ST(100), time + MS2ST(100) + 1);
 682               		.loc 1 206 0
 683 0412 AE01      		movw r20,r28
 684 0414 4B59      		subi r20,-101
 685 0416 5F4F      		sbci r21,-1
 686 0418 BE01      		movw r22,r28
 687 041a 6C59      		subi r22,-100
 688 041c 7F4F      		sbci r23,-1
 689 041e 82E0      		ldi r24,lo8(2)
 690 0420 90E0      		ldi r25,0
 691 0422 0E94 0000 		call _test_assert_time_window
 692               	.LVL50:
 693 0426 8111      		cpse r24,__zero_reg__
 694 0428 00C0      		rjmp .L21
 695               	.LBB4:
 696               	.LBB5:
 209:../../test/testthd.c ****   time = chTimeNow();
 697               		.loc 1 209 0
 698 042a C091 0000 		lds r28,vtlist+6
 699 042e D091 0000 		lds r29,vtlist+6+1
 700               	.LVL51:
 210:../../test/testthd.c ****   chThdSleepSeconds(1);
 701               		.loc 1 210 0
 702 0432 88EE      		ldi r24,lo8(-24)
 703 0434 93E0      		ldi r25,lo8(3)
 704 0436 0E94 0000 		call chThdSleep
 705               	.LVL52:
 211:../../test/testthd.c ****   test_assert_time_window(3, time + S2ST(1), time + S2ST(1) + 1);
 706               		.loc 1 211 0
 707 043a AE01      		movw r20,r28
 708 043c 4751      		subi r20,23
 709 043e 5C4F      		sbci r21,-4
 710 0440 BE01      		movw r22,r28
 711 0442 6851      		subi r22,24
 712 0444 7C4F      		sbci r23,-4
 713 0446 83E0      		ldi r24,lo8(3)
 714 0448 90E0      		ldi r25,0
 715 044a 0E94 0000 		call _test_assert_time_window
 716               	.LVL53:
 717 044e 8111      		cpse r24,__zero_reg__
 718 0450 00C0      		rjmp .L21
 214:../../test/testthd.c ****   time = chTimeNow() + MS2ST(100);
 719               		.loc 1 214 0
 720 0452 0091 0000 		lds r16,vtlist+6
 721 0456 1091 0000 		lds r17,vtlist+6+1
 722 045a E801      		movw r28,r16
 723               	.LVL54:
 724 045c CC59      		subi r28,-100
 725 045e DF4F      		sbci r29,-1
 726               	.LVL55:
 215:../../test/testthd.c ****   chThdSleepUntil(time);
 727               		.loc 1 215 0
 728 0460 CE01      		movw r24,r28
 729 0462 0E94 0000 		call chThdSleepUntil
 730               	.LVL56:
 216:../../test/testthd.c ****   test_assert_time_window(4, time, time + 1);
 731               		.loc 1 216 0
 732 0466 A801      		movw r20,r16
 733 0468 4B59      		subi r20,-101
 734 046a 5F4F      		sbci r21,-1
 735 046c BE01      		movw r22,r28
 736 046e 84E0      		ldi r24,lo8(4)
 737 0470 90E0      		ldi r25,0
 738               	/* epilogue start */
 739               	.LBE5:
 740               	.LBE4:
 741               		.loc 1 217 0
 742 0472 DF91      		pop r29
 743 0474 CF91      		pop r28
 744               	.LVL57:
 745 0476 1F91      		pop r17
 746 0478 0F91      		pop r16
 747               	.LBB7:
 748               	.LBB6:
 216:../../test/testthd.c ****   test_assert_time_window(4, time, time + 1);
 749               		.loc 1 216 0
 750 047a 0C94 0000 		jmp _test_assert_time_window
 751               	.LVL58:
 752               	.LBE6:
 753               	.LBE7:
 754               		.cfi_endproc
 755               	.LFE11:
 757               	.global	patternthd
 758               		.section	.rodata
 761               	patternthd:
 762 0000 0000      		.word	testthd1
 763 0002 0000      		.word	testthd2
 764 0004 0000      		.word	testthd3
 765 0006 0000      		.word	testthd4
 766 0008 0000      		.word	0
 767               	.global	testthd4
 768               		.section	.rodata.str1.1
 769               	.LC6:
 770 0010 5468 7265 		.string	"Threads, delays"
 770      6164 732C 
 770      2064 656C 
 770      6179 7300 
 771               		.section	.rodata
 774               	testthd4:
 775 000a 0000      		.word	.LC6
 776 000c 0000      		.word	0
 777 000e 0000      		.word	0
 778 0010 0000      		.word	gs(thd4_execute)
 779               	.global	testthd3
 780               		.section	.rodata.str1.1
 781               	.LC7:
 782 0020 5468 7265 		.string	"Threads, priority change"
 782      6164 732C 
 782      2070 7269 
 782      6F72 6974 
 782      7920 6368 
 783               		.section	.rodata
 786               	testthd3:
 787 0012 0000      		.word	.LC7
 788 0014 0000      		.word	0
 789 0016 0000      		.word	0
 790 0018 0000      		.word	gs(thd3_execute)
 791               	.global	testthd2
 792               		.section	.rodata.str1.1
 793               	.LC8:
 794 0039 5468 7265 		.string	"Threads, enqueuing test #2"
 794      6164 732C 
 794      2065 6E71 
 794      7565 7569 
 794      6E67 2074 
 795               		.section	.rodata
 798               	testthd2:
 799 001a 0000      		.word	.LC8
 800 001c 0000      		.word	0
 801 001e 0000      		.word	0
 802 0020 0000      		.word	gs(thd2_execute)
 803               	.global	testthd1
 804               		.section	.rodata.str1.1
 805               	.LC9:
 806 0054 5468 7265 		.string	"Threads, enqueuing test #1"
 806      6164 732C 
 806      2065 6E71 
 806      7565 7569 
 806      6E67 2074 
 807               		.section	.rodata
 810               	testthd1:
 811 0022 0000      		.word	.LC9
 812 0024 0000      		.word	0
 813 0026 0000      		.word	0
 814 0028 0000      		.word	gs(thd1_execute)
 815               		.text
 816               	.Letext0:
 817               		.file 2 "/usr/local/cross/lib/gcc/avr/4.7.2/include/stddef.h"
 818               		.file 3 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 819               		.file 4 "../../os/ports/GCC/AVR/chtypes.h"
 820               		.file 5 "../../os/kernel/include/chlists.h"
 821               		.file 6 "../../os/kernel/include/chthreads.h"
 822               		.file 7 "../../os/ports/GCC/AVR/chcore.h"
 823               		.file 8 "../../os/kernel/include/chvt.h"
 824               		.file 9 "../../os/kernel/include/chschd.h"
 825               		.file 10 "../../os/kernel/include/chmtx.h"
 826               		.file 11 "../../test/test.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 testthd.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:12     .text:0000000000000000 thd3_execute
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:331    .text:00000000000001c2 thd2_execute
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:590    .text:00000000000003b6 thread
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:470    .text:00000000000002c2 thd1_execute
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:613    .text:00000000000003c4 thd4_execute
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:761    .rodata:0000000000000000 patternthd
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:810    .rodata:0000000000000022 testthd1
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:798    .rodata:000000000000001a testthd2
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:786    .rodata:0000000000000012 testthd3
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccl9aBjx.s:774    .rodata:000000000000000a testthd4

UNDEFINED SYMBOLS
rlist
chThdSetPriority
_test_assert
wa
chThdCreateStatic
threads
chThdCreateI
chThdResume
test_wait_threads
_test_assert_sequence
test_emit_token
test_wait_tick
vtlist
chThdSleep
_test_assert_time_window
chThdSleepUntil
__do_copy_data

   1               		.file	"chcore.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	__vector_14
  12               	__vector_14:
  13               	.LFB7:
  14               		.file 1 "../../os/ports/GCC/AVR/chcore.c"
   1:../../os/ports/GCC/AVR/chcore.c **** /*
   2:../../os/ports/GCC/AVR/chcore.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../os/ports/GCC/AVR/chcore.c ****                  2011,2012 Giovanni Di Sirio.
   4:../../os/ports/GCC/AVR/chcore.c **** 
   5:../../os/ports/GCC/AVR/chcore.c ****     This file is part of ChibiOS/RT.
   6:../../os/ports/GCC/AVR/chcore.c **** 
   7:../../os/ports/GCC/AVR/chcore.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../os/ports/GCC/AVR/chcore.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/ports/GCC/AVR/chcore.c ****     the Free Software Foundation; either version 3 of the License, or
  10:../../os/ports/GCC/AVR/chcore.c ****     (at your option) any later version.
  11:../../os/ports/GCC/AVR/chcore.c **** 
  12:../../os/ports/GCC/AVR/chcore.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../os/ports/GCC/AVR/chcore.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../os/ports/GCC/AVR/chcore.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../os/ports/GCC/AVR/chcore.c ****     GNU General Public License for more details.
  16:../../os/ports/GCC/AVR/chcore.c **** 
  17:../../os/ports/GCC/AVR/chcore.c ****     You should have received a copy of the GNU General Public License
  18:../../os/ports/GCC/AVR/chcore.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../os/ports/GCC/AVR/chcore.c **** */
  20:../../os/ports/GCC/AVR/chcore.c **** 
  21:../../os/ports/GCC/AVR/chcore.c **** /**
  22:../../os/ports/GCC/AVR/chcore.c ****  * @file    AVR/chcore.c
  23:../../os/ports/GCC/AVR/chcore.c ****  * @brief   AVR architecture port code.
  24:../../os/ports/GCC/AVR/chcore.c ****  *
  25:../../os/ports/GCC/AVR/chcore.c ****  * @addtogroup AVR_CORE
  26:../../os/ports/GCC/AVR/chcore.c ****  * @{
  27:../../os/ports/GCC/AVR/chcore.c ****  */
  28:../../os/ports/GCC/AVR/chcore.c **** 
  29:../../os/ports/GCC/AVR/chcore.c **** #include "ch.h"
  30:../../os/ports/GCC/AVR/chcore.c **** 
  31:../../os/ports/GCC/AVR/chcore.c **** 
  32:../../os/ports/GCC/AVR/chcore.c **** /**
  33:../../os/ports/GCC/AVR/chcore.c ****  * @brief   Timer0 interrupt handler.
  34:../../os/ports/GCC/AVR/chcore.c ****  */
  35:../../os/ports/GCC/AVR/chcore.c **** CH_IRQ_HANDLER(TIMER0_COMPA_vect) {
  15               		.loc 1 35 0
  16               		.cfi_startproc
  17 0000 1F92      		push r1
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 1, -2
  21 0002 0F92      		push r0
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 0, -3
  25 0004 0FB6      		in r0,__SREG__
  26 0006 0F92      		push r0
  27 0008 1124      		clr __zero_reg__
  28 000a 2F93      		push r18
  29               	.LCFI2:
  30               		.cfi_def_cfa_offset 5
  31               		.cfi_offset 18, -4
  32 000c 3F93      		push r19
  33               	.LCFI3:
  34               		.cfi_def_cfa_offset 6
  35               		.cfi_offset 19, -5
  36 000e 4F93      		push r20
  37               	.LCFI4:
  38               		.cfi_def_cfa_offset 7
  39               		.cfi_offset 20, -6
  40 0010 5F93      		push r21
  41               	.LCFI5:
  42               		.cfi_def_cfa_offset 8
  43               		.cfi_offset 21, -7
  44 0012 6F93      		push r22
  45               	.LCFI6:
  46               		.cfi_def_cfa_offset 9
  47               		.cfi_offset 22, -8
  48 0014 7F93      		push r23
  49               	.LCFI7:
  50               		.cfi_def_cfa_offset 10
  51               		.cfi_offset 23, -9
  52 0016 8F93      		push r24
  53               	.LCFI8:
  54               		.cfi_def_cfa_offset 11
  55               		.cfi_offset 24, -10
  56 0018 9F93      		push r25
  57               	.LCFI9:
  58               		.cfi_def_cfa_offset 12
  59               		.cfi_offset 25, -11
  60 001a AF93      		push r26
  61               	.LCFI10:
  62               		.cfi_def_cfa_offset 13
  63               		.cfi_offset 26, -12
  64 001c BF93      		push r27
  65               	.LCFI11:
  66               		.cfi_def_cfa_offset 14
  67               		.cfi_offset 27, -13
  68 001e EF93      		push r30
  69               	.LCFI12:
  70               		.cfi_def_cfa_offset 15
  71               		.cfi_offset 30, -14
  72 0020 FF93      		push r31
  73               	.LCFI13:
  74               		.cfi_def_cfa_offset 16
  75               		.cfi_offset 31, -15
  76               	/* prologue: Signal */
  77               	/* frame size = 0 */
  78               	/* stack size = 15 */
  79               	.L__stack_usage = 15
  36:../../os/ports/GCC/AVR/chcore.c **** 
  37:../../os/ports/GCC/AVR/chcore.c ****   CH_IRQ_PROLOGUE();
  80               		.loc 1 37 0
  38:../../os/ports/GCC/AVR/chcore.c **** 
  39:../../os/ports/GCC/AVR/chcore.c ****   chSysLockFromIsr();
  40:../../os/ports/GCC/AVR/chcore.c ****   chSysTimerHandlerI();
  81               		.loc 1 40 0
  82 0022 0E94 0000 		call chSysTimerHandlerI
  83               	.LVL0:
  41:../../os/ports/GCC/AVR/chcore.c ****   chSysUnlockFromIsr();
  42:../../os/ports/GCC/AVR/chcore.c **** 
  43:../../os/ports/GCC/AVR/chcore.c ****   CH_IRQ_EPILOGUE();
  84               		.loc 1 43 0
  85 0026 0E94 0000 		call chSchIsPreemptionRequired
  86               	.LVL1:
  87 002a 8111      		cpse r24,__zero_reg__
  88               		.loc 1 43 0 is_stmt 0 discriminator 1
  89 002c 0E94 0000 		call chSchDoReschedule
  90               	.LVL2:
  91               	.L1:
  92               	/* epilogue start */
  44:../../os/ports/GCC/AVR/chcore.c **** }
  93               		.loc 1 44 0 is_stmt 1
  94 0030 FF91      		pop r31
  95 0032 EF91      		pop r30
  96 0034 BF91      		pop r27
  97 0036 AF91      		pop r26
  98 0038 9F91      		pop r25
  99 003a 8F91      		pop r24
 100 003c 7F91      		pop r23
 101 003e 6F91      		pop r22
 102 0040 5F91      		pop r21
 103 0042 4F91      		pop r20
 104 0044 3F91      		pop r19
 105 0046 2F91      		pop r18
 106 0048 0F90      		pop r0
 107 004a 0FBE      		out __SREG__,r0
 108 004c 0F90      		pop r0
 109 004e 1F90      		pop r1
 110 0050 1895      		reti
 111               		.cfi_endproc
 112               	.LFE7:
 114               		.weak	port_switch
 116               	port_switch:
 117               	.LFB8:
  45:../../os/ports/GCC/AVR/chcore.c **** 
  46:../../os/ports/GCC/AVR/chcore.c **** 
  47:../../os/ports/GCC/AVR/chcore.c **** /**
  48:../../os/ports/GCC/AVR/chcore.c ****  * @brief   Performs a context switch between two threads.
  49:../../os/ports/GCC/AVR/chcore.c ****  * @details This is the most critical code in any port, this function
  50:../../os/ports/GCC/AVR/chcore.c ****  *          is responsible for the context switch between 2 threads.
  51:../../os/ports/GCC/AVR/chcore.c ****  * @note    The implementation of this code affects <b>directly</b> the context
  52:../../os/ports/GCC/AVR/chcore.c ****  *          switch performance so optimize here as much as you can.
  53:../../os/ports/GCC/AVR/chcore.c ****  * @note    The function is declared as a weak symbol, it is possible to
  54:../../os/ports/GCC/AVR/chcore.c ****  *          redefine it in your application code.
  55:../../os/ports/GCC/AVR/chcore.c ****  *
  56:../../os/ports/GCC/AVR/chcore.c ****  * @param[in] ntp       the thread to be switched in
  57:../../os/ports/GCC/AVR/chcore.c ****  * @param[in] otp       the thread to be switched out
  58:../../os/ports/GCC/AVR/chcore.c ****  */
  59:../../os/ports/GCC/AVR/chcore.c **** #if !defined(__DOXYGEN__)
  60:../../os/ports/GCC/AVR/chcore.c **** __attribute__((naked, weak))
  61:../../os/ports/GCC/AVR/chcore.c **** #endif
  62:../../os/ports/GCC/AVR/chcore.c **** void port_switch(Thread *ntp, Thread *otp) {
 118               		.loc 1 62 0
 119               		.cfi_startproc
 120               	.LVL3:
 121               	/* prologue: naked */
 122               	/* frame size = 0 */
 123               	/* stack size = 0 */
 124               	.L__stack_usage = 0
  63:../../os/ports/GCC/AVR/chcore.c **** 
  64:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r2");
 125               		.loc 1 64 0
 126               	/* #APP */
 127               	 ;  64 "../../os/ports/GCC/AVR/chcore.c" 1
 128 0052 2F92      		push    r2
 129               	 ;  0 "" 2
  65:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r3");
 130               		.loc 1 65 0
 131               	 ;  65 "../../os/ports/GCC/AVR/chcore.c" 1
 132 0054 3F92      		push    r3
 133               	 ;  0 "" 2
  66:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r4");
 134               		.loc 1 66 0
 135               	 ;  66 "../../os/ports/GCC/AVR/chcore.c" 1
 136 0056 4F92      		push    r4
 137               	 ;  0 "" 2
  67:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r5");
 138               		.loc 1 67 0
 139               	 ;  67 "../../os/ports/GCC/AVR/chcore.c" 1
 140 0058 5F92      		push    r5
 141               	 ;  0 "" 2
  68:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r6");
 142               		.loc 1 68 0
 143               	 ;  68 "../../os/ports/GCC/AVR/chcore.c" 1
 144 005a 6F92      		push    r6
 145               	 ;  0 "" 2
  69:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r7");
 146               		.loc 1 69 0
 147               	 ;  69 "../../os/ports/GCC/AVR/chcore.c" 1
 148 005c 7F92      		push    r7
 149               	 ;  0 "" 2
  70:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r8");
 150               		.loc 1 70 0
 151               	 ;  70 "../../os/ports/GCC/AVR/chcore.c" 1
 152 005e 8F92      		push    r8
 153               	 ;  0 "" 2
  71:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r9");
 154               		.loc 1 71 0
 155               	 ;  71 "../../os/ports/GCC/AVR/chcore.c" 1
 156 0060 9F92      		push    r9
 157               	 ;  0 "" 2
  72:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r10");
 158               		.loc 1 72 0
 159               	 ;  72 "../../os/ports/GCC/AVR/chcore.c" 1
 160 0062 AF92      		push    r10
 161               	 ;  0 "" 2
  73:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r11");
 162               		.loc 1 73 0
 163               	 ;  73 "../../os/ports/GCC/AVR/chcore.c" 1
 164 0064 BF92      		push    r11
 165               	 ;  0 "" 2
  74:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r12");
 166               		.loc 1 74 0
 167               	 ;  74 "../../os/ports/GCC/AVR/chcore.c" 1
 168 0066 CF92      		push    r12
 169               	 ;  0 "" 2
  75:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r13");
 170               		.loc 1 75 0
 171               	 ;  75 "../../os/ports/GCC/AVR/chcore.c" 1
 172 0068 DF92      		push    r13
 173               	 ;  0 "" 2
  76:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r14");
 174               		.loc 1 76 0
 175               	 ;  76 "../../os/ports/GCC/AVR/chcore.c" 1
 176 006a EF92      		push    r14
 177               	 ;  0 "" 2
  77:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r15");
 178               		.loc 1 77 0
 179               	 ;  77 "../../os/ports/GCC/AVR/chcore.c" 1
 180 006c FF92      		push    r15
 181               	 ;  0 "" 2
  78:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r16");
 182               		.loc 1 78 0
 183               	 ;  78 "../../os/ports/GCC/AVR/chcore.c" 1
 184 006e 0F93      		push    r16
 185               	 ;  0 "" 2
  79:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r17");
 186               		.loc 1 79 0
 187               	 ;  79 "../../os/ports/GCC/AVR/chcore.c" 1
 188 0070 1F93      		push    r17
 189               	 ;  0 "" 2
  80:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r28");
 190               		.loc 1 80 0
 191               	 ;  80 "../../os/ports/GCC/AVR/chcore.c" 1
 192 0072 CF93      		push    r28
 193               	 ;  0 "" 2
  81:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("push    r29");
 194               		.loc 1 81 0
 195               	 ;  81 "../../os/ports/GCC/AVR/chcore.c" 1
 196 0074 DF93      		push    r29
 197               	 ;  0 "" 2
  82:../../os/ports/GCC/AVR/chcore.c **** 
  83:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("movw    r30, r22");
 198               		.loc 1 83 0
 199               	 ;  83 "../../os/ports/GCC/AVR/chcore.c" 1
 200 0076 FB01      		movw    r30, r22
 201               	 ;  0 "" 2
  84:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("in      r0, 0x3d");
 202               		.loc 1 84 0
 203               	 ;  84 "../../os/ports/GCC/AVR/chcore.c" 1
 204 0078 0DB6      		in      r0, 0x3d
 205               	 ;  0 "" 2
  85:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("std     Z+5, r0");
 206               		.loc 1 85 0
 207               	 ;  85 "../../os/ports/GCC/AVR/chcore.c" 1
 208 007a 0582      		std     Z+5, r0
 209               	 ;  0 "" 2
  86:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("in      r0, 0x3e");
 210               		.loc 1 86 0
 211               	 ;  86 "../../os/ports/GCC/AVR/chcore.c" 1
 212 007c 0EB6      		in      r0, 0x3e
 213               	 ;  0 "" 2
  87:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("std     Z+6, r0");
 214               		.loc 1 87 0
 215               	 ;  87 "../../os/ports/GCC/AVR/chcore.c" 1
 216 007e 0682      		std     Z+6, r0
 217               	 ;  0 "" 2
  88:../../os/ports/GCC/AVR/chcore.c **** 
  89:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("movw    r30, r24");
 218               		.loc 1 89 0
 219               	 ;  89 "../../os/ports/GCC/AVR/chcore.c" 1
 220 0080 FC01      		movw    r30, r24
 221               	 ;  0 "" 2
  90:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("ldd     r0, Z+5");
 222               		.loc 1 90 0
 223               	 ;  90 "../../os/ports/GCC/AVR/chcore.c" 1
 224 0082 0580      		ldd     r0, Z+5
 225               	 ;  0 "" 2
  91:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("out     0x3d, r0");
 226               		.loc 1 91 0
 227               	 ;  91 "../../os/ports/GCC/AVR/chcore.c" 1
 228 0084 0DBE      		out     0x3d, r0
 229               	 ;  0 "" 2
  92:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("ldd     r0, Z+6");
 230               		.loc 1 92 0
 231               	 ;  92 "../../os/ports/GCC/AVR/chcore.c" 1
 232 0086 0680      		ldd     r0, Z+6
 233               	 ;  0 "" 2
  93:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("out     0x3e, r0");
 234               		.loc 1 93 0
 235               	 ;  93 "../../os/ports/GCC/AVR/chcore.c" 1
 236 0088 0EBE      		out     0x3e, r0
 237               	 ;  0 "" 2
  94:../../os/ports/GCC/AVR/chcore.c **** 
  95:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r29");
 238               		.loc 1 95 0
 239               	 ;  95 "../../os/ports/GCC/AVR/chcore.c" 1
 240 008a DF91      		pop     r29
 241               	 ;  0 "" 2
  96:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r28");
 242               		.loc 1 96 0
 243               	 ;  96 "../../os/ports/GCC/AVR/chcore.c" 1
 244 008c CF91      		pop     r28
 245               	 ;  0 "" 2
  97:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r17");
 246               		.loc 1 97 0
 247               	 ;  97 "../../os/ports/GCC/AVR/chcore.c" 1
 248 008e 1F91      		pop     r17
 249               	 ;  0 "" 2
  98:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r16");
 250               		.loc 1 98 0
 251               	 ;  98 "../../os/ports/GCC/AVR/chcore.c" 1
 252 0090 0F91      		pop     r16
 253               	 ;  0 "" 2
  99:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r15");
 254               		.loc 1 99 0
 255               	 ;  99 "../../os/ports/GCC/AVR/chcore.c" 1
 256 0092 FF90      		pop     r15
 257               	 ;  0 "" 2
 100:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r14");
 258               		.loc 1 100 0
 259               	 ;  100 "../../os/ports/GCC/AVR/chcore.c" 1
 260 0094 EF90      		pop     r14
 261               	 ;  0 "" 2
 101:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r13");
 262               		.loc 1 101 0
 263               	 ;  101 "../../os/ports/GCC/AVR/chcore.c" 1
 264 0096 DF90      		pop     r13
 265               	 ;  0 "" 2
 102:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r12");
 266               		.loc 1 102 0
 267               	 ;  102 "../../os/ports/GCC/AVR/chcore.c" 1
 268 0098 CF90      		pop     r12
 269               	 ;  0 "" 2
 103:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r11");
 270               		.loc 1 103 0
 271               	 ;  103 "../../os/ports/GCC/AVR/chcore.c" 1
 272 009a BF90      		pop     r11
 273               	 ;  0 "" 2
 104:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r10");
 274               		.loc 1 104 0
 275               	 ;  104 "../../os/ports/GCC/AVR/chcore.c" 1
 276 009c AF90      		pop     r10
 277               	 ;  0 "" 2
 105:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r9");
 278               		.loc 1 105 0
 279               	 ;  105 "../../os/ports/GCC/AVR/chcore.c" 1
 280 009e 9F90      		pop     r9
 281               	 ;  0 "" 2
 106:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r8");
 282               		.loc 1 106 0
 283               	 ;  106 "../../os/ports/GCC/AVR/chcore.c" 1
 284 00a0 8F90      		pop     r8
 285               	 ;  0 "" 2
 107:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r7");
 286               		.loc 1 107 0
 287               	 ;  107 "../../os/ports/GCC/AVR/chcore.c" 1
 288 00a2 7F90      		pop     r7
 289               	 ;  0 "" 2
 108:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r6");
 290               		.loc 1 108 0
 291               	 ;  108 "../../os/ports/GCC/AVR/chcore.c" 1
 292 00a4 6F90      		pop     r6
 293               	 ;  0 "" 2
 109:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r5");
 294               		.loc 1 109 0
 295               	 ;  109 "../../os/ports/GCC/AVR/chcore.c" 1
 296 00a6 5F90      		pop     r5
 297               	 ;  0 "" 2
 110:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r4");
 298               		.loc 1 110 0
 299               	 ;  110 "../../os/ports/GCC/AVR/chcore.c" 1
 300 00a8 4F90      		pop     r4
 301               	 ;  0 "" 2
 111:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r3");
 302               		.loc 1 111 0
 303               	 ;  111 "../../os/ports/GCC/AVR/chcore.c" 1
 304 00aa 3F90      		pop     r3
 305               	 ;  0 "" 2
 112:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("pop     r2");
 306               		.loc 1 112 0
 307               	 ;  112 "../../os/ports/GCC/AVR/chcore.c" 1
 308 00ac 2F90      		pop     r2
 309               	 ;  0 "" 2
 113:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("ret");
 310               		.loc 1 113 0
 311               	 ;  113 "../../os/ports/GCC/AVR/chcore.c" 1
 312 00ae 0895      		ret
 313               	 ;  0 "" 2
 314               	/* epilogue start */
 114:../../os/ports/GCC/AVR/chcore.c **** }
 315               		.loc 1 114 0
 316               	/* #NOAPP */
 317               		.cfi_endproc
 318               	.LFE8:
 320               		.weak	port_halt
 322               	port_halt:
 323               	.LFB9:
 115:../../os/ports/GCC/AVR/chcore.c **** 
 116:../../os/ports/GCC/AVR/chcore.c **** /**
 117:../../os/ports/GCC/AVR/chcore.c ****  * @brief   Halts the system.
 118:../../os/ports/GCC/AVR/chcore.c ****  * @details This function is invoked by the operating system when an
 119:../../os/ports/GCC/AVR/chcore.c ****  *          unrecoverable error is detected (for example because a programming
 120:../../os/ports/GCC/AVR/chcore.c ****  *          error in the application code that triggers an assertion while in
 121:../../os/ports/GCC/AVR/chcore.c ****  *          debug mode).
 122:../../os/ports/GCC/AVR/chcore.c ****  * @note    The function is declared as a weak symbol, it is possible to
 123:../../os/ports/GCC/AVR/chcore.c ****  *          redefine it in your application code.
 124:../../os/ports/GCC/AVR/chcore.c ****  */
 125:../../os/ports/GCC/AVR/chcore.c **** #if !defined(__DOXYGEN__)
 126:../../os/ports/GCC/AVR/chcore.c **** __attribute__((weak))
 127:../../os/ports/GCC/AVR/chcore.c **** #endif
 128:../../os/ports/GCC/AVR/chcore.c **** void port_halt(void) {
 324               		.loc 1 128 0
 325               		.cfi_startproc
 326               	/* prologue: function */
 327               	/* frame size = 0 */
 328               	/* stack size = 0 */
 329               	.L__stack_usage = 0
 129:../../os/ports/GCC/AVR/chcore.c **** 
 130:../../os/ports/GCC/AVR/chcore.c ****   port_disable();
 330               		.loc 1 130 0
 331               	/* #APP */
 332               	 ;  130 "../../os/ports/GCC/AVR/chcore.c" 1
 333 00b0 F894      		cli
 334               	 ;  0 "" 2
 335               	/* #NOAPP */
 336               	.L9:
 337 00b2 00C0      		rjmp .L9
 338               		.cfi_endproc
 339               	.LFE9:
 341               	.global	_port_thread_start
 343               	_port_thread_start:
 344               	.LFB10:
 131:../../os/ports/GCC/AVR/chcore.c ****   while (TRUE) {
 132:../../os/ports/GCC/AVR/chcore.c ****   }
 133:../../os/ports/GCC/AVR/chcore.c **** }
 134:../../os/ports/GCC/AVR/chcore.c **** 
 135:../../os/ports/GCC/AVR/chcore.c **** /**
 136:../../os/ports/GCC/AVR/chcore.c ****  * @brief   Start a thread by invoking its work function.
 137:../../os/ports/GCC/AVR/chcore.c ****  * @details If the work function returns @p chThdExit() is automatically
 138:../../os/ports/GCC/AVR/chcore.c ****  *          invoked.
 139:../../os/ports/GCC/AVR/chcore.c ****  */
 140:../../os/ports/GCC/AVR/chcore.c **** void _port_thread_start(void) {
 345               		.loc 1 140 0
 346               		.cfi_startproc
 347               	/* prologue: function */
 348               	/* frame size = 0 */
 349               	/* stack size = 0 */
 350               	.L__stack_usage = 0
 141:../../os/ports/GCC/AVR/chcore.c **** 
 142:../../os/ports/GCC/AVR/chcore.c ****   chSysUnlock();
 351               		.loc 1 142 0
 352               	/* #APP */
 353               	 ;  142 "../../os/ports/GCC/AVR/chcore.c" 1
 354 00b4 7894      		sei
 355               	 ;  0 "" 2
 143:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("movw    r24, r4");
 356               		.loc 1 143 0
 357               	 ;  143 "../../os/ports/GCC/AVR/chcore.c" 1
 358 00b6 C201      		movw    r24, r4
 359               	 ;  0 "" 2
 144:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("movw    r30, r2");
 360               		.loc 1 144 0
 361               	 ;  144 "../../os/ports/GCC/AVR/chcore.c" 1
 362 00b8 F101      		movw    r30, r2
 363               	 ;  0 "" 2
 145:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("icall");
 364               		.loc 1 145 0
 365               	 ;  145 "../../os/ports/GCC/AVR/chcore.c" 1
 366 00ba 0995      		icall
 367               	 ;  0 "" 2
 146:../../os/ports/GCC/AVR/chcore.c ****   asm volatile ("call    chThdExit");
 368               		.loc 1 146 0
 369               	 ;  146 "../../os/ports/GCC/AVR/chcore.c" 1
 370 00bc 0E94 0000 		call    chThdExit
 371               	 ;  0 "" 2
 372               	/* #NOAPP */
 373 00c0 0895      		ret
 374               		.cfi_endproc
 375               	.LFE10:
 377               	.Letext0:
 378               		.file 2 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 379               		.file 3 "../../os/ports/GCC/AVR/chtypes.h"
 380               		.file 4 "../../os/kernel/include/chlists.h"
 381               		.file 5 "../../os/kernel/include/chthreads.h"
 382               		.file 6 "../../os/ports/GCC/AVR/chcore.h"
 383               		.file 7 "../../os/kernel/include/chmtx.h"
 384               		.file 8 "../../os/kernel/include/chsys.h"
 385               		.file 9 "../../os/kernel/include/chschd.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chcore.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:12     .text:0000000000000000 __vector_14
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:116    .text:0000000000000052 port_switch
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:322    .text:00000000000000b0 port_halt
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cckFE0B5.s:343    .text:00000000000000b4 _port_thread_start

UNDEFINED SYMBOLS
chSysTimerHandlerI
chSchIsPreemptionRequired
chSchDoReschedule
chThdExit

   1               		.file	"chmboxes.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	chMBInit
  12               	chMBInit:
  13               	.LFB7:
  14               		.file 1 "../../os/kernel/src/chmboxes.c"
   1:../../os/kernel/src/chmboxes.c **** /*
   2:../../os/kernel/src/chmboxes.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../os/kernel/src/chmboxes.c ****                  2011,2012 Giovanni Di Sirio.
   4:../../os/kernel/src/chmboxes.c **** 
   5:../../os/kernel/src/chmboxes.c ****     This file is part of ChibiOS/RT.
   6:../../os/kernel/src/chmboxes.c **** 
   7:../../os/kernel/src/chmboxes.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../os/kernel/src/chmboxes.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/kernel/src/chmboxes.c ****     the Free Software Foundation; either version 3 of the License, or
  10:../../os/kernel/src/chmboxes.c ****     (at your option) any later version.
  11:../../os/kernel/src/chmboxes.c **** 
  12:../../os/kernel/src/chmboxes.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../os/kernel/src/chmboxes.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../os/kernel/src/chmboxes.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../os/kernel/src/chmboxes.c ****     GNU General Public License for more details.
  16:../../os/kernel/src/chmboxes.c **** 
  17:../../os/kernel/src/chmboxes.c ****     You should have received a copy of the GNU General Public License
  18:../../os/kernel/src/chmboxes.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../os/kernel/src/chmboxes.c **** */
  20:../../os/kernel/src/chmboxes.c **** 
  21:../../os/kernel/src/chmboxes.c **** /**
  22:../../os/kernel/src/chmboxes.c ****  * @file    chmboxes.c
  23:../../os/kernel/src/chmboxes.c ****  * @brief   Mailboxes code.
  24:../../os/kernel/src/chmboxes.c ****  *
  25:../../os/kernel/src/chmboxes.c ****  * @addtogroup mailboxes
  26:../../os/kernel/src/chmboxes.c ****  * @details Asynchronous messages.
  27:../../os/kernel/src/chmboxes.c ****  *          <h2>Operation mode</h2>
  28:../../os/kernel/src/chmboxes.c ****  *          A mailbox is an asynchronous communication mechanism.<br>
  29:../../os/kernel/src/chmboxes.c ****  *          Operations defined for mailboxes:
  30:../../os/kernel/src/chmboxes.c ****  *          - <b>Post</b>: Posts a message on the mailbox in FIFO order.
  31:../../os/kernel/src/chmboxes.c ****  *          - <b>Post Ahead</b>: Posts a message on the mailbox with urgent
  32:../../os/kernel/src/chmboxes.c ****  *            priority.
  33:../../os/kernel/src/chmboxes.c ****  *          - <b>Fetch</b>: A message is fetched from the mailbox and removed
  34:../../os/kernel/src/chmboxes.c ****  *            from the queue.
  35:../../os/kernel/src/chmboxes.c ****  *          - <b>Reset</b>: The mailbox is emptied and all the stored messages
  36:../../os/kernel/src/chmboxes.c ****  *            are lost.
  37:../../os/kernel/src/chmboxes.c ****  *          .
  38:../../os/kernel/src/chmboxes.c ****  *          A message is a variable of type msg_t that is guaranteed to have
  39:../../os/kernel/src/chmboxes.c ****  *          the same size of and be compatible with (data) pointers (anyway an
  40:../../os/kernel/src/chmboxes.c ****  *          explicit cast is needed).
  41:../../os/kernel/src/chmboxes.c ****  *          If larger messages need to be exchanged then a pointer to a
  42:../../os/kernel/src/chmboxes.c ****  *          structure can be posted in the mailbox but the posting side has
  43:../../os/kernel/src/chmboxes.c ****  *          no predefined way to know when the message has been processed. A
  44:../../os/kernel/src/chmboxes.c ****  *          possible approach is to allocate memory (from a memory pool for
  45:../../os/kernel/src/chmboxes.c ****  *          example) from the posting side and free it on the fetching side.
  46:../../os/kernel/src/chmboxes.c ****  *          Another approach is to set a "done" flag into the structure pointed
  47:../../os/kernel/src/chmboxes.c ****  *          by the message.
  48:../../os/kernel/src/chmboxes.c ****  * @pre     In order to use the mailboxes APIs the @p CH_USE_MAILBOXES option
  49:../../os/kernel/src/chmboxes.c ****  *          must be enabled in @p chconf.h.
  50:../../os/kernel/src/chmboxes.c ****  * @{
  51:../../os/kernel/src/chmboxes.c ****  */
  52:../../os/kernel/src/chmboxes.c **** 
  53:../../os/kernel/src/chmboxes.c **** #include "ch.h"
  54:../../os/kernel/src/chmboxes.c **** 
  55:../../os/kernel/src/chmboxes.c **** #if CH_USE_MAILBOXES || defined(__DOXYGEN__)
  56:../../os/kernel/src/chmboxes.c **** /**
  57:../../os/kernel/src/chmboxes.c ****  * @brief   Initializes a Mailbox object.
  58:../../os/kernel/src/chmboxes.c ****  *
  59:../../os/kernel/src/chmboxes.c ****  * @param[out] mbp      the pointer to the Mailbox structure to be initialized
  60:../../os/kernel/src/chmboxes.c ****  * @param[in] buf       pointer to the messages buffer as an array of @p msg_t
  61:../../os/kernel/src/chmboxes.c ****  * @param[in] n         number of elements in the buffer array
  62:../../os/kernel/src/chmboxes.c ****  *
  63:../../os/kernel/src/chmboxes.c ****  * @init
  64:../../os/kernel/src/chmboxes.c ****  */
  65:../../os/kernel/src/chmboxes.c **** void chMBInit(Mailbox *mbp, msg_t *buf, cnt_t n) {
  15               		.loc 1 65 0
  16               		.cfi_startproc
  17               	.LVL0:
  18 0000 CF93      		push r28
  19               	.LCFI0:
  20               		.cfi_def_cfa_offset 3
  21               		.cfi_offset 28, -2
  22 0002 DF93      		push r29
  23               	.LCFI1:
  24               		.cfi_def_cfa_offset 4
  25               		.cfi_offset 29, -3
  26               	/* prologue: function */
  27               	/* frame size = 0 */
  28               	/* stack size = 2 */
  29               	.L__stack_usage = 2
  30 0004 EC01      		movw r28,r24
  66:../../os/kernel/src/chmboxes.c **** 
  67:../../os/kernel/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (buf != NULL) && (n > 0), "chMBInit");
  68:../../os/kernel/src/chmboxes.c **** 
  69:../../os/kernel/src/chmboxes.c ****   mbp->mb_buffer = mbp->mb_wrptr = mbp->mb_rdptr = buf;
  31               		.loc 1 69 0
  32 0006 7F83      		std Y+7,r23
  33 0008 6E83      		std Y+6,r22
  34 000a 7D83      		std Y+5,r23
  35 000c 6C83      		std Y+4,r22
  36 000e 7983      		std Y+1,r23
  37 0010 6883      		st Y,r22
  70:../../os/kernel/src/chmboxes.c ****   mbp->mb_top = &buf[n];
  38               		.loc 1 70 0
  39 0012 242F      		mov r18,r20
  40 0014 220F      		lsl r18
  41 0016 330B      		sbc r19,r19
  42 0018 260F      		add r18,r22
  43 001a 371F      		adc r19,r23
  44 001c 3B83      		std Y+3,r19
  45 001e 2A83      		std Y+2,r18
  71:../../os/kernel/src/chmboxes.c ****   chSemInit(&mbp->mb_emptysem, n);
  46               		.loc 1 71 0
  47 0020 642F      		mov r22,r20
  48               	.LVL1:
  49 0022 0D96      		adiw r24,13
  50               	.LVL2:
  51 0024 0E94 0000 		call chSemInit
  52               	.LVL3:
  72:../../os/kernel/src/chmboxes.c ****   chSemInit(&mbp->mb_fullsem, 0);
  53               		.loc 1 72 0
  54 0028 60E0      		ldi r22,0
  55 002a CE01      		movw r24,r28
  56 002c 0896      		adiw r24,8
  57               	/* epilogue start */
  73:../../os/kernel/src/chmboxes.c **** }
  58               		.loc 1 73 0
  59 002e DF91      		pop r29
  60 0030 CF91      		pop r28
  61               	.LVL4:
  72:../../os/kernel/src/chmboxes.c ****   chSemInit(&mbp->mb_fullsem, 0);
  62               		.loc 1 72 0
  63 0032 0C94 0000 		jmp chSemInit
  64               	.LVL5:
  65               		.cfi_endproc
  66               	.LFE7:
  68               	.global	chMBReset
  70               	chMBReset:
  71               	.LFB8:
  74:../../os/kernel/src/chmboxes.c **** 
  75:../../os/kernel/src/chmboxes.c **** /**
  76:../../os/kernel/src/chmboxes.c ****  * @brief   Resets a Mailbox object.
  77:../../os/kernel/src/chmboxes.c ****  * @details All the waiting threads are resumed with status @p RDY_RESET and
  78:../../os/kernel/src/chmboxes.c ****  *          the queued messages are lost.
  79:../../os/kernel/src/chmboxes.c ****  *
  80:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
  81:../../os/kernel/src/chmboxes.c ****  *
  82:../../os/kernel/src/chmboxes.c ****  * @api
  83:../../os/kernel/src/chmboxes.c ****  */
  84:../../os/kernel/src/chmboxes.c **** void chMBReset(Mailbox *mbp) {
  72               		.loc 1 84 0
  73               		.cfi_startproc
  74               	.LVL6:
  75 0036 CF93      		push r28
  76               	.LCFI2:
  77               		.cfi_def_cfa_offset 3
  78               		.cfi_offset 28, -2
  79 0038 DF93      		push r29
  80               	.LCFI3:
  81               		.cfi_def_cfa_offset 4
  82               		.cfi_offset 29, -3
  83               	/* prologue: function */
  84               	/* frame size = 0 */
  85               	/* stack size = 2 */
  86               	.L__stack_usage = 2
  87 003a EC01      		movw r28,r24
  85:../../os/kernel/src/chmboxes.c **** 
  86:../../os/kernel/src/chmboxes.c ****   chDbgCheck(mbp != NULL, "chMBReset");
  87:../../os/kernel/src/chmboxes.c **** 
  88:../../os/kernel/src/chmboxes.c ****   chSysLock();
  88               		.loc 1 88 0
  89               	/* #APP */
  90               	 ;  88 "../../os/kernel/src/chmboxes.c" 1
  91 003c F894      		cli
  92               	 ;  0 "" 2
  89:../../os/kernel/src/chmboxes.c ****   mbp->mb_wrptr = mbp->mb_rdptr = mbp->mb_buffer;
  93               		.loc 1 89 0
  94               	/* #NOAPP */
  95 003e 8881      		ld r24,Y
  96 0040 9981      		ldd r25,Y+1
  97               	.LVL7:
  98 0042 9F83      		std Y+7,r25
  99 0044 8E83      		std Y+6,r24
 100 0046 9D83      		std Y+5,r25
 101 0048 8C83      		std Y+4,r24
  90:../../os/kernel/src/chmboxes.c ****   chSemResetI(&mbp->mb_emptysem, mbp->mb_top - mbp->mb_buffer);
 102               		.loc 1 90 0
 103 004a 6A81      		ldd r22,Y+2
 104 004c 7B81      		ldd r23,Y+3
 105 004e 681B      		sub r22,r24
 106 0050 790B      		sbc r23,r25
 107 0052 7595      		asr r23
 108 0054 6795      		ror r22
 109 0056 CE01      		movw r24,r28
 110 0058 0D96      		adiw r24,13
 111 005a 0E94 0000 		call chSemResetI
 112               	.LVL8:
  91:../../os/kernel/src/chmboxes.c ****   chSemResetI(&mbp->mb_fullsem, 0);
 113               		.loc 1 91 0
 114 005e 60E0      		ldi r22,0
 115 0060 CE01      		movw r24,r28
 116 0062 0896      		adiw r24,8
 117 0064 0E94 0000 		call chSemResetI
 118               	.LVL9:
  92:../../os/kernel/src/chmboxes.c ****   chSchRescheduleS();
 119               		.loc 1 92 0
 120 0068 0E94 0000 		call chSchRescheduleS
 121               	.LVL10:
  93:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 122               		.loc 1 93 0
 123               	/* #APP */
 124               	 ;  93 "../../os/kernel/src/chmboxes.c" 1
 125 006c 7894      		sei
 126               	 ;  0 "" 2
 127               	/* epilogue start */
  94:../../os/kernel/src/chmboxes.c **** }
 128               		.loc 1 94 0
 129               	/* #NOAPP */
 130 006e DF91      		pop r29
 131 0070 CF91      		pop r28
 132               	.LVL11:
 133 0072 0895      		ret
 134               		.cfi_endproc
 135               	.LFE8:
 137               	.global	chMBPostS
 139               	chMBPostS:
 140               	.LFB10:
  95:../../os/kernel/src/chmboxes.c **** 
  96:../../os/kernel/src/chmboxes.c **** /**
  97:../../os/kernel/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
  98:../../os/kernel/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
  99:../../os/kernel/src/chmboxes.c ****  *          available or the specified time runs out.
 100:../../os/kernel/src/chmboxes.c ****  *
 101:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 102:../../os/kernel/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 103:../../os/kernel/src/chmboxes.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 104:../../os/kernel/src/chmboxes.c ****  *                      the following special values are allowed:
 105:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 106:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 107:../../os/kernel/src/chmboxes.c ****  *                      .
 108:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 109:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly posted.
 110:../../os/kernel/src/chmboxes.c ****  * @retval RDY_RESET    if the mailbox has been reset while waiting.
 111:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the operation has timed out.
 112:../../os/kernel/src/chmboxes.c ****  *
 113:../../os/kernel/src/chmboxes.c ****  * @api
 114:../../os/kernel/src/chmboxes.c ****  */
 115:../../os/kernel/src/chmboxes.c **** msg_t chMBPost(Mailbox *mbp, msg_t msg, systime_t time) {
 116:../../os/kernel/src/chmboxes.c ****   msg_t rdymsg;
 117:../../os/kernel/src/chmboxes.c **** 
 118:../../os/kernel/src/chmboxes.c ****   chSysLock();
 119:../../os/kernel/src/chmboxes.c ****   rdymsg = chMBPostS(mbp, msg, time);
 120:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 121:../../os/kernel/src/chmboxes.c ****   return rdymsg;
 122:../../os/kernel/src/chmboxes.c **** }
 123:../../os/kernel/src/chmboxes.c **** 
 124:../../os/kernel/src/chmboxes.c **** /**
 125:../../os/kernel/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 126:../../os/kernel/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 127:../../os/kernel/src/chmboxes.c ****  *          available or the specified time runs out.
 128:../../os/kernel/src/chmboxes.c ****  *
 129:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 130:../../os/kernel/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 131:../../os/kernel/src/chmboxes.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 132:../../os/kernel/src/chmboxes.c ****  *                      the following special values are allowed:
 133:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 134:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 135:../../os/kernel/src/chmboxes.c ****  *                      .
 136:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 137:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly posted.
 138:../../os/kernel/src/chmboxes.c ****  * @retval RDY_RESET    if the mailbox has been reset while waiting.
 139:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the operation has timed out.
 140:../../os/kernel/src/chmboxes.c ****  *
 141:../../os/kernel/src/chmboxes.c ****  * @sclass
 142:../../os/kernel/src/chmboxes.c ****  */
 143:../../os/kernel/src/chmboxes.c **** msg_t chMBPostS(Mailbox *mbp, msg_t msg, systime_t time) {
 141               		.loc 1 143 0
 142               		.cfi_startproc
 143               	.LVL12:
 144 0074 EF92      		push r14
 145               	.LCFI4:
 146               		.cfi_def_cfa_offset 3
 147               		.cfi_offset 14, -2
 148 0076 FF92      		push r15
 149               	.LCFI5:
 150               		.cfi_def_cfa_offset 4
 151               		.cfi_offset 15, -3
 152 0078 0F93      		push r16
 153               	.LCFI6:
 154               		.cfi_def_cfa_offset 5
 155               		.cfi_offset 16, -4
 156 007a 1F93      		push r17
 157               	.LCFI7:
 158               		.cfi_def_cfa_offset 6
 159               		.cfi_offset 17, -5
 160 007c CF93      		push r28
 161               	.LCFI8:
 162               		.cfi_def_cfa_offset 7
 163               		.cfi_offset 28, -6
 164 007e DF93      		push r29
 165               	.LCFI9:
 166               		.cfi_def_cfa_offset 8
 167               		.cfi_offset 29, -7
 168               	/* prologue: function */
 169               	/* frame size = 0 */
 170               	/* stack size = 6 */
 171               	.L__stack_usage = 6
 172 0080 EC01      		movw r28,r24
 173 0082 7B01      		movw r14,r22
 144:../../os/kernel/src/chmboxes.c ****   msg_t rdymsg;
 145:../../os/kernel/src/chmboxes.c **** 
 146:../../os/kernel/src/chmboxes.c ****   chDbgCheckClassS();
 147:../../os/kernel/src/chmboxes.c ****   chDbgCheck(mbp != NULL, "chMBPostS");
 148:../../os/kernel/src/chmboxes.c **** 
 149:../../os/kernel/src/chmboxes.c ****   rdymsg = chSemWaitTimeoutS(&mbp->mb_emptysem, time);
 174               		.loc 1 149 0
 175 0084 BA01      		movw r22,r20
 176               	.LVL13:
 177 0086 0D96      		adiw r24,13
 178               	.LVL14:
 179 0088 0E94 0000 		call chSemWaitTimeoutS
 180               	.LVL15:
 181 008c 8C01      		movw r16,r24
 182               	.LVL16:
 150:../../os/kernel/src/chmboxes.c ****   if (rdymsg == RDY_OK) {
 183               		.loc 1 150 0
 184 008e 0097      		sbiw r24,0
 185 0090 01F4      		brne .L4
 151:../../os/kernel/src/chmboxes.c ****     *mbp->mb_wrptr++ = msg;
 186               		.loc 1 151 0
 187 0092 EC81      		ldd r30,Y+4
 188 0094 FD81      		ldd r31,Y+5
 189 0096 E192      		st Z+,r14
 190 0098 F192      		st Z+,r15
 191 009a FD83      		std Y+5,r31
 192 009c EC83      		std Y+4,r30
 152:../../os/kernel/src/chmboxes.c ****     if (mbp->mb_wrptr >= mbp->mb_top)
 193               		.loc 1 152 0
 194 009e 8A81      		ldd r24,Y+2
 195 00a0 9B81      		ldd r25,Y+3
 196 00a2 E817      		cp r30,r24
 197 00a4 F907      		cpc r31,r25
 198 00a6 00F4      		brsh .L7
 199               	.L5:
 153:../../os/kernel/src/chmboxes.c ****       mbp->mb_wrptr = mbp->mb_buffer;
 154:../../os/kernel/src/chmboxes.c ****     chSemSignalI(&mbp->mb_fullsem);
 200               		.loc 1 154 0
 201 00a8 CE01      		movw r24,r28
 202 00aa 0896      		adiw r24,8
 203 00ac 0E94 0000 		call chSemSignalI
 204               	.LVL17:
 155:../../os/kernel/src/chmboxes.c ****     chSchRescheduleS();
 205               		.loc 1 155 0
 206 00b0 0E94 0000 		call chSchRescheduleS
 207               	.LVL18:
 208               	.L4:
 156:../../os/kernel/src/chmboxes.c ****   }
 157:../../os/kernel/src/chmboxes.c ****   return rdymsg;
 158:../../os/kernel/src/chmboxes.c **** }
 209               		.loc 1 158 0
 210 00b4 C801      		movw r24,r16
 211               	/* epilogue start */
 212 00b6 DF91      		pop r29
 213 00b8 CF91      		pop r28
 214               	.LVL19:
 215 00ba 1F91      		pop r17
 216 00bc 0F91      		pop r16
 217               	.LVL20:
 218 00be FF90      		pop r15
 219 00c0 EF90      		pop r14
 220               	.LVL21:
 221 00c2 0895      		ret
 222               	.LVL22:
 223               	.L7:
 153:../../os/kernel/src/chmboxes.c ****       mbp->mb_wrptr = mbp->mb_buffer;
 224               		.loc 1 153 0
 225 00c4 8881      		ld r24,Y
 226 00c6 9981      		ldd r25,Y+1
 227 00c8 9D83      		std Y+5,r25
 228 00ca 8C83      		std Y+4,r24
 229 00cc 00C0      		rjmp .L5
 230               		.cfi_endproc
 231               	.LFE10:
 233               	.global	chMBPost
 235               	chMBPost:
 236               	.LFB9:
 115:../../os/kernel/src/chmboxes.c **** msg_t chMBPost(Mailbox *mbp, msg_t msg, systime_t time) {
 237               		.loc 1 115 0
 238               		.cfi_startproc
 239               	.LVL23:
 240               	/* prologue: function */
 241               	/* frame size = 0 */
 242               	/* stack size = 0 */
 243               	.L__stack_usage = 0
 118:../../os/kernel/src/chmboxes.c ****   chSysLock();
 244               		.loc 1 118 0
 245               	/* #APP */
 246               	 ;  118 "../../os/kernel/src/chmboxes.c" 1
 247 00ce F894      		cli
 248               	 ;  0 "" 2
 119:../../os/kernel/src/chmboxes.c ****   rdymsg = chMBPostS(mbp, msg, time);
 249               		.loc 1 119 0
 250               	/* #NOAPP */
 251 00d0 0E94 0000 		call chMBPostS
 252               	.LVL24:
 120:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 253               		.loc 1 120 0
 254               	/* #APP */
 255               	 ;  120 "../../os/kernel/src/chmboxes.c" 1
 256 00d4 7894      		sei
 257               	 ;  0 "" 2
 122:../../os/kernel/src/chmboxes.c **** }
 258               		.loc 1 122 0
 259               	/* #NOAPP */
 260 00d6 0895      		ret
 261               		.cfi_endproc
 262               	.LFE9:
 264               	.global	chMBPostI
 266               	chMBPostI:
 267               	.LFB11:
 159:../../os/kernel/src/chmboxes.c **** 
 160:../../os/kernel/src/chmboxes.c **** /**
 161:../../os/kernel/src/chmboxes.c ****  * @brief   Posts a message into a mailbox.
 162:../../os/kernel/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 163:../../os/kernel/src/chmboxes.c ****  *          condition if the queue is full.
 164:../../os/kernel/src/chmboxes.c ****  *
 165:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 166:../../os/kernel/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 167:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 168:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly posted.
 169:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the mailbox is full and the message cannot be
 170:../../os/kernel/src/chmboxes.c ****  *                      posted.
 171:../../os/kernel/src/chmboxes.c ****  *
 172:../../os/kernel/src/chmboxes.c ****  * @iclass
 173:../../os/kernel/src/chmboxes.c ****  */
 174:../../os/kernel/src/chmboxes.c **** msg_t chMBPostI(Mailbox *mbp, msg_t msg) {
 268               		.loc 1 174 0
 269               		.cfi_startproc
 270               	.LVL25:
 271               	/* prologue: function */
 272               	/* frame size = 0 */
 273               	/* stack size = 0 */
 274               	.L__stack_usage = 0
 275 00d8 FC01      		movw r30,r24
 175:../../os/kernel/src/chmboxes.c **** 
 176:../../os/kernel/src/chmboxes.c ****   chDbgCheckClassI();
 177:../../os/kernel/src/chmboxes.c ****   chDbgCheck(mbp != NULL, "chMBPostI");
 178:../../os/kernel/src/chmboxes.c **** 
 179:../../os/kernel/src/chmboxes.c ****   if (chSemGetCounterI(&mbp->mb_emptysem) <= 0)
 276               		.loc 1 179 0
 277 00da 8189      		ldd r24,Z+17
 278               	.LVL26:
 279 00dc 1816      		cp __zero_reg__,r24
 280 00de 04F4      		brge .L12
 180:../../os/kernel/src/chmboxes.c ****     return RDY_TIMEOUT;
 181:../../os/kernel/src/chmboxes.c ****   chSemFastWaitI(&mbp->mb_emptysem);
 281               		.loc 1 181 0
 282 00e0 8150      		subi r24,lo8(-(-1))
 283 00e2 818B      		std Z+17,r24
 182:../../os/kernel/src/chmboxes.c ****   *mbp->mb_wrptr++ = msg;
 284               		.loc 1 182 0
 285 00e4 A481      		ldd r26,Z+4
 286 00e6 B581      		ldd r27,Z+5
 287 00e8 6D93      		st X+,r22
 288 00ea 7D93      		st X+,r23
 289 00ec B583      		std Z+5,r27
 290 00ee A483      		std Z+4,r26
 183:../../os/kernel/src/chmboxes.c ****   if (mbp->mb_wrptr >= mbp->mb_top)
 291               		.loc 1 183 0
 292 00f0 8281      		ldd r24,Z+2
 293 00f2 9381      		ldd r25,Z+3
 294 00f4 A817      		cp r26,r24
 295 00f6 B907      		cpc r27,r25
 296 00f8 00F4      		brsh .L13
 297               	.L11:
 184:../../os/kernel/src/chmboxes.c ****     mbp->mb_wrptr = mbp->mb_buffer;
 185:../../os/kernel/src/chmboxes.c ****   chSemSignalI(&mbp->mb_fullsem);
 298               		.loc 1 185 0
 299 00fa CF01      		movw r24,r30
 300 00fc 0896      		adiw r24,8
 301 00fe 0E94 0000 		call chSemSignalI
 302               	.LVL27:
 186:../../os/kernel/src/chmboxes.c ****   return RDY_OK;
 303               		.loc 1 186 0
 304 0102 20E0      		ldi r18,0
 305 0104 30E0      		ldi r19,0
 306               	.L10:
 187:../../os/kernel/src/chmboxes.c **** }
 307               		.loc 1 187 0
 308 0106 C901      		movw r24,r18
 309 0108 0895      		ret
 310               	.LVL28:
 311               	.L13:
 184:../../os/kernel/src/chmboxes.c ****     mbp->mb_wrptr = mbp->mb_buffer;
 312               		.loc 1 184 0
 313 010a 8081      		ld r24,Z
 314 010c 9181      		ldd r25,Z+1
 315 010e 9583      		std Z+5,r25
 316 0110 8483      		std Z+4,r24
 317 0112 00C0      		rjmp .L11
 318               	.L12:
 180:../../os/kernel/src/chmboxes.c ****     return RDY_TIMEOUT;
 319               		.loc 1 180 0
 320 0114 2FEF      		ldi r18,lo8(-1)
 321 0116 3FEF      		ldi r19,lo8(-1)
 322 0118 00C0      		rjmp .L10
 323               		.cfi_endproc
 324               	.LFE11:
 326               	.global	chMBPostAheadS
 328               	chMBPostAheadS:
 329               	.LFB13:
 188:../../os/kernel/src/chmboxes.c **** 
 189:../../os/kernel/src/chmboxes.c **** /**
 190:../../os/kernel/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 191:../../os/kernel/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 192:../../os/kernel/src/chmboxes.c ****  *          available or the specified time runs out.
 193:../../os/kernel/src/chmboxes.c ****  *
 194:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 195:../../os/kernel/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 196:../../os/kernel/src/chmboxes.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 197:../../os/kernel/src/chmboxes.c ****  *                      the following special values are allowed:
 198:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 199:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 200:../../os/kernel/src/chmboxes.c ****  *                      .
 201:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 202:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly posted.
 203:../../os/kernel/src/chmboxes.c ****  * @retval RDY_RESET    if the mailbox has been reset while waiting.
 204:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the operation has timed out.
 205:../../os/kernel/src/chmboxes.c ****  *
 206:../../os/kernel/src/chmboxes.c ****  * @api
 207:../../os/kernel/src/chmboxes.c ****  */
 208:../../os/kernel/src/chmboxes.c **** msg_t chMBPostAhead(Mailbox *mbp, msg_t msg, systime_t time) {
 209:../../os/kernel/src/chmboxes.c ****   msg_t rdymsg;
 210:../../os/kernel/src/chmboxes.c **** 
 211:../../os/kernel/src/chmboxes.c ****   chSysLock();
 212:../../os/kernel/src/chmboxes.c ****   rdymsg = chMBPostAheadS(mbp, msg, time);
 213:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 214:../../os/kernel/src/chmboxes.c ****   return rdymsg;
 215:../../os/kernel/src/chmboxes.c **** }
 216:../../os/kernel/src/chmboxes.c **** 
 217:../../os/kernel/src/chmboxes.c **** /**
 218:../../os/kernel/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 219:../../os/kernel/src/chmboxes.c ****  * @details The invoking thread waits until a empty slot in the mailbox becomes
 220:../../os/kernel/src/chmboxes.c ****  *          available or the specified time runs out.
 221:../../os/kernel/src/chmboxes.c ****  *
 222:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 223:../../os/kernel/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 224:../../os/kernel/src/chmboxes.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 225:../../os/kernel/src/chmboxes.c ****  *                      the following special values are allowed:
 226:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 227:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 228:../../os/kernel/src/chmboxes.c ****  *                      .
 229:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 230:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly posted.
 231:../../os/kernel/src/chmboxes.c ****  * @retval RDY_RESET    if the mailbox has been reset while waiting.
 232:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the operation has timed out.
 233:../../os/kernel/src/chmboxes.c ****  *
 234:../../os/kernel/src/chmboxes.c ****  * @sclass
 235:../../os/kernel/src/chmboxes.c ****  */
 236:../../os/kernel/src/chmboxes.c **** msg_t chMBPostAheadS(Mailbox *mbp, msg_t msg, systime_t time) {
 330               		.loc 1 236 0
 331               		.cfi_startproc
 332               	.LVL29:
 333 011a EF92      		push r14
 334               	.LCFI10:
 335               		.cfi_def_cfa_offset 3
 336               		.cfi_offset 14, -2
 337 011c FF92      		push r15
 338               	.LCFI11:
 339               		.cfi_def_cfa_offset 4
 340               		.cfi_offset 15, -3
 341 011e 0F93      		push r16
 342               	.LCFI12:
 343               		.cfi_def_cfa_offset 5
 344               		.cfi_offset 16, -4
 345 0120 1F93      		push r17
 346               	.LCFI13:
 347               		.cfi_def_cfa_offset 6
 348               		.cfi_offset 17, -5
 349 0122 CF93      		push r28
 350               	.LCFI14:
 351               		.cfi_def_cfa_offset 7
 352               		.cfi_offset 28, -6
 353 0124 DF93      		push r29
 354               	.LCFI15:
 355               		.cfi_def_cfa_offset 8
 356               		.cfi_offset 29, -7
 357               	/* prologue: function */
 358               	/* frame size = 0 */
 359               	/* stack size = 6 */
 360               	.L__stack_usage = 6
 361 0126 EC01      		movw r28,r24
 362 0128 7B01      		movw r14,r22
 237:../../os/kernel/src/chmboxes.c ****   msg_t rdymsg;
 238:../../os/kernel/src/chmboxes.c **** 
 239:../../os/kernel/src/chmboxes.c ****   chDbgCheckClassS();
 240:../../os/kernel/src/chmboxes.c ****   chDbgCheck(mbp != NULL, "chMBPostAheadS");
 241:../../os/kernel/src/chmboxes.c **** 
 242:../../os/kernel/src/chmboxes.c ****   rdymsg = chSemWaitTimeoutS(&mbp->mb_emptysem, time);
 363               		.loc 1 242 0
 364 012a BA01      		movw r22,r20
 365               	.LVL30:
 366 012c 0D96      		adiw r24,13
 367               	.LVL31:
 368 012e 0E94 0000 		call chSemWaitTimeoutS
 369               	.LVL32:
 370 0132 8C01      		movw r16,r24
 371               	.LVL33:
 243:../../os/kernel/src/chmboxes.c ****   if (rdymsg == RDY_OK) {
 372               		.loc 1 243 0
 373 0134 0097      		sbiw r24,0
 374 0136 01F4      		brne .L15
 244:../../os/kernel/src/chmboxes.c ****     if (--mbp->mb_rdptr < mbp->mb_buffer)
 375               		.loc 1 244 0
 376 0138 EE81      		ldd r30,Y+6
 377 013a FF81      		ldd r31,Y+7
 378 013c 3297      		sbiw r30,2
 379 013e FF83      		std Y+7,r31
 380 0140 EE83      		std Y+6,r30
 381 0142 8881      		ld r24,Y
 382 0144 9981      		ldd r25,Y+1
 383 0146 E817      		cp r30,r24
 384 0148 F907      		cpc r31,r25
 385 014a 00F0      		brlo .L17
 386               	.L16:
 245:../../os/kernel/src/chmboxes.c ****       mbp->mb_rdptr = mbp->mb_top - 1;
 246:../../os/kernel/src/chmboxes.c ****     *mbp->mb_rdptr = msg;
 387               		.loc 1 246 0
 388 014c F182      		std Z+1,r15
 389 014e E082      		st Z,r14
 247:../../os/kernel/src/chmboxes.c ****     chSemSignalI(&mbp->mb_fullsem);
 390               		.loc 1 247 0
 391 0150 CE01      		movw r24,r28
 392 0152 0896      		adiw r24,8
 393 0154 0E94 0000 		call chSemSignalI
 394               	.LVL34:
 248:../../os/kernel/src/chmboxes.c ****     chSchRescheduleS();
 395               		.loc 1 248 0
 396 0158 0E94 0000 		call chSchRescheduleS
 397               	.LVL35:
 398               	.L15:
 249:../../os/kernel/src/chmboxes.c ****   }
 250:../../os/kernel/src/chmboxes.c ****   return rdymsg;
 251:../../os/kernel/src/chmboxes.c **** }
 399               		.loc 1 251 0
 400 015c C801      		movw r24,r16
 401               	/* epilogue start */
 402 015e DF91      		pop r29
 403 0160 CF91      		pop r28
 404               	.LVL36:
 405 0162 1F91      		pop r17
 406 0164 0F91      		pop r16
 407               	.LVL37:
 408 0166 FF90      		pop r15
 409 0168 EF90      		pop r14
 410               	.LVL38:
 411 016a 0895      		ret
 412               	.LVL39:
 413               	.L17:
 245:../../os/kernel/src/chmboxes.c ****       mbp->mb_rdptr = mbp->mb_top - 1;
 414               		.loc 1 245 0
 415 016c EA81      		ldd r30,Y+2
 416 016e FB81      		ldd r31,Y+3
 417 0170 3297      		sbiw r30,2
 418 0172 FF83      		std Y+7,r31
 419 0174 EE83      		std Y+6,r30
 420 0176 00C0      		rjmp .L16
 421               		.cfi_endproc
 422               	.LFE13:
 424               	.global	chMBPostAhead
 426               	chMBPostAhead:
 427               	.LFB12:
 208:../../os/kernel/src/chmboxes.c **** msg_t chMBPostAhead(Mailbox *mbp, msg_t msg, systime_t time) {
 428               		.loc 1 208 0
 429               		.cfi_startproc
 430               	.LVL40:
 431               	/* prologue: function */
 432               	/* frame size = 0 */
 433               	/* stack size = 0 */
 434               	.L__stack_usage = 0
 211:../../os/kernel/src/chmboxes.c ****   chSysLock();
 435               		.loc 1 211 0
 436               	/* #APP */
 437               	 ;  211 "../../os/kernel/src/chmboxes.c" 1
 438 0178 F894      		cli
 439               	 ;  0 "" 2
 212:../../os/kernel/src/chmboxes.c ****   rdymsg = chMBPostAheadS(mbp, msg, time);
 440               		.loc 1 212 0
 441               	/* #NOAPP */
 442 017a 0E94 0000 		call chMBPostAheadS
 443               	.LVL41:
 213:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 444               		.loc 1 213 0
 445               	/* #APP */
 446               	 ;  213 "../../os/kernel/src/chmboxes.c" 1
 447 017e 7894      		sei
 448               	 ;  0 "" 2
 215:../../os/kernel/src/chmboxes.c **** }
 449               		.loc 1 215 0
 450               	/* #NOAPP */
 451 0180 0895      		ret
 452               		.cfi_endproc
 453               	.LFE12:
 455               	.global	chMBPostAheadI
 457               	chMBPostAheadI:
 458               	.LFB14:
 252:../../os/kernel/src/chmboxes.c **** 
 253:../../os/kernel/src/chmboxes.c **** /**
 254:../../os/kernel/src/chmboxes.c ****  * @brief   Posts an high priority message into a mailbox.
 255:../../os/kernel/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 256:../../os/kernel/src/chmboxes.c ****  *          condition if the queue is full.
 257:../../os/kernel/src/chmboxes.c ****  *
 258:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 259:../../os/kernel/src/chmboxes.c ****  * @param[in] msg       the message to be posted on the mailbox
 260:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 261:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly posted.
 262:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the mailbox is full and the message cannot be
 263:../../os/kernel/src/chmboxes.c ****  *                      posted.
 264:../../os/kernel/src/chmboxes.c ****  *
 265:../../os/kernel/src/chmboxes.c ****  * @iclass
 266:../../os/kernel/src/chmboxes.c ****  */
 267:../../os/kernel/src/chmboxes.c **** msg_t chMBPostAheadI(Mailbox *mbp, msg_t msg) {
 459               		.loc 1 267 0
 460               		.cfi_startproc
 461               	.LVL42:
 462               	/* prologue: function */
 463               	/* frame size = 0 */
 464               	/* stack size = 0 */
 465               	.L__stack_usage = 0
 466 0182 FC01      		movw r30,r24
 268:../../os/kernel/src/chmboxes.c **** 
 269:../../os/kernel/src/chmboxes.c ****   chDbgCheckClassI();
 270:../../os/kernel/src/chmboxes.c ****   chDbgCheck(mbp != NULL, "chMBPostAheadI");
 271:../../os/kernel/src/chmboxes.c **** 
 272:../../os/kernel/src/chmboxes.c ****   if (chSemGetCounterI(&mbp->mb_emptysem) <= 0)
 467               		.loc 1 272 0
 468 0184 8189      		ldd r24,Z+17
 469               	.LVL43:
 470 0186 1816      		cp __zero_reg__,r24
 471 0188 04F4      		brge .L22
 273:../../os/kernel/src/chmboxes.c ****     return RDY_TIMEOUT;
 274:../../os/kernel/src/chmboxes.c ****   chSemFastWaitI(&mbp->mb_emptysem);
 472               		.loc 1 274 0
 473 018a 8150      		subi r24,lo8(-(-1))
 474 018c 818B      		std Z+17,r24
 275:../../os/kernel/src/chmboxes.c ****   if (--mbp->mb_rdptr < mbp->mb_buffer)
 475               		.loc 1 275 0
 476 018e A681      		ldd r26,Z+6
 477 0190 B781      		ldd r27,Z+7
 478 0192 1297      		sbiw r26,2
 479 0194 B783      		std Z+7,r27
 480 0196 A683      		std Z+6,r26
 481 0198 8081      		ld r24,Z
 482 019a 9181      		ldd r25,Z+1
 483 019c A817      		cp r26,r24
 484 019e B907      		cpc r27,r25
 485 01a0 00F0      		brlo .L23
 486               	.L21:
 276:../../os/kernel/src/chmboxes.c ****     mbp->mb_rdptr = mbp->mb_top - 1;
 277:../../os/kernel/src/chmboxes.c ****   *mbp->mb_rdptr = msg;
 487               		.loc 1 277 0
 488 01a2 6D93      		st X+,r22
 489 01a4 7C93      		st X,r23
 278:../../os/kernel/src/chmboxes.c ****   chSemSignalI(&mbp->mb_fullsem);
 490               		.loc 1 278 0
 491 01a6 CF01      		movw r24,r30
 492 01a8 0896      		adiw r24,8
 493 01aa 0E94 0000 		call chSemSignalI
 494               	.LVL44:
 279:../../os/kernel/src/chmboxes.c ****   return RDY_OK;
 495               		.loc 1 279 0
 496 01ae 20E0      		ldi r18,0
 497 01b0 30E0      		ldi r19,0
 498               	.L20:
 280:../../os/kernel/src/chmboxes.c **** }
 499               		.loc 1 280 0
 500 01b2 C901      		movw r24,r18
 501 01b4 0895      		ret
 502               	.LVL45:
 503               	.L23:
 276:../../os/kernel/src/chmboxes.c ****     mbp->mb_rdptr = mbp->mb_top - 1;
 504               		.loc 1 276 0
 505 01b6 A281      		ldd r26,Z+2
 506 01b8 B381      		ldd r27,Z+3
 507 01ba 1297      		sbiw r26,2
 508 01bc B783      		std Z+7,r27
 509 01be A683      		std Z+6,r26
 510 01c0 00C0      		rjmp .L21
 511               	.L22:
 273:../../os/kernel/src/chmboxes.c ****     return RDY_TIMEOUT;
 512               		.loc 1 273 0
 513 01c2 2FEF      		ldi r18,lo8(-1)
 514 01c4 3FEF      		ldi r19,lo8(-1)
 515 01c6 00C0      		rjmp .L20
 516               		.cfi_endproc
 517               	.LFE14:
 519               	.global	chMBFetchS
 521               	chMBFetchS:
 522               	.LFB16:
 281:../../os/kernel/src/chmboxes.c **** 
 282:../../os/kernel/src/chmboxes.c **** /**
 283:../../os/kernel/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 284:../../os/kernel/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 285:../../os/kernel/src/chmboxes.c ****  *          or the specified time runs out.
 286:../../os/kernel/src/chmboxes.c ****  *
 287:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 288:../../os/kernel/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 289:../../os/kernel/src/chmboxes.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 290:../../os/kernel/src/chmboxes.c ****  *                      the following special values are allowed:
 291:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 292:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 293:../../os/kernel/src/chmboxes.c ****  *                      .
 294:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 295:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly fetched.
 296:../../os/kernel/src/chmboxes.c ****  * @retval RDY_RESET    if the mailbox has been reset while waiting.
 297:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the operation has timed out.
 298:../../os/kernel/src/chmboxes.c ****  *
 299:../../os/kernel/src/chmboxes.c ****  * @api
 300:../../os/kernel/src/chmboxes.c ****  */
 301:../../os/kernel/src/chmboxes.c **** msg_t chMBFetch(Mailbox *mbp, msg_t *msgp, systime_t time) {
 302:../../os/kernel/src/chmboxes.c ****   msg_t rdymsg;
 303:../../os/kernel/src/chmboxes.c **** 
 304:../../os/kernel/src/chmboxes.c ****   chSysLock();
 305:../../os/kernel/src/chmboxes.c ****   rdymsg = chMBFetchS(mbp, msgp, time);
 306:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 307:../../os/kernel/src/chmboxes.c ****   return rdymsg;
 308:../../os/kernel/src/chmboxes.c **** }
 309:../../os/kernel/src/chmboxes.c **** 
 310:../../os/kernel/src/chmboxes.c **** /**
 311:../../os/kernel/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 312:../../os/kernel/src/chmboxes.c ****  * @details The invoking thread waits until a message is posted in the mailbox
 313:../../os/kernel/src/chmboxes.c ****  *          or the specified time runs out.
 314:../../os/kernel/src/chmboxes.c ****  *
 315:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 316:../../os/kernel/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 317:../../os/kernel/src/chmboxes.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 318:../../os/kernel/src/chmboxes.c ****  *                      the following special values are allowed:
 319:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 320:../../os/kernel/src/chmboxes.c ****  *                      - @a TIME_INFINITE no timeout.
 321:../../os/kernel/src/chmboxes.c ****  *                      .
 322:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 323:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly fetched.
 324:../../os/kernel/src/chmboxes.c ****  * @retval RDY_RESET    if the mailbox has been reset while waiting.
 325:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the operation has timed out.
 326:../../os/kernel/src/chmboxes.c ****  *
 327:../../os/kernel/src/chmboxes.c ****  * @sclass
 328:../../os/kernel/src/chmboxes.c ****  */
 329:../../os/kernel/src/chmboxes.c **** msg_t chMBFetchS(Mailbox *mbp, msg_t *msgp, systime_t time) {
 523               		.loc 1 329 0
 524               		.cfi_startproc
 525               	.LVL46:
 526 01c8 EF92      		push r14
 527               	.LCFI16:
 528               		.cfi_def_cfa_offset 3
 529               		.cfi_offset 14, -2
 530 01ca FF92      		push r15
 531               	.LCFI17:
 532               		.cfi_def_cfa_offset 4
 533               		.cfi_offset 15, -3
 534 01cc 0F93      		push r16
 535               	.LCFI18:
 536               		.cfi_def_cfa_offset 5
 537               		.cfi_offset 16, -4
 538 01ce 1F93      		push r17
 539               	.LCFI19:
 540               		.cfi_def_cfa_offset 6
 541               		.cfi_offset 17, -5
 542 01d0 CF93      		push r28
 543               	.LCFI20:
 544               		.cfi_def_cfa_offset 7
 545               		.cfi_offset 28, -6
 546 01d2 DF93      		push r29
 547               	.LCFI21:
 548               		.cfi_def_cfa_offset 8
 549               		.cfi_offset 29, -7
 550               	/* prologue: function */
 551               	/* frame size = 0 */
 552               	/* stack size = 6 */
 553               	.L__stack_usage = 6
 554 01d4 EC01      		movw r28,r24
 555 01d6 7B01      		movw r14,r22
 330:../../os/kernel/src/chmboxes.c ****   msg_t rdymsg;
 331:../../os/kernel/src/chmboxes.c **** 
 332:../../os/kernel/src/chmboxes.c ****   chDbgCheckClassS();
 333:../../os/kernel/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL), "chMBFetchS");
 334:../../os/kernel/src/chmboxes.c **** 
 335:../../os/kernel/src/chmboxes.c ****   rdymsg = chSemWaitTimeoutS(&mbp->mb_fullsem, time);
 556               		.loc 1 335 0
 557 01d8 BA01      		movw r22,r20
 558               	.LVL47:
 559 01da 0896      		adiw r24,8
 560               	.LVL48:
 561 01dc 0E94 0000 		call chSemWaitTimeoutS
 562               	.LVL49:
 563 01e0 8C01      		movw r16,r24
 564               	.LVL50:
 336:../../os/kernel/src/chmboxes.c ****   if (rdymsg == RDY_OK) {
 565               		.loc 1 336 0
 566 01e2 0097      		sbiw r24,0
 567 01e4 01F4      		brne .L25
 337:../../os/kernel/src/chmboxes.c ****     *msgp = *mbp->mb_rdptr++;
 568               		.loc 1 337 0
 569 01e6 EE81      		ldd r30,Y+6
 570 01e8 FF81      		ldd r31,Y+7
 571 01ea 8191      		ld r24,Z+
 572 01ec 9191      		ld r25,Z+
 573 01ee D701      		movw r26,r14
 574 01f0 8D93      		st X+,r24
 575 01f2 9C93      		st X,r25
 576 01f4 FF83      		std Y+7,r31
 577 01f6 EE83      		std Y+6,r30
 338:../../os/kernel/src/chmboxes.c ****     if (mbp->mb_rdptr >= mbp->mb_top)
 578               		.loc 1 338 0
 579 01f8 8A81      		ldd r24,Y+2
 580 01fa 9B81      		ldd r25,Y+3
 581 01fc E817      		cp r30,r24
 582 01fe F907      		cpc r31,r25
 583 0200 00F4      		brsh .L27
 584               	.L26:
 339:../../os/kernel/src/chmboxes.c ****       mbp->mb_rdptr = mbp->mb_buffer;
 340:../../os/kernel/src/chmboxes.c ****     chSemSignalI(&mbp->mb_emptysem);
 585               		.loc 1 340 0
 586 0202 CE01      		movw r24,r28
 587 0204 0D96      		adiw r24,13
 588 0206 0E94 0000 		call chSemSignalI
 589               	.LVL51:
 341:../../os/kernel/src/chmboxes.c ****     chSchRescheduleS();
 590               		.loc 1 341 0
 591 020a 0E94 0000 		call chSchRescheduleS
 592               	.LVL52:
 593               	.L25:
 342:../../os/kernel/src/chmboxes.c ****   }
 343:../../os/kernel/src/chmboxes.c ****   return rdymsg;
 344:../../os/kernel/src/chmboxes.c **** }
 594               		.loc 1 344 0
 595 020e C801      		movw r24,r16
 596               	/* epilogue start */
 597 0210 DF91      		pop r29
 598 0212 CF91      		pop r28
 599               	.LVL53:
 600 0214 1F91      		pop r17
 601 0216 0F91      		pop r16
 602               	.LVL54:
 603 0218 FF90      		pop r15
 604 021a EF90      		pop r14
 605               	.LVL55:
 606 021c 0895      		ret
 607               	.LVL56:
 608               	.L27:
 339:../../os/kernel/src/chmboxes.c ****       mbp->mb_rdptr = mbp->mb_buffer;
 609               		.loc 1 339 0
 610 021e 8881      		ld r24,Y
 611 0220 9981      		ldd r25,Y+1
 612 0222 9F83      		std Y+7,r25
 613 0224 8E83      		std Y+6,r24
 614 0226 00C0      		rjmp .L26
 615               		.cfi_endproc
 616               	.LFE16:
 618               	.global	chMBFetch
 620               	chMBFetch:
 621               	.LFB15:
 301:../../os/kernel/src/chmboxes.c **** msg_t chMBFetch(Mailbox *mbp, msg_t *msgp, systime_t time) {
 622               		.loc 1 301 0
 623               		.cfi_startproc
 624               	.LVL57:
 625               	/* prologue: function */
 626               	/* frame size = 0 */
 627               	/* stack size = 0 */
 628               	.L__stack_usage = 0
 304:../../os/kernel/src/chmboxes.c ****   chSysLock();
 629               		.loc 1 304 0
 630               	/* #APP */
 631               	 ;  304 "../../os/kernel/src/chmboxes.c" 1
 632 0228 F894      		cli
 633               	 ;  0 "" 2
 305:../../os/kernel/src/chmboxes.c ****   rdymsg = chMBFetchS(mbp, msgp, time);
 634               		.loc 1 305 0
 635               	/* #NOAPP */
 636 022a 0E94 0000 		call chMBFetchS
 637               	.LVL58:
 306:../../os/kernel/src/chmboxes.c ****   chSysUnlock();
 638               		.loc 1 306 0
 639               	/* #APP */
 640               	 ;  306 "../../os/kernel/src/chmboxes.c" 1
 641 022e 7894      		sei
 642               	 ;  0 "" 2
 308:../../os/kernel/src/chmboxes.c **** }
 643               		.loc 1 308 0
 644               	/* #NOAPP */
 645 0230 0895      		ret
 646               		.cfi_endproc
 647               	.LFE15:
 649               	.global	chMBFetchI
 651               	chMBFetchI:
 652               	.LFB17:
 345:../../os/kernel/src/chmboxes.c **** 
 346:../../os/kernel/src/chmboxes.c **** /**
 347:../../os/kernel/src/chmboxes.c ****  * @brief   Retrieves a message from a mailbox.
 348:../../os/kernel/src/chmboxes.c ****  * @details This variant is non-blocking, the function returns a timeout
 349:../../os/kernel/src/chmboxes.c ****  *          condition if the queue is empty.
 350:../../os/kernel/src/chmboxes.c ****  *
 351:../../os/kernel/src/chmboxes.c ****  * @param[in] mbp       the pointer to an initialized Mailbox object
 352:../../os/kernel/src/chmboxes.c ****  * @param[out] msgp     pointer to a message variable for the received message
 353:../../os/kernel/src/chmboxes.c ****  * @return              The operation status.
 354:../../os/kernel/src/chmboxes.c ****  * @retval RDY_OK       if a message has been correctly fetched.
 355:../../os/kernel/src/chmboxes.c ****  * @retval RDY_TIMEOUT  if the mailbox is empty and a message cannot be
 356:../../os/kernel/src/chmboxes.c ****  *                      fetched.
 357:../../os/kernel/src/chmboxes.c ****  *
 358:../../os/kernel/src/chmboxes.c ****  * @iclass
 359:../../os/kernel/src/chmboxes.c ****  */
 360:../../os/kernel/src/chmboxes.c **** msg_t chMBFetchI(Mailbox *mbp, msg_t *msgp) {
 653               		.loc 1 360 0
 654               		.cfi_startproc
 655               	.LVL59:
 656 0232 CF93      		push r28
 657               	.LCFI22:
 658               		.cfi_def_cfa_offset 3
 659               		.cfi_offset 28, -2
 660 0234 DF93      		push r29
 661               	.LCFI23:
 662               		.cfi_def_cfa_offset 4
 663               		.cfi_offset 29, -3
 664               	/* prologue: function */
 665               	/* frame size = 0 */
 666               	/* stack size = 2 */
 667               	.L__stack_usage = 2
 668 0236 FC01      		movw r30,r24
 361:../../os/kernel/src/chmboxes.c **** 
 362:../../os/kernel/src/chmboxes.c ****   chDbgCheckClassI();
 363:../../os/kernel/src/chmboxes.c ****   chDbgCheck((mbp != NULL) && (msgp != NULL), "chMBFetchI");
 364:../../os/kernel/src/chmboxes.c **** 
 365:../../os/kernel/src/chmboxes.c ****   if (chSemGetCounterI(&mbp->mb_fullsem) <= 0)
 669               		.loc 1 365 0
 670 0238 8485      		ldd r24,Z+12
 671               	.LVL60:
 672 023a 1816      		cp __zero_reg__,r24
 673 023c 04F4      		brge .L32
 366:../../os/kernel/src/chmboxes.c ****     return RDY_TIMEOUT;
 367:../../os/kernel/src/chmboxes.c ****   chSemFastWaitI(&mbp->mb_fullsem);
 674               		.loc 1 367 0
 675 023e 8150      		subi r24,lo8(-(-1))
 676 0240 8487      		std Z+12,r24
 368:../../os/kernel/src/chmboxes.c ****   *msgp = *mbp->mb_rdptr++;
 677               		.loc 1 368 0
 678 0242 A681      		ldd r26,Z+6
 679 0244 B781      		ldd r27,Z+7
 680 0246 8D91      		ld r24,X+
 681 0248 9D91      		ld r25,X+
 682 024a EB01      		movw r28,r22
 683 024c 9983      		std Y+1,r25
 684 024e 8883      		st Y,r24
 685 0250 B783      		std Z+7,r27
 686 0252 A683      		std Z+6,r26
 369:../../os/kernel/src/chmboxes.c ****   if (mbp->mb_rdptr >= mbp->mb_top)
 687               		.loc 1 369 0
 688 0254 8281      		ldd r24,Z+2
 689 0256 9381      		ldd r25,Z+3
 690 0258 A817      		cp r26,r24
 691 025a B907      		cpc r27,r25
 692 025c 00F4      		brsh .L33
 693               	.L31:
 370:../../os/kernel/src/chmboxes.c ****     mbp->mb_rdptr = mbp->mb_buffer;
 371:../../os/kernel/src/chmboxes.c ****   chSemSignalI(&mbp->mb_emptysem);
 694               		.loc 1 371 0
 695 025e CF01      		movw r24,r30
 696 0260 0D96      		adiw r24,13
 697 0262 0E94 0000 		call chSemSignalI
 698               	.LVL61:
 372:../../os/kernel/src/chmboxes.c ****   return RDY_OK;
 699               		.loc 1 372 0
 700 0266 20E0      		ldi r18,0
 701 0268 30E0      		ldi r19,0
 702               	.LVL62:
 703               	.L30:
 373:../../os/kernel/src/chmboxes.c **** }
 704               		.loc 1 373 0
 705 026a C901      		movw r24,r18
 706               	/* epilogue start */
 707 026c DF91      		pop r29
 708 026e CF91      		pop r28
 709 0270 0895      		ret
 710               	.LVL63:
 711               	.L33:
 370:../../os/kernel/src/chmboxes.c ****     mbp->mb_rdptr = mbp->mb_buffer;
 712               		.loc 1 370 0
 713 0272 8081      		ld r24,Z
 714 0274 9181      		ldd r25,Z+1
 715 0276 9783      		std Z+7,r25
 716 0278 8683      		std Z+6,r24
 717 027a 00C0      		rjmp .L31
 718               	.L32:
 366:../../os/kernel/src/chmboxes.c ****     return RDY_TIMEOUT;
 719               		.loc 1 366 0
 720 027c 2FEF      		ldi r18,lo8(-1)
 721 027e 3FEF      		ldi r19,lo8(-1)
 722 0280 00C0      		rjmp .L30
 723               		.cfi_endproc
 724               	.LFE17:
 726               	.Letext0:
 727               		.file 2 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 728               		.file 3 "../../os/ports/GCC/AVR/chtypes.h"
 729               		.file 4 "../../os/kernel/include/chlists.h"
 730               		.file 5 "../../os/kernel/include/chthreads.h"
 731               		.file 6 "../../os/ports/GCC/AVR/chcore.h"
 732               		.file 7 "../../os/kernel/include/chsem.h"
 733               		.file 8 "../../os/kernel/include/chmtx.h"
 734               		.file 9 "../../os/kernel/include/chmboxes.h"
 735               		.file 10 "../../os/kernel/include/chschd.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chmboxes.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:12     .text:0000000000000000 chMBInit
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:70     .text:0000000000000036 chMBReset
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:139    .text:0000000000000074 chMBPostS
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:235    .text:00000000000000ce chMBPost
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:266    .text:00000000000000d8 chMBPostI
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:328    .text:000000000000011a chMBPostAheadS
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:426    .text:0000000000000178 chMBPostAhead
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:457    .text:0000000000000182 chMBPostAheadI
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:521    .text:00000000000001c8 chMBFetchS
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:620    .text:0000000000000228 chMBFetch
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccYyZvb6.s:651    .text:0000000000000232 chMBFetchI

UNDEFINED SYMBOLS
chSemInit
chSemResetI
chSchRescheduleS
chSemWaitTimeoutS
chSemSignalI

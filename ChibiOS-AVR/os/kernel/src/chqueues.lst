   1               		.file	"chqueues.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  11               	qwait:
  12               	.LFB7:
  13               		.file 1 "../../os/kernel/src/chqueues.c"
   1:../../os/kernel/src/chqueues.c **** /*
   2:../../os/kernel/src/chqueues.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../os/kernel/src/chqueues.c ****                  2011,2012 Giovanni Di Sirio.
   4:../../os/kernel/src/chqueues.c **** 
   5:../../os/kernel/src/chqueues.c ****     This file is part of ChibiOS/RT.
   6:../../os/kernel/src/chqueues.c **** 
   7:../../os/kernel/src/chqueues.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../os/kernel/src/chqueues.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/kernel/src/chqueues.c ****     the Free Software Foundation; either version 3 of the License, or
  10:../../os/kernel/src/chqueues.c ****     (at your option) any later version.
  11:../../os/kernel/src/chqueues.c **** 
  12:../../os/kernel/src/chqueues.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../os/kernel/src/chqueues.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../os/kernel/src/chqueues.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../os/kernel/src/chqueues.c ****     GNU General Public License for more details.
  16:../../os/kernel/src/chqueues.c **** 
  17:../../os/kernel/src/chqueues.c ****     You should have received a copy of the GNU General Public License
  18:../../os/kernel/src/chqueues.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../os/kernel/src/chqueues.c **** */
  20:../../os/kernel/src/chqueues.c **** 
  21:../../os/kernel/src/chqueues.c **** /**
  22:../../os/kernel/src/chqueues.c ****  * @file    chqueues.c
  23:../../os/kernel/src/chqueues.c ****  * @brief   I/O Queues code.
  24:../../os/kernel/src/chqueues.c ****  *
  25:../../os/kernel/src/chqueues.c ****  * @addtogroup io_queues
  26:../../os/kernel/src/chqueues.c ****  * @details ChibiOS/RT queues are mostly used in serial-like device drivers.
  27:../../os/kernel/src/chqueues.c ****  *          The device drivers are usually designed to have a lower side
  28:../../os/kernel/src/chqueues.c ****  *          (lower driver, it is usually an interrupt service routine) and an
  29:../../os/kernel/src/chqueues.c ****  *          upper side (upper driver, accessed by the application threads).<br>
  30:../../os/kernel/src/chqueues.c ****  *          There are several kind of queues:<br>
  31:../../os/kernel/src/chqueues.c ****  *          - <b>Input queue</b>, unidirectional queue where the writer is the
  32:../../os/kernel/src/chqueues.c ****  *            lower side and the reader is the upper side.
  33:../../os/kernel/src/chqueues.c ****  *          - <b>Output queue</b>, unidirectional queue where the writer is the
  34:../../os/kernel/src/chqueues.c ****  *            upper side and the reader is the lower side.
  35:../../os/kernel/src/chqueues.c ****  *          - <b>Full duplex queue</b>, bidirectional queue. Full duplex queues
  36:../../os/kernel/src/chqueues.c ****  *            are implemented by pairing an input queue and an output queue
  37:../../os/kernel/src/chqueues.c ****  *            together.
  38:../../os/kernel/src/chqueues.c ****  *          .
  39:../../os/kernel/src/chqueues.c ****  * @pre     In order to use the I/O queues the @p CH_USE_QUEUES option must
  40:../../os/kernel/src/chqueues.c ****  *          be enabled in @p chconf.h.
  41:../../os/kernel/src/chqueues.c ****  * @{
  42:../../os/kernel/src/chqueues.c ****  */
  43:../../os/kernel/src/chqueues.c **** 
  44:../../os/kernel/src/chqueues.c **** #include "ch.h"
  45:../../os/kernel/src/chqueues.c **** 
  46:../../os/kernel/src/chqueues.c **** #if CH_USE_QUEUES || defined(__DOXYGEN__)
  47:../../os/kernel/src/chqueues.c **** 
  48:../../os/kernel/src/chqueues.c **** /**
  49:../../os/kernel/src/chqueues.c ****  * @brief   Puts the invoking thread into the queue's threads queue.
  50:../../os/kernel/src/chqueues.c ****  *
  51:../../os/kernel/src/chqueues.c ****  * @param[out] qp       pointer to an @p GenericQueue structure
  52:../../os/kernel/src/chqueues.c ****  * @param[in] time      the number of ticks before the operation timeouts,
  53:../../os/kernel/src/chqueues.c ****  *                      the following special values are allowed:
  54:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
  55:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_INFINITE no timeout.
  56:../../os/kernel/src/chqueues.c ****  *                      .
  57:../../os/kernel/src/chqueues.c ****  * @return              A message specifying how the invoking thread has been
  58:../../os/kernel/src/chqueues.c ****  *                      released from threads queue.
  59:../../os/kernel/src/chqueues.c ****  * @retval Q_OK         is the normal exit, thread signaled.
  60:../../os/kernel/src/chqueues.c ****  * @retval Q_RESET      if the queue has been reset.
  61:../../os/kernel/src/chqueues.c ****  * @retval Q_TIMEOUT    if the queue operation timed out.
  62:../../os/kernel/src/chqueues.c ****  */
  63:../../os/kernel/src/chqueues.c **** static msg_t qwait(GenericQueue *qp, systime_t time) {
  14               		.loc 1 63 0
  15               		.cfi_startproc
  16               	.LVL0:
  17 0000 CF93      		push r28
  18               	.LCFI0:
  19               		.cfi_def_cfa_offset 3
  20               		.cfi_offset 28, -2
  21 0002 DF93      		push r29
  22               	.LCFI1:
  23               		.cfi_def_cfa_offset 4
  24               		.cfi_offset 29, -3
  25               	/* prologue: function */
  26               	/* frame size = 0 */
  27               	/* stack size = 2 */
  28               	.L__stack_usage = 2
  64:../../os/kernel/src/chqueues.c **** 
  65:../../os/kernel/src/chqueues.c ****   if (TIME_IMMEDIATE == time)
  29               		.loc 1 65 0
  30 0004 6115      		cp r22,__zero_reg__
  31 0006 7105      		cpc r23,__zero_reg__
  32 0008 01F0      		breq .L2
  66:../../os/kernel/src/chqueues.c ****     return Q_TIMEOUT;
  67:../../os/kernel/src/chqueues.c ****   currp->p_u.wtobjp = qp;
  33               		.loc 1 67 0
  34 000a E091 0000 		lds r30,rlist+11
  35 000e F091 0000 		lds r31,rlist+11+1
  36 0012 938B      		std Z+19,r25
  37 0014 828B      		std Z+18,r24
  38               	.LVL1:
  39               	.LBB12:
  40               	.LBB13:
  41               		.file 2 "../../os/kernel/include/chinline.h"
   1:../../os/kernel/include/chinline.h **** /*
   2:../../os/kernel/include/chinline.h ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../os/kernel/include/chinline.h ****                  2011,2012 Giovanni Di Sirio.
   4:../../os/kernel/include/chinline.h **** 
   5:../../os/kernel/include/chinline.h ****     This file is part of ChibiOS/RT.
   6:../../os/kernel/include/chinline.h **** 
   7:../../os/kernel/include/chinline.h ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../os/kernel/include/chinline.h ****     it under the terms of the GNU General Public License as published by
   9:../../os/kernel/include/chinline.h ****     the Free Software Foundation; either version 3 of the License, or
  10:../../os/kernel/include/chinline.h ****     (at your option) any later version.
  11:../../os/kernel/include/chinline.h **** 
  12:../../os/kernel/include/chinline.h ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../os/kernel/include/chinline.h ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../os/kernel/include/chinline.h ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../os/kernel/include/chinline.h ****     GNU General Public License for more details.
  16:../../os/kernel/include/chinline.h **** 
  17:../../os/kernel/include/chinline.h ****     You should have received a copy of the GNU General Public License
  18:../../os/kernel/include/chinline.h ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../os/kernel/include/chinline.h **** */
  20:../../os/kernel/include/chinline.h **** 
  21:../../os/kernel/include/chinline.h **** /**
  22:../../os/kernel/include/chinline.h ****  * @file    chinline.h
  23:../../os/kernel/include/chinline.h ****  * @brief   Kernel inlined functions.
  24:../../os/kernel/include/chinline.h ****  * @details In this file there are a set of inlined functions if the
  25:../../os/kernel/include/chinline.h ****  *          @p CH_OPTIMIZE_SPEED is enabled.
  26:../../os/kernel/include/chinline.h ****  */
  27:../../os/kernel/include/chinline.h **** 
  28:../../os/kernel/include/chinline.h **** #ifndef _CHINLINE_H_
  29:../../os/kernel/include/chinline.h **** #define _CHINLINE_H_
  30:../../os/kernel/include/chinline.h **** 
  31:../../os/kernel/include/chinline.h **** /* If the performance code path has been chosen then all the following
  32:../../os/kernel/include/chinline.h ****    functions are inlined into the various kernel modules.*/
  33:../../os/kernel/include/chinline.h **** #if CH_OPTIMIZE_SPEED
  34:../../os/kernel/include/chinline.h **** static INLINE void prio_insert(Thread *tp, ThreadsQueue *tqp) {
  35:../../os/kernel/include/chinline.h **** 
  36:../../os/kernel/include/chinline.h ****   Thread *cp = (Thread *)tqp;
  37:../../os/kernel/include/chinline.h ****   do {
  38:../../os/kernel/include/chinline.h ****     cp = cp->p_next;
  39:../../os/kernel/include/chinline.h ****   } while ((cp != (Thread *)tqp) && (cp->p_prio >= tp->p_prio));
  40:../../os/kernel/include/chinline.h ****   tp->p_next = cp;
  41:../../os/kernel/include/chinline.h ****   tp->p_prev = cp->p_prev;
  42:../../os/kernel/include/chinline.h ****   tp->p_prev->p_next = cp->p_prev = tp;
  43:../../os/kernel/include/chinline.h **** }
  44:../../os/kernel/include/chinline.h **** 
  45:../../os/kernel/include/chinline.h **** static INLINE void queue_insert(Thread *tp, ThreadsQueue *tqp) {
  46:../../os/kernel/include/chinline.h **** 
  47:../../os/kernel/include/chinline.h ****   tp->p_next = (Thread *)tqp;
  42               		.loc 2 47 0
  43 0016 9183      		std Z+1,r25
  44 0018 8083      		st Z,r24
  48:../../os/kernel/include/chinline.h ****   tp->p_prev = tqp->p_prev;
  45               		.loc 2 48 0
  46 001a EC01      		movw r28,r24
  47 001c AA81      		ldd r26,Y+2
  48 001e BB81      		ldd r27,Y+3
  49 0020 B383      		std Z+3,r27
  50 0022 A283      		std Z+2,r26
  49:../../os/kernel/include/chinline.h ****   tp->p_prev->p_next = tqp->p_prev = tp;
  51               		.loc 2 49 0
  52 0024 FB83      		std Y+3,r31
  53 0026 EA83      		std Y+2,r30
  54 0028 ED93      		st X+,r30
  55 002a FC93      		st X,r31
  56               	.LBE13:
  57               	.LBE12:
  68:../../os/kernel/src/chqueues.c ****   queue_insert(currp, &qp->q_waiting);
  69:../../os/kernel/src/chqueues.c ****   return chSchGoSleepTimeoutS(THD_STATE_WTQUEUE, time);
  58               		.loc 1 69 0
  59 002c 8DE0      		ldi r24,lo8(13)
  60               	.LVL2:
  61               	/* epilogue start */
  70:../../os/kernel/src/chqueues.c **** }
  62               		.loc 1 70 0
  63 002e DF91      		pop r29
  64 0030 CF91      		pop r28
  65               	.LVL3:
  69:../../os/kernel/src/chqueues.c ****   return chSchGoSleepTimeoutS(THD_STATE_WTQUEUE, time);
  66               		.loc 1 69 0
  67 0032 0C94 0000 		jmp chSchGoSleepTimeoutS
  68               	.LVL4:
  69               	.L2:
  70               		.loc 1 70 0
  71 0036 8FEF      		ldi r24,lo8(-1)
  72               	.LVL5:
  73 0038 9FEF      		ldi r25,lo8(-1)
  74               	/* epilogue start */
  75 003a DF91      		pop r29
  76 003c CF91      		pop r28
  77 003e 0895      		ret
  78               		.cfi_endproc
  79               	.LFE7:
  81               	.global	chIQInit
  83               	chIQInit:
  84               	.LFB8:
  71:../../os/kernel/src/chqueues.c **** 
  72:../../os/kernel/src/chqueues.c **** /**
  73:../../os/kernel/src/chqueues.c ****  * @brief   Initializes an input queue.
  74:../../os/kernel/src/chqueues.c ****  * @details A Semaphore is internally initialized and works as a counter of
  75:../../os/kernel/src/chqueues.c ****  *          the bytes contained in the queue.
  76:../../os/kernel/src/chqueues.c ****  * @note    The callback is invoked from within the S-Locked system state,
  77:../../os/kernel/src/chqueues.c ****  *          see @ref system_states.
  78:../../os/kernel/src/chqueues.c ****  *
  79:../../os/kernel/src/chqueues.c ****  * @param[out] iqp      pointer to an @p InputQueue structure
  80:../../os/kernel/src/chqueues.c ****  * @param[in] bp        pointer to a memory area allocated as queue buffer
  81:../../os/kernel/src/chqueues.c ****  * @param[in] size      size of the queue buffer
  82:../../os/kernel/src/chqueues.c ****  * @param[in] infy      pointer to a callback function that is invoked when
  83:../../os/kernel/src/chqueues.c ****  *                      data is read from the queue. The value can be @p NULL.
  84:../../os/kernel/src/chqueues.c ****  * @param[in] link      application defined pointer
  85:../../os/kernel/src/chqueues.c ****  *
  86:../../os/kernel/src/chqueues.c ****  * @init
  87:../../os/kernel/src/chqueues.c ****  */
  88:../../os/kernel/src/chqueues.c **** void chIQInit(InputQueue *iqp, uint8_t *bp, size_t size, qnotify_t infy,
  89:../../os/kernel/src/chqueues.c ****               void *link) {
  85               		.loc 1 89 0
  86               		.cfi_startproc
  87               	.LVL6:
  88 0040 0F93      		push r16
  89               	.LCFI2:
  90               		.cfi_def_cfa_offset 3
  91               		.cfi_offset 16, -2
  92 0042 1F93      		push r17
  93               	.LCFI3:
  94               		.cfi_def_cfa_offset 4
  95               		.cfi_offset 17, -3
  96               	/* prologue: function */
  97               	/* frame size = 0 */
  98               	/* stack size = 2 */
  99               	.L__stack_usage = 2
 100 0044 FC01      		movw r30,r24
  90:../../os/kernel/src/chqueues.c **** 
  91:../../os/kernel/src/chqueues.c ****   queue_init(&iqp->q_waiting);
 101               		.loc 1 91 0
 102 0046 8283      		std Z+2,r24
 103 0048 F383      		std Z+3,r31
 104 004a 8083      		st Z,r24
 105 004c F183      		std Z+1,r31
  92:../../os/kernel/src/chqueues.c ****   iqp->q_counter = 0;
 106               		.loc 1 92 0
 107 004e 1582      		std Z+5,__zero_reg__
 108 0050 1482      		std Z+4,__zero_reg__
  93:../../os/kernel/src/chqueues.c ****   iqp->q_buffer = iqp->q_rdptr = iqp->q_wrptr = bp;
 109               		.loc 1 93 0
 110 0052 7387      		std Z+11,r23
 111 0054 6287      		std Z+10,r22
 112 0056 7587      		std Z+13,r23
 113 0058 6487      		std Z+12,r22
 114 005a 7783      		std Z+7,r23
 115 005c 6683      		std Z+6,r22
  94:../../os/kernel/src/chqueues.c ****   iqp->q_top = bp + size;
 116               		.loc 1 94 0
 117 005e 460F      		add r20,r22
 118 0060 571F      		adc r21,r23
 119               	.LVL7:
 120 0062 5187      		std Z+9,r21
 121 0064 4087      		std Z+8,r20
  95:../../os/kernel/src/chqueues.c ****   iqp->q_notify = infy;
 122               		.loc 1 95 0
 123 0066 3787      		std Z+15,r19
 124 0068 2687      		std Z+14,r18
  96:../../os/kernel/src/chqueues.c ****   iqp->q_link = link;
 125               		.loc 1 96 0
 126 006a 118B      		std Z+17,r17
 127 006c 008B      		std Z+16,r16
 128               	/* epilogue start */
  97:../../os/kernel/src/chqueues.c **** }
 129               		.loc 1 97 0
 130 006e 1F91      		pop r17
 131 0070 0F91      		pop r16
 132               	.LVL8:
 133 0072 0895      		ret
 134               		.cfi_endproc
 135               	.LFE8:
 137               	.global	chIQResetI
 139               	chIQResetI:
 140               	.LFB9:
  98:../../os/kernel/src/chqueues.c **** 
  99:../../os/kernel/src/chqueues.c **** /**
 100:../../os/kernel/src/chqueues.c ****  * @brief   Resets an input queue.
 101:../../os/kernel/src/chqueues.c ****  * @details All the data in the input queue is erased and lost, any waiting
 102:../../os/kernel/src/chqueues.c ****  *          thread is resumed with status @p Q_RESET.
 103:../../os/kernel/src/chqueues.c ****  * @note    A reset operation can be used by a low level driver in order to
 104:../../os/kernel/src/chqueues.c ****  *          obtain immediate attention from the high level layers.
 105:../../os/kernel/src/chqueues.c ****  *
 106:../../os/kernel/src/chqueues.c ****  * @param[in] iqp       pointer to an @p InputQueue structure
 107:../../os/kernel/src/chqueues.c ****  *
 108:../../os/kernel/src/chqueues.c ****  * @iclass
 109:../../os/kernel/src/chqueues.c ****  */
 110:../../os/kernel/src/chqueues.c **** void chIQResetI(InputQueue *iqp) {
 141               		.loc 1 110 0
 142               		.cfi_startproc
 143               	.LVL9:
 144 0074 0F93      		push r16
 145               	.LCFI4:
 146               		.cfi_def_cfa_offset 3
 147               		.cfi_offset 16, -2
 148 0076 1F93      		push r17
 149               	.LCFI5:
 150               		.cfi_def_cfa_offset 4
 151               		.cfi_offset 17, -3
 152 0078 CF93      		push r28
 153               	.LCFI6:
 154               		.cfi_def_cfa_offset 5
 155               		.cfi_offset 28, -4
 156 007a DF93      		push r29
 157               	.LCFI7:
 158               		.cfi_def_cfa_offset 6
 159               		.cfi_offset 29, -5
 160               	/* prologue: function */
 161               	/* frame size = 0 */
 162               	/* stack size = 4 */
 163               	.L__stack_usage = 4
 164 007c EC01      		movw r28,r24
 111:../../os/kernel/src/chqueues.c **** 
 112:../../os/kernel/src/chqueues.c ****   chDbgCheckClassI();
 113:../../os/kernel/src/chqueues.c **** 
 114:../../os/kernel/src/chqueues.c ****   iqp->q_rdptr = iqp->q_wrptr = iqp->q_buffer;
 165               		.loc 1 114 0
 166 007e 8E81      		ldd r24,Y+6
 167 0080 9F81      		ldd r25,Y+7
 168               	.LVL10:
 169 0082 9B87      		std Y+11,r25
 170 0084 8A87      		std Y+10,r24
 171 0086 9D87      		std Y+13,r25
 172 0088 8C87      		std Y+12,r24
 115:../../os/kernel/src/chqueues.c ****   iqp->q_counter = 0;
 173               		.loc 1 115 0
 174 008a 1D82      		std Y+5,__zero_reg__
 175 008c 1C82      		std Y+4,__zero_reg__
 116:../../os/kernel/src/chqueues.c ****   while (notempty(&iqp->q_waiting))
 176               		.loc 1 116 0
 177 008e 8881      		ld r24,Y
 178 0090 9981      		ldd r25,Y+1
 179 0092 8C17      		cp r24,r28
 180 0094 9D07      		cpc r25,r29
 181 0096 01F0      		breq .L5
 117:../../os/kernel/src/chqueues.c ****     chSchReadyI(fifo_remove(&iqp->q_waiting))->p_u.rdymsg = Q_RESET;
 182               		.loc 1 117 0
 183 0098 0EEF      		ldi r16,lo8(-2)
 184 009a 1FEF      		ldi r17,lo8(-1)
 185               	.L9:
 186               	.LVL11:
 187               	.LBB14:
 188               	.LBB15:
  50:../../os/kernel/include/chinline.h **** }
  51:../../os/kernel/include/chinline.h **** 
  52:../../os/kernel/include/chinline.h **** static INLINE Thread *fifo_remove(ThreadsQueue *tqp) {
  53:../../os/kernel/include/chinline.h ****   Thread *tp = tqp->p_next;
  54:../../os/kernel/include/chinline.h **** 
  55:../../os/kernel/include/chinline.h ****   (tqp->p_next = tp->p_next)->p_prev = (Thread *)tqp;
 189               		.loc 2 55 0
 190 009c DC01      		movw r26,r24
 191 009e ED91      		ld r30,X+
 192 00a0 FC91      		ld r31,X
 193 00a2 F983      		std Y+1,r31
 194 00a4 E883      		st Y,r30
 195 00a6 D383      		std Z+3,r29
 196 00a8 C283      		std Z+2,r28
 197               	.LBE15:
 198               	.LBE14:
 199               		.loc 1 117 0
 200 00aa 0E94 0000 		call chSchReadyI
 201               	.LVL12:
 202 00ae FC01      		movw r30,r24
 203 00b0 138B      		std Z+19,r17
 204 00b2 028B      		std Z+18,r16
 116:../../os/kernel/src/chqueues.c ****   while (notempty(&iqp->q_waiting))
 205               		.loc 1 116 0
 206 00b4 8881      		ld r24,Y
 207 00b6 9981      		ldd r25,Y+1
 208 00b8 8C17      		cp r24,r28
 209 00ba 9D07      		cpc r25,r29
 210 00bc 01F4      		brne .L9
 211               	.LVL13:
 212               	.L5:
 213               	/* epilogue start */
 118:../../os/kernel/src/chqueues.c **** }
 214               		.loc 1 118 0
 215 00be DF91      		pop r29
 216 00c0 CF91      		pop r28
 217               	.LVL14:
 218 00c2 1F91      		pop r17
 219 00c4 0F91      		pop r16
 220 00c6 0895      		ret
 221               		.cfi_endproc
 222               	.LFE9:
 224               	.global	chIQPutI
 226               	chIQPutI:
 227               	.LFB10:
 119:../../os/kernel/src/chqueues.c **** 
 120:../../os/kernel/src/chqueues.c **** /**
 121:../../os/kernel/src/chqueues.c ****  * @brief   Input queue write.
 122:../../os/kernel/src/chqueues.c ****  * @details A byte value is written into the low end of an input queue.
 123:../../os/kernel/src/chqueues.c ****  *
 124:../../os/kernel/src/chqueues.c ****  * @param[in] iqp       pointer to an @p InputQueue structure
 125:../../os/kernel/src/chqueues.c ****  * @param[in] b         the byte value to be written in the queue
 126:../../os/kernel/src/chqueues.c ****  * @return              The operation status.
 127:../../os/kernel/src/chqueues.c ****  * @retval Q_OK         if the operation has been completed with success.
 128:../../os/kernel/src/chqueues.c ****  * @retval Q_FULL       if the queue is full and the operation cannot be
 129:../../os/kernel/src/chqueues.c ****  *                      completed.
 130:../../os/kernel/src/chqueues.c ****  *
 131:../../os/kernel/src/chqueues.c ****  * @iclass
 132:../../os/kernel/src/chqueues.c ****  */
 133:../../os/kernel/src/chqueues.c **** msg_t chIQPutI(InputQueue *iqp, uint8_t b) {
 228               		.loc 1 133 0
 229               		.cfi_startproc
 230               	.LVL15:
 231 00c8 CF93      		push r28
 232               	.LCFI8:
 233               		.cfi_def_cfa_offset 3
 234               		.cfi_offset 28, -2
 235 00ca DF93      		push r29
 236               	.LCFI9:
 237               		.cfi_def_cfa_offset 4
 238               		.cfi_offset 29, -3
 239               	/* prologue: function */
 240               	/* frame size = 0 */
 241               	/* stack size = 2 */
 242               	.L__stack_usage = 2
 243 00cc FC01      		movw r30,r24
 134:../../os/kernel/src/chqueues.c **** 
 135:../../os/kernel/src/chqueues.c ****   chDbgCheckClassI();
 136:../../os/kernel/src/chqueues.c **** 
 137:../../os/kernel/src/chqueues.c ****   if (chIQIsFullI(iqp))
 244               		.loc 1 137 0
 245 00ce A285      		ldd r26,Z+10
 246 00d0 B385      		ldd r27,Z+11
 247 00d2 8485      		ldd r24,Z+12
 248 00d4 9585      		ldd r25,Z+13
 249               	.LVL16:
 250 00d6 A817      		cp r26,r24
 251 00d8 B907      		cpc r27,r25
 252 00da 01F0      		breq .L20
 253 00dc 8481      		ldd r24,Z+4
 254 00de 9581      		ldd r25,Z+5
 255               	.L14:
 138:../../os/kernel/src/chqueues.c ****     return Q_FULL;
 139:../../os/kernel/src/chqueues.c **** 
 140:../../os/kernel/src/chqueues.c ****   iqp->q_counter++;
 256               		.loc 1 140 0
 257 00e0 0196      		adiw r24,1
 258 00e2 9583      		std Z+5,r25
 259 00e4 8483      		std Z+4,r24
 141:../../os/kernel/src/chqueues.c ****   *iqp->q_wrptr++ = b;
 260               		.loc 1 141 0
 261 00e6 6D93      		st X+,r22
 262 00e8 B387      		std Z+11,r27
 263 00ea A287      		std Z+10,r26
 142:../../os/kernel/src/chqueues.c ****   if (iqp->q_wrptr >= iqp->q_top)
 264               		.loc 1 142 0
 265 00ec 8085      		ldd r24,Z+8
 266 00ee 9185      		ldd r25,Z+9
 267 00f0 A817      		cp r26,r24
 268 00f2 B907      		cpc r27,r25
 269 00f4 00F4      		brsh .L15
 143:../../os/kernel/src/chqueues.c ****     iqp->q_wrptr = iqp->q_buffer;
 144:../../os/kernel/src/chqueues.c **** 
 145:../../os/kernel/src/chqueues.c ****   if (notempty(&iqp->q_waiting))
 270               		.loc 1 145 0
 271 00f6 8081      		ld r24,Z
 272 00f8 9181      		ldd r25,Z+1
 273 00fa 8E17      		cp r24,r30
 274 00fc 9F07      		cpc r25,r31
 275 00fe 01F0      		breq .L18
 276               	.L21:
 277               	.LVL17:
 278               	.LBB16:
 279               	.LBB17:
 280               		.loc 2 55 0
 281 0100 EC01      		movw r28,r24
 282 0102 A881      		ld r26,Y
 283 0104 B981      		ldd r27,Y+1
 284 0106 B183      		std Z+1,r27
 285 0108 A083      		st Z,r26
 286 010a 1396      		adiw r26,2+1
 287 010c FC93      		st X,r31
 288 010e EE93      		st -X,r30
 289 0110 1297      		sbiw r26,2
 290               	.LBE17:
 291               	.LBE16:
 146:../../os/kernel/src/chqueues.c ****     chSchReadyI(fifo_remove(&iqp->q_waiting))->p_u.rdymsg = Q_OK;
 292               		.loc 1 146 0
 293 0112 0E94 0000 		call chSchReadyI
 294               	.LVL18:
 295 0116 FC01      		movw r30,r24
 296 0118 138A      		std Z+19,__zero_reg__
 297 011a 128A      		std Z+18,__zero_reg__
 147:../../os/kernel/src/chqueues.c **** 
 148:../../os/kernel/src/chqueues.c ****   return Q_OK;
 298               		.loc 1 148 0
 299 011c 20E0      		ldi r18,0
 300 011e 30E0      		ldi r19,0
 301               	.LVL19:
 302               	.L19:
 149:../../os/kernel/src/chqueues.c **** }
 303               		.loc 1 149 0
 304 0120 C901      		movw r24,r18
 305               	/* epilogue start */
 306 0122 DF91      		pop r29
 307 0124 CF91      		pop r28
 308 0126 0895      		ret
 309               	.LVL20:
 310               	.L15:
 143:../../os/kernel/src/chqueues.c ****     iqp->q_wrptr = iqp->q_buffer;
 311               		.loc 1 143 0
 312 0128 8681      		ldd r24,Z+6
 313 012a 9781      		ldd r25,Z+7
 314 012c 9387      		std Z+11,r25
 315 012e 8287      		std Z+10,r24
 145:../../os/kernel/src/chqueues.c ****   if (notempty(&iqp->q_waiting))
 316               		.loc 1 145 0
 317 0130 8081      		ld r24,Z
 318 0132 9181      		ldd r25,Z+1
 319 0134 8E17      		cp r24,r30
 320 0136 9F07      		cpc r25,r31
 321 0138 01F4      		brne .L21
 322               	.L18:
 148:../../os/kernel/src/chqueues.c ****   return Q_OK;
 323               		.loc 1 148 0
 324 013a 20E0      		ldi r18,0
 325 013c 30E0      		ldi r19,0
 326               		.loc 1 149 0
 327 013e C901      		movw r24,r18
 328               	/* epilogue start */
 329 0140 DF91      		pop r29
 330 0142 CF91      		pop r28
 331 0144 0895      		ret
 332               	.L20:
 137:../../os/kernel/src/chqueues.c ****   if (chIQIsFullI(iqp))
 333               		.loc 1 137 0 discriminator 1
 334 0146 8481      		ldd r24,Z+4
 335 0148 9581      		ldd r25,Z+5
 336 014a 892B      		or r24,r25
 337 014c 01F4      		brne .L17
 137:../../os/kernel/src/chqueues.c ****   if (chIQIsFullI(iqp))
 338               		.loc 1 137 0 is_stmt 0
 339 014e 80E0      		ldi r24,0
 340 0150 90E0      		ldi r25,0
 341 0152 00C0      		rjmp .L14
 342               	.L17:
 138:../../os/kernel/src/chqueues.c ****     return Q_FULL;
 343               		.loc 1 138 0 is_stmt 1
 344 0154 2CEF      		ldi r18,lo8(-4)
 345 0156 3FEF      		ldi r19,lo8(-1)
 346 0158 00C0      		rjmp .L19
 347               		.cfi_endproc
 348               	.LFE10:
 350               	.global	chIQGetTimeout
 352               	chIQGetTimeout:
 353               	.LFB11:
 150:../../os/kernel/src/chqueues.c **** 
 151:../../os/kernel/src/chqueues.c **** /**
 152:../../os/kernel/src/chqueues.c ****  * @brief   Input queue read with timeout.
 153:../../os/kernel/src/chqueues.c ****  * @details This function reads a byte value from an input queue. If the queue
 154:../../os/kernel/src/chqueues.c ****  *          is empty then the calling thread is suspended until a byte arrives
 155:../../os/kernel/src/chqueues.c ****  *          in the queue or a timeout occurs.
 156:../../os/kernel/src/chqueues.c ****  * @note    The callback is invoked before reading the character from the
 157:../../os/kernel/src/chqueues.c ****  *          buffer or before entering the state @p THD_STATE_WTQUEUE.
 158:../../os/kernel/src/chqueues.c ****  *
 159:../../os/kernel/src/chqueues.c ****  * @param[in] iqp       pointer to an @p InputQueue structure
 160:../../os/kernel/src/chqueues.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 161:../../os/kernel/src/chqueues.c ****  *                      the following special values are allowed:
 162:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 163:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_INFINITE no timeout.
 164:../../os/kernel/src/chqueues.c ****  *                      .
 165:../../os/kernel/src/chqueues.c ****  * @return              A byte value from the queue.
 166:../../os/kernel/src/chqueues.c ****  * @retval Q_TIMEOUT    if the specified time expired.
 167:../../os/kernel/src/chqueues.c ****  * @retval Q_RESET      if the queue has been reset.
 168:../../os/kernel/src/chqueues.c ****  *
 169:../../os/kernel/src/chqueues.c ****  * @api
 170:../../os/kernel/src/chqueues.c ****  */
 171:../../os/kernel/src/chqueues.c **** msg_t chIQGetTimeout(InputQueue *iqp, systime_t time) {
 354               		.loc 1 171 0
 355               		.cfi_startproc
 356               	.LVL21:
 357 015a 0F93      		push r16
 358               	.LCFI10:
 359               		.cfi_def_cfa_offset 3
 360               		.cfi_offset 16, -2
 361 015c 1F93      		push r17
 362               	.LCFI11:
 363               		.cfi_def_cfa_offset 4
 364               		.cfi_offset 17, -3
 365 015e CF93      		push r28
 366               	.LCFI12:
 367               		.cfi_def_cfa_offset 5
 368               		.cfi_offset 28, -4
 369 0160 DF93      		push r29
 370               	.LCFI13:
 371               		.cfi_def_cfa_offset 6
 372               		.cfi_offset 29, -5
 373               	/* prologue: function */
 374               	/* frame size = 0 */
 375               	/* stack size = 4 */
 376               	.L__stack_usage = 4
 377 0162 EC01      		movw r28,r24
 378 0164 8B01      		movw r16,r22
 172:../../os/kernel/src/chqueues.c ****   uint8_t b;
 173:../../os/kernel/src/chqueues.c **** 
 174:../../os/kernel/src/chqueues.c ****   chSysLock();
 379               		.loc 1 174 0
 380               	/* #APP */
 381               	 ;  174 "../../os/kernel/src/chqueues.c" 1
 382 0166 F894      		cli
 383               	 ;  0 "" 2
 175:../../os/kernel/src/chqueues.c ****   if (iqp->q_notify)
 384               		.loc 1 175 0
 385               	/* #NOAPP */
 386 0168 EE85      		ldd r30,Y+14
 387 016a FF85      		ldd r31,Y+15
 388 016c 3097      		sbiw r30,0
 389 016e 01F0      		breq .L30
 176:../../os/kernel/src/chqueues.c ****     iqp->q_notify(iqp);
 390               		.loc 1 176 0
 391 0170 0995      		icall
 392               	.LVL22:
 393               	.L30:
 177:../../os/kernel/src/chqueues.c **** 
 178:../../os/kernel/src/chqueues.c ****   while (chIQIsEmptyI(iqp)) {
 394               		.loc 1 178 0 discriminator 1
 395 0172 8C81      		ldd r24,Y+4
 396 0174 9D81      		ldd r25,Y+5
 397 0176 0097      		sbiw r24,0
 398 0178 01F4      		brne .L33
 399               	.LBB18:
 179:../../os/kernel/src/chqueues.c ****     msg_t msg;
 180:../../os/kernel/src/chqueues.c ****     if ((msg = qwait((GenericQueue *)iqp, time)) < Q_OK) {
 400               		.loc 1 180 0
 401 017a B801      		movw r22,r16
 402 017c CE01      		movw r24,r28
 403 017e 0E94 0000 		call qwait
 404               	.LVL23:
 405 0182 9C01      		movw r18,r24
 406               	.LVL24:
 407 0184 97FF      		sbrs r25,7
 408 0186 00C0      		rjmp .L30
 181:../../os/kernel/src/chqueues.c ****       chSysUnlock();
 409               		.loc 1 181 0
 410               	/* #APP */
 411               	 ;  181 "../../os/kernel/src/chqueues.c" 1
 412 0188 7894      		sei
 413               	 ;  0 "" 2
 414               	/* #NOAPP */
 415               	.LBE18:
 182:../../os/kernel/src/chqueues.c ****       return msg;
 183:../../os/kernel/src/chqueues.c ****     }
 184:../../os/kernel/src/chqueues.c ****   }
 185:../../os/kernel/src/chqueues.c **** 
 186:../../os/kernel/src/chqueues.c ****   iqp->q_counter--;
 187:../../os/kernel/src/chqueues.c ****   b = *iqp->q_rdptr++;
 188:../../os/kernel/src/chqueues.c ****   if (iqp->q_rdptr >= iqp->q_top)
 189:../../os/kernel/src/chqueues.c ****     iqp->q_rdptr = iqp->q_buffer;
 190:../../os/kernel/src/chqueues.c **** 
 191:../../os/kernel/src/chqueues.c ****   chSysUnlock();
 192:../../os/kernel/src/chqueues.c ****   return b;
 193:../../os/kernel/src/chqueues.c **** }
 416               		.loc 1 193 0
 417 018a C901      		movw r24,r18
 418               	/* epilogue start */
 419 018c DF91      		pop r29
 420 018e CF91      		pop r28
 421               	.LVL25:
 422 0190 1F91      		pop r17
 423 0192 0F91      		pop r16
 424               	.LVL26:
 425 0194 0895      		ret
 426               	.LVL27:
 427               	.L33:
 186:../../os/kernel/src/chqueues.c ****   iqp->q_counter--;
 428               		.loc 1 186 0
 429 0196 0197      		sbiw r24,1
 430 0198 9D83      		std Y+5,r25
 431 019a 8C83      		std Y+4,r24
 187:../../os/kernel/src/chqueues.c ****   b = *iqp->q_rdptr++;
 432               		.loc 1 187 0
 433 019c EC85      		ldd r30,Y+12
 434 019e FD85      		ldd r31,Y+13
 435 01a0 2191      		ld r18,Z+
 436               	.LVL28:
 437 01a2 FD87      		std Y+13,r31
 438 01a4 EC87      		std Y+12,r30
 188:../../os/kernel/src/chqueues.c ****   if (iqp->q_rdptr >= iqp->q_top)
 439               		.loc 1 188 0
 440 01a6 8885      		ldd r24,Y+8
 441 01a8 9985      		ldd r25,Y+9
 442 01aa E817      		cp r30,r24
 443 01ac F907      		cpc r31,r25
 444 01ae 00F0      		brlo .L27
 189:../../os/kernel/src/chqueues.c ****     iqp->q_rdptr = iqp->q_buffer;
 445               		.loc 1 189 0
 446 01b0 8E81      		ldd r24,Y+6
 447 01b2 9F81      		ldd r25,Y+7
 448 01b4 9D87      		std Y+13,r25
 449 01b6 8C87      		std Y+12,r24
 450               	.L27:
 191:../../os/kernel/src/chqueues.c ****   chSysUnlock();
 451               		.loc 1 191 0
 452               	/* #APP */
 453               	 ;  191 "../../os/kernel/src/chqueues.c" 1
 454 01b8 7894      		sei
 455               	 ;  0 "" 2
 192:../../os/kernel/src/chqueues.c ****   return b;
 456               		.loc 1 192 0
 457               	/* #NOAPP */
 458 01ba 30E0      		ldi r19,0
 459               		.loc 1 193 0
 460 01bc C901      		movw r24,r18
 461               	/* epilogue start */
 462 01be DF91      		pop r29
 463 01c0 CF91      		pop r28
 464               	.LVL29:
 465 01c2 1F91      		pop r17
 466 01c4 0F91      		pop r16
 467               	.LVL30:
 468 01c6 0895      		ret
 469               		.cfi_endproc
 470               	.LFE11:
 472               	.global	chIQReadTimeout
 474               	chIQReadTimeout:
 475               	.LFB12:
 194:../../os/kernel/src/chqueues.c **** 
 195:../../os/kernel/src/chqueues.c **** /**
 196:../../os/kernel/src/chqueues.c ****  * @brief   Input queue read with timeout.
 197:../../os/kernel/src/chqueues.c ****  * @details The function reads data from an input queue into a buffer. The
 198:../../os/kernel/src/chqueues.c ****  *          operation completes when the specified amount of data has been
 199:../../os/kernel/src/chqueues.c ****  *          transferred or after the specified timeout or if the queue has
 200:../../os/kernel/src/chqueues.c ****  *          been reset.
 201:../../os/kernel/src/chqueues.c ****  * @note    The function is not atomic, if you need atomicity it is suggested
 202:../../os/kernel/src/chqueues.c ****  *          to use a semaphore or a mutex for mutual exclusion.
 203:../../os/kernel/src/chqueues.c ****  * @note    The callback is invoked before reading each character from the
 204:../../os/kernel/src/chqueues.c ****  *          buffer or before entering the state @p THD_STATE_WTQUEUE.
 205:../../os/kernel/src/chqueues.c ****  *
 206:../../os/kernel/src/chqueues.c ****  * @param[in] iqp       pointer to an @p InputQueue structure
 207:../../os/kernel/src/chqueues.c ****  * @param[out] bp       pointer to the data buffer
 208:../../os/kernel/src/chqueues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 209:../../os/kernel/src/chqueues.c ****  *                      value 0 is reserved
 210:../../os/kernel/src/chqueues.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 211:../../os/kernel/src/chqueues.c ****  *                      the following special values are allowed:
 212:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 213:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_INFINITE no timeout.
 214:../../os/kernel/src/chqueues.c ****  *                      .
 215:../../os/kernel/src/chqueues.c ****  * @return              The number of bytes effectively transferred.
 216:../../os/kernel/src/chqueues.c ****  *
 217:../../os/kernel/src/chqueues.c ****  * @api
 218:../../os/kernel/src/chqueues.c ****  */
 219:../../os/kernel/src/chqueues.c **** size_t chIQReadTimeout(InputQueue *iqp, uint8_t *bp,
 220:../../os/kernel/src/chqueues.c ****                        size_t n, systime_t time) {
 476               		.loc 1 220 0
 477               		.cfi_startproc
 478               	.LVL31:
 479 01c8 8F92      		push r8
 480               	.LCFI14:
 481               		.cfi_def_cfa_offset 3
 482               		.cfi_offset 8, -2
 483 01ca 9F92      		push r9
 484               	.LCFI15:
 485               		.cfi_def_cfa_offset 4
 486               		.cfi_offset 9, -3
 487 01cc AF92      		push r10
 488               	.LCFI16:
 489               		.cfi_def_cfa_offset 5
 490               		.cfi_offset 10, -4
 491 01ce BF92      		push r11
 492               	.LCFI17:
 493               		.cfi_def_cfa_offset 6
 494               		.cfi_offset 11, -5
 495 01d0 CF92      		push r12
 496               	.LCFI18:
 497               		.cfi_def_cfa_offset 7
 498               		.cfi_offset 12, -6
 499 01d2 DF92      		push r13
 500               	.LCFI19:
 501               		.cfi_def_cfa_offset 8
 502               		.cfi_offset 13, -7
 503 01d4 EF92      		push r14
 504               	.LCFI20:
 505               		.cfi_def_cfa_offset 9
 506               		.cfi_offset 14, -8
 507 01d6 FF92      		push r15
 508               	.LCFI21:
 509               		.cfi_def_cfa_offset 10
 510               		.cfi_offset 15, -9
 511 01d8 0F93      		push r16
 512               	.LCFI22:
 513               		.cfi_def_cfa_offset 11
 514               		.cfi_offset 16, -10
 515 01da 1F93      		push r17
 516               	.LCFI23:
 517               		.cfi_def_cfa_offset 12
 518               		.cfi_offset 17, -11
 519 01dc CF93      		push r28
 520               	.LCFI24:
 521               		.cfi_def_cfa_offset 13
 522               		.cfi_offset 28, -12
 523 01de DF93      		push r29
 524               	.LCFI25:
 525               		.cfi_def_cfa_offset 14
 526               		.cfi_offset 29, -13
 527               	/* prologue: function */
 528               	/* frame size = 0 */
 529               	/* stack size = 12 */
 530               	.L__stack_usage = 12
 531 01e0 EC01      		movw r28,r24
 532 01e2 5B01      		movw r10,r22
 533 01e4 4A01      		movw r8,r20
 534 01e6 8901      		movw r16,r18
 221:../../os/kernel/src/chqueues.c ****   qnotify_t nfy = iqp->q_notify;
 535               		.loc 1 221 0
 536 01e8 CE84      		ldd r12,Y+14
 537 01ea DF84      		ldd r13,Y+15
 538               	.LVL32:
 222:../../os/kernel/src/chqueues.c ****   size_t r = 0;
 223:../../os/kernel/src/chqueues.c **** 
 224:../../os/kernel/src/chqueues.c ****   chDbgCheck(n > 0, "chIQReadTimeout");
 225:../../os/kernel/src/chqueues.c **** 
 226:../../os/kernel/src/chqueues.c ****   chSysLock();
 539               		.loc 1 226 0
 540               	/* #APP */
 541               	 ;  226 "../../os/kernel/src/chqueues.c" 1
 542 01ec F894      		cli
 543               	 ;  0 "" 2
 222:../../os/kernel/src/chqueues.c ****   size_t r = 0;
 544               		.loc 1 222 0
 545               	/* #NOAPP */
 546 01ee E12C      		mov r14,__zero_reg__
 547 01f0 F12C      		mov r15,__zero_reg__
 548               	.LVL33:
 549               	.L40:
 227:../../os/kernel/src/chqueues.c ****   while (TRUE) {
 228:../../os/kernel/src/chqueues.c ****     if (nfy)
 550               		.loc 1 228 0
 551 01f2 C114      		cp r12,__zero_reg__
 552 01f4 D104      		cpc r13,__zero_reg__
 553 01f6 01F0      		breq .L45
 229:../../os/kernel/src/chqueues.c ****       nfy(iqp);
 554               		.loc 1 229 0
 555 01f8 CE01      		movw r24,r28
 556 01fa F601      		movw r30,r12
 557 01fc 0995      		icall
 558               	.LVL34:
 559               	.L45:
 230:../../os/kernel/src/chqueues.c **** 
 231:../../os/kernel/src/chqueues.c ****     while (chIQIsEmptyI(iqp)) {
 560               		.loc 1 231 0 discriminator 1
 561 01fe 8C81      		ldd r24,Y+4
 562 0200 9D81      		ldd r25,Y+5
 563 0202 0097      		sbiw r24,0
 564 0204 01F4      		brne .L49
 232:../../os/kernel/src/chqueues.c ****       if (qwait((GenericQueue *)iqp, time) != Q_OK) {
 565               		.loc 1 232 0
 566 0206 B801      		movw r22,r16
 567 0208 CE01      		movw r24,r28
 568 020a 0E94 0000 		call qwait
 569               	.LVL35:
 570 020e 892B      		or r24,r25
 571 0210 01F0      		breq .L45
 233:../../os/kernel/src/chqueues.c ****         chSysUnlock();
 572               		.loc 1 233 0
 573               	/* #APP */
 574               	 ;  233 "../../os/kernel/src/chqueues.c" 1
 575 0212 7894      		sei
 576               	 ;  0 "" 2
 577               	/* #NOAPP */
 578               	.L37:
 234:../../os/kernel/src/chqueues.c ****         return r;
 235:../../os/kernel/src/chqueues.c ****       }
 236:../../os/kernel/src/chqueues.c ****     }
 237:../../os/kernel/src/chqueues.c **** 
 238:../../os/kernel/src/chqueues.c ****     iqp->q_counter--;
 239:../../os/kernel/src/chqueues.c ****     *bp++ = *iqp->q_rdptr++;
 240:../../os/kernel/src/chqueues.c ****     if (iqp->q_rdptr >= iqp->q_top)
 241:../../os/kernel/src/chqueues.c ****       iqp->q_rdptr = iqp->q_buffer;
 242:../../os/kernel/src/chqueues.c **** 
 243:../../os/kernel/src/chqueues.c ****     chSysUnlock(); /* Gives a preemption chance in a controlled point.*/
 244:../../os/kernel/src/chqueues.c ****     r++;
 245:../../os/kernel/src/chqueues.c ****     if (--n == 0)
 246:../../os/kernel/src/chqueues.c ****       return r;
 247:../../os/kernel/src/chqueues.c **** 
 248:../../os/kernel/src/chqueues.c ****     chSysLock();
 249:../../os/kernel/src/chqueues.c ****   }
 250:../../os/kernel/src/chqueues.c **** }
 579               		.loc 1 250 0
 580 0214 C701      		movw r24,r14
 581               	/* epilogue start */
 582 0216 DF91      		pop r29
 583 0218 CF91      		pop r28
 584               	.LVL36:
 585 021a 1F91      		pop r17
 586 021c 0F91      		pop r16
 587               	.LVL37:
 588 021e FF90      		pop r15
 589 0220 EF90      		pop r14
 590               	.LVL38:
 591 0222 DF90      		pop r13
 592 0224 CF90      		pop r12
 593               	.LVL39:
 594 0226 BF90      		pop r11
 595 0228 AF90      		pop r10
 596               	.LVL40:
 597 022a 9F90      		pop r9
 598 022c 8F90      		pop r8
 599 022e 0895      		ret
 600               	.LVL41:
 601               	.L49:
 238:../../os/kernel/src/chqueues.c ****     iqp->q_counter--;
 602               		.loc 1 238 0
 603 0230 0197      		sbiw r24,1
 604 0232 9D83      		std Y+5,r25
 605 0234 8C83      		std Y+4,r24
 239:../../os/kernel/src/chqueues.c ****     *bp++ = *iqp->q_rdptr++;
 606               		.loc 1 239 0
 607 0236 EC85      		ldd r30,Y+12
 608 0238 FD85      		ldd r31,Y+13
 609 023a 8191      		ld r24,Z+
 610 023c D501      		movw r26,r10
 611 023e 8D93      		st X+,r24
 612 0240 5D01      		movw r10,r26
 613               	.LVL42:
 614 0242 FD87      		std Y+13,r31
 615 0244 EC87      		std Y+12,r30
 240:../../os/kernel/src/chqueues.c ****     if (iqp->q_rdptr >= iqp->q_top)
 616               		.loc 1 240 0
 617 0246 8885      		ldd r24,Y+8
 618 0248 9985      		ldd r25,Y+9
 619 024a E817      		cp r30,r24
 620 024c F907      		cpc r31,r25
 621 024e 00F4      		brsh .L50
 622               	.L39:
 243:../../os/kernel/src/chqueues.c ****     chSysUnlock(); /* Gives a preemption chance in a controlled point.*/
 623               		.loc 1 243 0
 624               	/* #APP */
 625               	 ;  243 "../../os/kernel/src/chqueues.c" 1
 626 0250 7894      		sei
 627               	 ;  0 "" 2
 244:../../os/kernel/src/chqueues.c ****     r++;
 628               		.loc 1 244 0
 629               	/* #NOAPP */
 630 0252 BFEF      		ldi r27,-1
 631 0254 EB1A      		sub r14,r27
 632 0256 FB0A      		sbc r15,r27
 633               	.LVL43:
 245:../../os/kernel/src/chqueues.c ****     if (--n == 0)
 634               		.loc 1 245 0
 635 0258 8E14      		cp r8,r14
 636 025a 9F04      		cpc r9,r15
 637 025c 01F0      		breq .L37
 248:../../os/kernel/src/chqueues.c ****     chSysLock();
 638               		.loc 1 248 0
 639               	/* #APP */
 640               	 ;  248 "../../os/kernel/src/chqueues.c" 1
 641 025e F894      		cli
 642               	 ;  0 "" 2
 249:../../os/kernel/src/chqueues.c ****   }
 643               		.loc 1 249 0
 644               	/* #NOAPP */
 645 0260 00C0      		rjmp .L40
 646               	.L50:
 241:../../os/kernel/src/chqueues.c ****       iqp->q_rdptr = iqp->q_buffer;
 647               		.loc 1 241 0
 648 0262 8E81      		ldd r24,Y+6
 649 0264 9F81      		ldd r25,Y+7
 650 0266 9D87      		std Y+13,r25
 651 0268 8C87      		std Y+12,r24
 652 026a 00C0      		rjmp .L39
 653               		.cfi_endproc
 654               	.LFE12:
 656               	.global	chOQInit
 658               	chOQInit:
 659               	.LFB13:
 251:../../os/kernel/src/chqueues.c **** 
 252:../../os/kernel/src/chqueues.c **** /**
 253:../../os/kernel/src/chqueues.c ****  * @brief   Initializes an output queue.
 254:../../os/kernel/src/chqueues.c ****  * @details A Semaphore is internally initialized and works as a counter of
 255:../../os/kernel/src/chqueues.c ****  *          the free bytes in the queue.
 256:../../os/kernel/src/chqueues.c ****  * @note    The callback is invoked from within the S-Locked system state,
 257:../../os/kernel/src/chqueues.c ****  *          see @ref system_states.
 258:../../os/kernel/src/chqueues.c ****  *
 259:../../os/kernel/src/chqueues.c ****  * @param[out] oqp      pointer to an @p OutputQueue structure
 260:../../os/kernel/src/chqueues.c ****  * @param[in] bp        pointer to a memory area allocated as queue buffer
 261:../../os/kernel/src/chqueues.c ****  * @param[in] size      size of the queue buffer
 262:../../os/kernel/src/chqueues.c ****  * @param[in] onfy      pointer to a callback function that is invoked when
 263:../../os/kernel/src/chqueues.c ****  *                      data is written to the queue. The value can be @p NULL.
 264:../../os/kernel/src/chqueues.c ****  * @param[in] link      application defined pointer
 265:../../os/kernel/src/chqueues.c ****  *
 266:../../os/kernel/src/chqueues.c ****  * @init
 267:../../os/kernel/src/chqueues.c ****  */
 268:../../os/kernel/src/chqueues.c **** void chOQInit(OutputQueue *oqp, uint8_t *bp, size_t size, qnotify_t onfy,
 269:../../os/kernel/src/chqueues.c ****               void *link) {
 660               		.loc 1 269 0
 661               		.cfi_startproc
 662               	.LVL44:
 663 026c 0F93      		push r16
 664               	.LCFI26:
 665               		.cfi_def_cfa_offset 3
 666               		.cfi_offset 16, -2
 667 026e 1F93      		push r17
 668               	.LCFI27:
 669               		.cfi_def_cfa_offset 4
 670               		.cfi_offset 17, -3
 671               	/* prologue: function */
 672               	/* frame size = 0 */
 673               	/* stack size = 2 */
 674               	.L__stack_usage = 2
 675 0270 FC01      		movw r30,r24
 270:../../os/kernel/src/chqueues.c **** 
 271:../../os/kernel/src/chqueues.c ****   queue_init(&oqp->q_waiting);
 676               		.loc 1 271 0
 677 0272 8283      		std Z+2,r24
 678 0274 F383      		std Z+3,r31
 679 0276 8083      		st Z,r24
 680 0278 F183      		std Z+1,r31
 272:../../os/kernel/src/chqueues.c ****   oqp->q_counter = size;
 681               		.loc 1 272 0
 682 027a 5583      		std Z+5,r21
 683 027c 4483      		std Z+4,r20
 273:../../os/kernel/src/chqueues.c ****   oqp->q_buffer = oqp->q_rdptr = oqp->q_wrptr = bp;
 684               		.loc 1 273 0
 685 027e 7387      		std Z+11,r23
 686 0280 6287      		std Z+10,r22
 687 0282 7587      		std Z+13,r23
 688 0284 6487      		std Z+12,r22
 689 0286 7783      		std Z+7,r23
 690 0288 6683      		std Z+6,r22
 274:../../os/kernel/src/chqueues.c ****   oqp->q_top = bp + size;
 691               		.loc 1 274 0
 692 028a 640F      		add r22,r20
 693 028c 751F      		adc r23,r21
 694               	.LVL45:
 695 028e 7187      		std Z+9,r23
 696 0290 6087      		std Z+8,r22
 275:../../os/kernel/src/chqueues.c ****   oqp->q_notify = onfy;
 697               		.loc 1 275 0
 698 0292 3787      		std Z+15,r19
 699 0294 2687      		std Z+14,r18
 276:../../os/kernel/src/chqueues.c ****   oqp->q_link = link;
 700               		.loc 1 276 0
 701 0296 118B      		std Z+17,r17
 702 0298 008B      		std Z+16,r16
 703               	/* epilogue start */
 277:../../os/kernel/src/chqueues.c **** }
 704               		.loc 1 277 0
 705 029a 1F91      		pop r17
 706 029c 0F91      		pop r16
 707               	.LVL46:
 708 029e 0895      		ret
 709               		.cfi_endproc
 710               	.LFE13:
 712               	.global	chOQResetI
 714               	chOQResetI:
 715               	.LFB14:
 278:../../os/kernel/src/chqueues.c **** 
 279:../../os/kernel/src/chqueues.c **** /**
 280:../../os/kernel/src/chqueues.c ****  * @brief   Resets an output queue.
 281:../../os/kernel/src/chqueues.c ****  * @details All the data in the output queue is erased and lost, any waiting
 282:../../os/kernel/src/chqueues.c ****  *          thread is resumed with status @p Q_RESET.
 283:../../os/kernel/src/chqueues.c ****  * @note    A reset operation can be used by a low level driver in order to
 284:../../os/kernel/src/chqueues.c ****  *          obtain immediate attention from the high level layers.
 285:../../os/kernel/src/chqueues.c ****  *
 286:../../os/kernel/src/chqueues.c ****  * @param[in] oqp       pointer to an @p OutputQueue structure
 287:../../os/kernel/src/chqueues.c ****  *
 288:../../os/kernel/src/chqueues.c ****  * @iclass
 289:../../os/kernel/src/chqueues.c ****  */
 290:../../os/kernel/src/chqueues.c **** void chOQResetI(OutputQueue *oqp) {
 716               		.loc 1 290 0
 717               		.cfi_startproc
 718               	.LVL47:
 719 02a0 0F93      		push r16
 720               	.LCFI28:
 721               		.cfi_def_cfa_offset 3
 722               		.cfi_offset 16, -2
 723 02a2 1F93      		push r17
 724               	.LCFI29:
 725               		.cfi_def_cfa_offset 4
 726               		.cfi_offset 17, -3
 727 02a4 CF93      		push r28
 728               	.LCFI30:
 729               		.cfi_def_cfa_offset 5
 730               		.cfi_offset 28, -4
 731 02a6 DF93      		push r29
 732               	.LCFI31:
 733               		.cfi_def_cfa_offset 6
 734               		.cfi_offset 29, -5
 735               	/* prologue: function */
 736               	/* frame size = 0 */
 737               	/* stack size = 4 */
 738               	.L__stack_usage = 4
 739 02a8 EC01      		movw r28,r24
 291:../../os/kernel/src/chqueues.c **** 
 292:../../os/kernel/src/chqueues.c ****   chDbgCheckClassI();
 293:../../os/kernel/src/chqueues.c **** 
 294:../../os/kernel/src/chqueues.c ****   oqp->q_rdptr = oqp->q_wrptr = oqp->q_buffer;
 740               		.loc 1 294 0
 741 02aa 2E81      		ldd r18,Y+6
 742 02ac 3F81      		ldd r19,Y+7
 743 02ae 3B87      		std Y+11,r19
 744 02b0 2A87      		std Y+10,r18
 745 02b2 3D87      		std Y+13,r19
 746 02b4 2C87      		std Y+12,r18
 295:../../os/kernel/src/chqueues.c ****   oqp->q_counter = chQSizeI(oqp);
 747               		.loc 1 295 0
 748 02b6 8885      		ldd r24,Y+8
 749 02b8 9985      		ldd r25,Y+9
 750               	.LVL48:
 751 02ba 821B      		sub r24,r18
 752 02bc 930B      		sbc r25,r19
 753 02be 9D83      		std Y+5,r25
 754 02c0 8C83      		std Y+4,r24
 296:../../os/kernel/src/chqueues.c ****   while (notempty(&oqp->q_waiting))
 755               		.loc 1 296 0
 756 02c2 8881      		ld r24,Y
 757 02c4 9981      		ldd r25,Y+1
 758 02c6 8C17      		cp r24,r28
 759 02c8 9D07      		cpc r25,r29
 760 02ca 01F0      		breq .L52
 297:../../os/kernel/src/chqueues.c ****     chSchReadyI(fifo_remove(&oqp->q_waiting))->p_u.rdymsg = Q_RESET;
 761               		.loc 1 297 0
 762 02cc 0EEF      		ldi r16,lo8(-2)
 763 02ce 1FEF      		ldi r17,lo8(-1)
 764               	.L56:
 765               	.LVL49:
 766               	.LBB19:
 767               	.LBB20:
 768               		.loc 2 55 0
 769 02d0 DC01      		movw r26,r24
 770 02d2 ED91      		ld r30,X+
 771 02d4 FC91      		ld r31,X
 772 02d6 F983      		std Y+1,r31
 773 02d8 E883      		st Y,r30
 774 02da D383      		std Z+3,r29
 775 02dc C283      		std Z+2,r28
 776               	.LBE20:
 777               	.LBE19:
 778               		.loc 1 297 0
 779 02de 0E94 0000 		call chSchReadyI
 780               	.LVL50:
 781 02e2 FC01      		movw r30,r24
 782 02e4 138B      		std Z+19,r17
 783 02e6 028B      		std Z+18,r16
 296:../../os/kernel/src/chqueues.c ****   while (notempty(&oqp->q_waiting))
 784               		.loc 1 296 0
 785 02e8 8881      		ld r24,Y
 786 02ea 9981      		ldd r25,Y+1
 787 02ec 8C17      		cp r24,r28
 788 02ee 9D07      		cpc r25,r29
 789 02f0 01F4      		brne .L56
 790               	.LVL51:
 791               	.L52:
 792               	/* epilogue start */
 298:../../os/kernel/src/chqueues.c **** }
 793               		.loc 1 298 0
 794 02f2 DF91      		pop r29
 795 02f4 CF91      		pop r28
 796               	.LVL52:
 797 02f6 1F91      		pop r17
 798 02f8 0F91      		pop r16
 799 02fa 0895      		ret
 800               		.cfi_endproc
 801               	.LFE14:
 803               	.global	chOQPutTimeout
 805               	chOQPutTimeout:
 806               	.LFB15:
 299:../../os/kernel/src/chqueues.c **** 
 300:../../os/kernel/src/chqueues.c **** /**
 301:../../os/kernel/src/chqueues.c ****  * @brief   Output queue write with timeout.
 302:../../os/kernel/src/chqueues.c ****  * @details This function writes a byte value to an output queue. If the queue
 303:../../os/kernel/src/chqueues.c ****  *          is full then the calling thread is suspended until there is space
 304:../../os/kernel/src/chqueues.c ****  *          in the queue or a timeout occurs.
 305:../../os/kernel/src/chqueues.c ****  * @note    The callback is invoked after writing the character into the
 306:../../os/kernel/src/chqueues.c ****  *          buffer.
 307:../../os/kernel/src/chqueues.c ****  *
 308:../../os/kernel/src/chqueues.c ****  * @param[in] oqp       pointer to an @p OutputQueue structure
 309:../../os/kernel/src/chqueues.c ****  * @param[in] b         the byte value to be written in the queue
 310:../../os/kernel/src/chqueues.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 311:../../os/kernel/src/chqueues.c ****  *                      the following special values are allowed:
 312:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 313:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_INFINITE no timeout.
 314:../../os/kernel/src/chqueues.c ****  *                      .
 315:../../os/kernel/src/chqueues.c ****  * @return              The operation status.
 316:../../os/kernel/src/chqueues.c ****  * @retval Q_OK         if the operation succeeded.
 317:../../os/kernel/src/chqueues.c ****  * @retval Q_TIMEOUT    if the specified time expired.
 318:../../os/kernel/src/chqueues.c ****  * @retval Q_RESET      if the queue has been reset.
 319:../../os/kernel/src/chqueues.c ****  *
 320:../../os/kernel/src/chqueues.c ****  * @api
 321:../../os/kernel/src/chqueues.c ****  */
 322:../../os/kernel/src/chqueues.c **** msg_t chOQPutTimeout(OutputQueue *oqp, uint8_t b, systime_t time) {
 807               		.loc 1 322 0
 808               		.cfi_startproc
 809               	.LVL53:
 810 02fc FF92      		push r15
 811               	.LCFI32:
 812               		.cfi_def_cfa_offset 3
 813               		.cfi_offset 15, -2
 814 02fe 0F93      		push r16
 815               	.LCFI33:
 816               		.cfi_def_cfa_offset 4
 817               		.cfi_offset 16, -3
 818 0300 1F93      		push r17
 819               	.LCFI34:
 820               		.cfi_def_cfa_offset 5
 821               		.cfi_offset 17, -4
 822 0302 CF93      		push r28
 823               	.LCFI35:
 824               		.cfi_def_cfa_offset 6
 825               		.cfi_offset 28, -5
 826 0304 DF93      		push r29
 827               	.LCFI36:
 828               		.cfi_def_cfa_offset 7
 829               		.cfi_offset 29, -6
 830               	/* prologue: function */
 831               	/* frame size = 0 */
 832               	/* stack size = 5 */
 833               	.L__stack_usage = 5
 834 0306 EC01      		movw r28,r24
 835 0308 F62E      		mov r15,r22
 836 030a 8A01      		movw r16,r20
 323:../../os/kernel/src/chqueues.c **** 
 324:../../os/kernel/src/chqueues.c ****   chSysLock();
 837               		.loc 1 324 0
 838               	/* #APP */
 839               	 ;  324 "../../os/kernel/src/chqueues.c" 1
 840 030c F894      		cli
 841               	 ;  0 "" 2
 842               	.LVL54:
 843               	/* #NOAPP */
 844               	.L59:
 325:../../os/kernel/src/chqueues.c ****   while (chOQIsFullI(oqp)) {
 845               		.loc 1 325 0 discriminator 1
 846 030e 8C81      		ldd r24,Y+4
 847 0310 9D81      		ldd r25,Y+5
 848 0312 0097      		sbiw r24,0
 849 0314 01F4      		brne .L68
 850               	.LBB21:
 326:../../os/kernel/src/chqueues.c ****     msg_t msg;
 327:../../os/kernel/src/chqueues.c **** 
 328:../../os/kernel/src/chqueues.c ****     if ((msg = qwait((GenericQueue *)oqp, time)) < Q_OK) {
 851               		.loc 1 328 0
 852 0316 B801      		movw r22,r16
 853 0318 CE01      		movw r24,r28
 854 031a 0E94 0000 		call qwait
 855               	.LVL55:
 856 031e 9C01      		movw r18,r24
 857               	.LVL56:
 858 0320 97FF      		sbrs r25,7
 859 0322 00C0      		rjmp .L59
 329:../../os/kernel/src/chqueues.c ****       chSysUnlock();
 860               		.loc 1 329 0
 861               	/* #APP */
 862               	 ;  329 "../../os/kernel/src/chqueues.c" 1
 863 0324 7894      		sei
 864               	 ;  0 "" 2
 865               	/* #NOAPP */
 866               	.LBE21:
 330:../../os/kernel/src/chqueues.c ****       return msg;
 331:../../os/kernel/src/chqueues.c ****     }
 332:../../os/kernel/src/chqueues.c ****   }
 333:../../os/kernel/src/chqueues.c **** 
 334:../../os/kernel/src/chqueues.c ****   oqp->q_counter--;
 335:../../os/kernel/src/chqueues.c ****   *oqp->q_wrptr++ = b;
 336:../../os/kernel/src/chqueues.c ****   if (oqp->q_wrptr >= oqp->q_top)
 337:../../os/kernel/src/chqueues.c ****     oqp->q_wrptr = oqp->q_buffer;
 338:../../os/kernel/src/chqueues.c **** 
 339:../../os/kernel/src/chqueues.c ****   if (oqp->q_notify)
 340:../../os/kernel/src/chqueues.c ****     oqp->q_notify(oqp);
 341:../../os/kernel/src/chqueues.c **** 
 342:../../os/kernel/src/chqueues.c ****   chSysUnlock();
 343:../../os/kernel/src/chqueues.c ****   return Q_OK;
 344:../../os/kernel/src/chqueues.c **** }
 867               		.loc 1 344 0
 868 0326 C901      		movw r24,r18
 869               	/* epilogue start */
 870 0328 DF91      		pop r29
 871 032a CF91      		pop r28
 872               	.LVL57:
 873 032c 1F91      		pop r17
 874 032e 0F91      		pop r16
 875               	.LVL58:
 876 0330 FF90      		pop r15
 877               	.LVL59:
 878 0332 0895      		ret
 879               	.LVL60:
 880               	.L68:
 334:../../os/kernel/src/chqueues.c ****   oqp->q_counter--;
 881               		.loc 1 334 0
 882 0334 0197      		sbiw r24,1
 883 0336 9D83      		std Y+5,r25
 884 0338 8C83      		std Y+4,r24
 335:../../os/kernel/src/chqueues.c ****   *oqp->q_wrptr++ = b;
 885               		.loc 1 335 0
 886 033a EA85      		ldd r30,Y+10
 887 033c FB85      		ldd r31,Y+11
 888 033e F192      		st Z+,r15
 889 0340 FB87      		std Y+11,r31
 890 0342 EA87      		std Y+10,r30
 336:../../os/kernel/src/chqueues.c ****   if (oqp->q_wrptr >= oqp->q_top)
 891               		.loc 1 336 0
 892 0344 8885      		ldd r24,Y+8
 893 0346 9985      		ldd r25,Y+9
 894 0348 E817      		cp r30,r24
 895 034a F907      		cpc r31,r25
 896 034c 00F0      		brlo .L62
 337:../../os/kernel/src/chqueues.c ****     oqp->q_wrptr = oqp->q_buffer;
 897               		.loc 1 337 0
 898 034e 8E81      		ldd r24,Y+6
 899 0350 9F81      		ldd r25,Y+7
 900 0352 9B87      		std Y+11,r25
 901 0354 8A87      		std Y+10,r24
 902               	.L62:
 339:../../os/kernel/src/chqueues.c ****   if (oqp->q_notify)
 903               		.loc 1 339 0
 904 0356 EE85      		ldd r30,Y+14
 905 0358 FF85      		ldd r31,Y+15
 906 035a 3097      		sbiw r30,0
 907 035c 01F0      		breq .L63
 340:../../os/kernel/src/chqueues.c ****     oqp->q_notify(oqp);
 908               		.loc 1 340 0
 909 035e CE01      		movw r24,r28
 910 0360 0995      		icall
 911               	.LVL61:
 912               	.L63:
 342:../../os/kernel/src/chqueues.c ****   chSysUnlock();
 913               		.loc 1 342 0
 914               	/* #APP */
 915               	 ;  342 "../../os/kernel/src/chqueues.c" 1
 916 0362 7894      		sei
 917               	 ;  0 "" 2
 343:../../os/kernel/src/chqueues.c ****   return Q_OK;
 918               		.loc 1 343 0
 919               	/* #NOAPP */
 920 0364 20E0      		ldi r18,0
 921 0366 30E0      		ldi r19,0
 922               		.loc 1 344 0
 923 0368 C901      		movw r24,r18
 924               	/* epilogue start */
 925 036a DF91      		pop r29
 926 036c CF91      		pop r28
 927               	.LVL62:
 928 036e 1F91      		pop r17
 929 0370 0F91      		pop r16
 930               	.LVL63:
 931 0372 FF90      		pop r15
 932               	.LVL64:
 933 0374 0895      		ret
 934               		.cfi_endproc
 935               	.LFE15:
 937               	.global	chOQGetI
 939               	chOQGetI:
 940               	.LFB16:
 345:../../os/kernel/src/chqueues.c **** 
 346:../../os/kernel/src/chqueues.c **** /**
 347:../../os/kernel/src/chqueues.c ****  * @brief   Output queue read.
 348:../../os/kernel/src/chqueues.c ****  * @details A byte value is read from the low end of an output queue.
 349:../../os/kernel/src/chqueues.c ****  *
 350:../../os/kernel/src/chqueues.c ****  * @param[in] oqp       pointer to an @p OutputQueue structure
 351:../../os/kernel/src/chqueues.c ****  * @return              The byte value from the queue.
 352:../../os/kernel/src/chqueues.c ****  * @retval Q_EMPTY      if the queue is empty.
 353:../../os/kernel/src/chqueues.c ****  *
 354:../../os/kernel/src/chqueues.c ****  * @iclass
 355:../../os/kernel/src/chqueues.c ****  */
 356:../../os/kernel/src/chqueues.c **** msg_t chOQGetI(OutputQueue *oqp) {
 941               		.loc 1 356 0
 942               		.cfi_startproc
 943               	.LVL65:
 944 0376 1F93      		push r17
 945               	.LCFI37:
 946               		.cfi_def_cfa_offset 3
 947               		.cfi_offset 17, -2
 948 0378 CF93      		push r28
 949               	.LCFI38:
 950               		.cfi_def_cfa_offset 4
 951               		.cfi_offset 28, -3
 952 037a DF93      		push r29
 953               	.LCFI39:
 954               		.cfi_def_cfa_offset 5
 955               		.cfi_offset 29, -4
 956               	/* prologue: function */
 957               	/* frame size = 0 */
 958               	/* stack size = 3 */
 959               	.L__stack_usage = 3
 960 037c FC01      		movw r30,r24
 357:../../os/kernel/src/chqueues.c ****   uint8_t b;
 358:../../os/kernel/src/chqueues.c **** 
 359:../../os/kernel/src/chqueues.c ****   chDbgCheckClassI();
 360:../../os/kernel/src/chqueues.c **** 
 361:../../os/kernel/src/chqueues.c ****   if (chOQIsEmptyI(oqp))
 961               		.loc 1 361 0
 962 037e A485      		ldd r26,Z+12
 963 0380 B585      		ldd r27,Z+13
 964 0382 8285      		ldd r24,Z+10
 965 0384 9385      		ldd r25,Z+11
 966               	.LVL66:
 967 0386 8A17      		cp r24,r26
 968 0388 9B07      		cpc r25,r27
 969 038a 01F0      		breq .L78
 970 038c 8481      		ldd r24,Z+4
 971 038e 9581      		ldd r25,Z+5
 972               	.L72:
 362:../../os/kernel/src/chqueues.c ****     return Q_EMPTY;
 363:../../os/kernel/src/chqueues.c **** 
 364:../../os/kernel/src/chqueues.c ****   oqp->q_counter++;
 973               		.loc 1 364 0
 974 0390 0196      		adiw r24,1
 975 0392 9583      		std Z+5,r25
 976 0394 8483      		std Z+4,r24
 365:../../os/kernel/src/chqueues.c ****   b = *oqp->q_rdptr++;
 977               		.loc 1 365 0
 978 0396 1D91      		ld r17,X+
 979               	.LVL67:
 980 0398 B587      		std Z+13,r27
 981 039a A487      		std Z+12,r26
 366:../../os/kernel/src/chqueues.c ****   if (oqp->q_rdptr >= oqp->q_top)
 982               		.loc 1 366 0
 983 039c 8085      		ldd r24,Z+8
 984 039e 9185      		ldd r25,Z+9
 985 03a0 A817      		cp r26,r24
 986 03a2 B907      		cpc r27,r25
 987 03a4 00F4      		brsh .L74
 988               	.L75:
 367:../../os/kernel/src/chqueues.c ****     oqp->q_rdptr = oqp->q_buffer;
 368:../../os/kernel/src/chqueues.c **** 
 369:../../os/kernel/src/chqueues.c ****   if (notempty(&oqp->q_waiting))
 989               		.loc 1 369 0
 990 03a6 8081      		ld r24,Z
 991 03a8 9181      		ldd r25,Z+1
 992 03aa 8E17      		cp r24,r30
 993 03ac 9F07      		cpc r25,r31
 994 03ae 01F0      		breq .L73
 995               	.LVL68:
 996               	.LBB22:
 997               	.LBB23:
 998               		.loc 2 55 0
 999 03b0 EC01      		movw r28,r24
 1000 03b2 A881      		ld r26,Y
 1001 03b4 B981      		ldd r27,Y+1
 1002 03b6 B183      		std Z+1,r27
 1003 03b8 A083      		st Z,r26
 1004 03ba 1396      		adiw r26,2+1
 1005 03bc FC93      		st X,r31
 1006 03be EE93      		st -X,r30
 1007 03c0 1297      		sbiw r26,2
 1008               	.LBE23:
 1009               	.LBE22:
 370:../../os/kernel/src/chqueues.c ****     chSchReadyI(fifo_remove(&oqp->q_waiting))->p_u.rdymsg = Q_OK;
 1010               		.loc 1 370 0
 1011 03c2 0E94 0000 		call chSchReadyI
 1012               	.LVL69:
 1013 03c6 FC01      		movw r30,r24
 1014 03c8 138A      		std Z+19,__zero_reg__
 1015 03ca 128A      		std Z+18,__zero_reg__
 1016               	.LVL70:
 1017               	.L73:
 371:../../os/kernel/src/chqueues.c **** 
 372:../../os/kernel/src/chqueues.c ****   return b;
 1018               		.loc 1 372 0
 1019 03cc 212F      		mov r18,r17
 1020 03ce 30E0      		ldi r19,0
 1021               	.LVL71:
 1022               	.L77:
 373:../../os/kernel/src/chqueues.c **** }
 1023               		.loc 1 373 0
 1024 03d0 C901      		movw r24,r18
 1025               	/* epilogue start */
 1026 03d2 DF91      		pop r29
 1027 03d4 CF91      		pop r28
 1028 03d6 1F91      		pop r17
 1029 03d8 0895      		ret
 1030               	.LVL72:
 1031               	.L74:
 367:../../os/kernel/src/chqueues.c ****     oqp->q_rdptr = oqp->q_buffer;
 1032               		.loc 1 367 0
 1033 03da 8681      		ldd r24,Z+6
 1034 03dc 9781      		ldd r25,Z+7
 1035 03de 9587      		std Z+13,r25
 1036 03e0 8487      		std Z+12,r24
 1037 03e2 00C0      		rjmp .L75
 1038               	.LVL73:
 1039               	.L78:
 361:../../os/kernel/src/chqueues.c ****   if (chOQIsEmptyI(oqp))
 1040               		.loc 1 361 0 discriminator 1
 1041 03e4 8481      		ldd r24,Z+4
 1042 03e6 9581      		ldd r25,Z+5
 1043 03e8 892B      		or r24,r25
 1044 03ea 01F4      		brne .L76
 361:../../os/kernel/src/chqueues.c ****   if (chOQIsEmptyI(oqp))
 1045               		.loc 1 361 0 is_stmt 0
 1046 03ec 80E0      		ldi r24,0
 1047 03ee 90E0      		ldi r25,0
 1048 03f0 00C0      		rjmp .L72
 1049               	.L76:
 362:../../os/kernel/src/chqueues.c ****     return Q_EMPTY;
 1050               		.loc 1 362 0 is_stmt 1
 1051 03f2 2DEF      		ldi r18,lo8(-3)
 1052 03f4 3FEF      		ldi r19,lo8(-1)
 1053 03f6 00C0      		rjmp .L77
 1054               		.cfi_endproc
 1055               	.LFE16:
 1057               	.global	chOQWriteTimeout
 1059               	chOQWriteTimeout:
 1060               	.LFB17:
 374:../../os/kernel/src/chqueues.c **** 
 375:../../os/kernel/src/chqueues.c **** /**
 376:../../os/kernel/src/chqueues.c ****  * @brief   Output queue write with timeout.
 377:../../os/kernel/src/chqueues.c ****  * @details The function writes data from a buffer to an output queue. The
 378:../../os/kernel/src/chqueues.c ****  *          operation completes when the specified amount of data has been
 379:../../os/kernel/src/chqueues.c ****  *          transferred or after the specified timeout or if the queue has
 380:../../os/kernel/src/chqueues.c ****  *          been reset.
 381:../../os/kernel/src/chqueues.c ****  * @note    The function is not atomic, if you need atomicity it is suggested
 382:../../os/kernel/src/chqueues.c ****  *          to use a semaphore or a mutex for mutual exclusion.
 383:../../os/kernel/src/chqueues.c ****  * @note    The callback is invoked after writing each character into the
 384:../../os/kernel/src/chqueues.c ****  *          buffer.
 385:../../os/kernel/src/chqueues.c ****  *
 386:../../os/kernel/src/chqueues.c ****  * @param[in] oqp       pointer to an @p OutputQueue structure
 387:../../os/kernel/src/chqueues.c ****  * @param[out] bp       pointer to the data buffer
 388:../../os/kernel/src/chqueues.c ****  * @param[in] n         the maximum amount of data to be transferred, the
 389:../../os/kernel/src/chqueues.c ****  *                      value 0 is reserved
 390:../../os/kernel/src/chqueues.c ****  * @param[in] time      the number of ticks before the operation timeouts,
 391:../../os/kernel/src/chqueues.c ****  *                      the following special values are allowed:
 392:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_IMMEDIATE immediate timeout.
 393:../../os/kernel/src/chqueues.c ****  *                      - @a TIME_INFINITE no timeout.
 394:../../os/kernel/src/chqueues.c ****  *                      .
 395:../../os/kernel/src/chqueues.c ****  * @return              The number of bytes effectively transferred.
 396:../../os/kernel/src/chqueues.c ****  *
 397:../../os/kernel/src/chqueues.c ****  * @api
 398:../../os/kernel/src/chqueues.c ****  */
 399:../../os/kernel/src/chqueues.c **** size_t chOQWriteTimeout(OutputQueue *oqp, const uint8_t *bp,
 400:../../os/kernel/src/chqueues.c ****                         size_t n, systime_t time) {
 1061               		.loc 1 400 0
 1062               		.cfi_startproc
 1063               	.LVL74:
 1064 03f8 8F92      		push r8
 1065               	.LCFI40:
 1066               		.cfi_def_cfa_offset 3
 1067               		.cfi_offset 8, -2
 1068 03fa 9F92      		push r9
 1069               	.LCFI41:
 1070               		.cfi_def_cfa_offset 4
 1071               		.cfi_offset 9, -3
 1072 03fc AF92      		push r10
 1073               	.LCFI42:
 1074               		.cfi_def_cfa_offset 5
 1075               		.cfi_offset 10, -4
 1076 03fe BF92      		push r11
 1077               	.LCFI43:
 1078               		.cfi_def_cfa_offset 6
 1079               		.cfi_offset 11, -5
 1080 0400 CF92      		push r12
 1081               	.LCFI44:
 1082               		.cfi_def_cfa_offset 7
 1083               		.cfi_offset 12, -6
 1084 0402 DF92      		push r13
 1085               	.LCFI45:
 1086               		.cfi_def_cfa_offset 8
 1087               		.cfi_offset 13, -7
 1088 0404 EF92      		push r14
 1089               	.LCFI46:
 1090               		.cfi_def_cfa_offset 9
 1091               		.cfi_offset 14, -8
 1092 0406 FF92      		push r15
 1093               	.LCFI47:
 1094               		.cfi_def_cfa_offset 10
 1095               		.cfi_offset 15, -9
 1096 0408 0F93      		push r16
 1097               	.LCFI48:
 1098               		.cfi_def_cfa_offset 11
 1099               		.cfi_offset 16, -10
 1100 040a 1F93      		push r17
 1101               	.LCFI49:
 1102               		.cfi_def_cfa_offset 12
 1103               		.cfi_offset 17, -11
 1104 040c CF93      		push r28
 1105               	.LCFI50:
 1106               		.cfi_def_cfa_offset 13
 1107               		.cfi_offset 28, -12
 1108 040e DF93      		push r29
 1109               	.LCFI51:
 1110               		.cfi_def_cfa_offset 14
 1111               		.cfi_offset 29, -13
 1112               	/* prologue: function */
 1113               	/* frame size = 0 */
 1114               	/* stack size = 12 */
 1115               	.L__stack_usage = 12
 1116 0410 EC01      		movw r28,r24
 1117 0412 7B01      		movw r14,r22
 1118 0414 4A01      		movw r8,r20
 1119 0416 5901      		movw r10,r18
 401:../../os/kernel/src/chqueues.c ****   qnotify_t nfy = oqp->q_notify;
 1120               		.loc 1 401 0
 1121 0418 CE84      		ldd r12,Y+14
 1122 041a DF84      		ldd r13,Y+15
 1123               	.LVL75:
 402:../../os/kernel/src/chqueues.c ****   size_t w = 0;
 403:../../os/kernel/src/chqueues.c **** 
 404:../../os/kernel/src/chqueues.c ****   chDbgCheck(n > 0, "chOQWriteTimeout");
 405:../../os/kernel/src/chqueues.c **** 
 406:../../os/kernel/src/chqueues.c ****   chSysLock();
 1124               		.loc 1 406 0
 1125               	/* #APP */
 1126               	 ;  406 "../../os/kernel/src/chqueues.c" 1
 1127 041c F894      		cli
 1128               	 ;  0 "" 2
 402:../../os/kernel/src/chqueues.c ****   size_t w = 0;
 1129               		.loc 1 402 0
 1130               	/* #NOAPP */
 1131 041e 00E0      		ldi r16,0
 1132 0420 10E0      		ldi r17,0
 1133               	.LVL76:
 1134               	.L97:
 407:../../os/kernel/src/chqueues.c ****   while (TRUE) {
 408:../../os/kernel/src/chqueues.c ****     while (chOQIsFullI(oqp)) {
 1135               		.loc 1 408 0 discriminator 1
 1136 0422 8C81      		ldd r24,Y+4
 1137 0424 9D81      		ldd r25,Y+5
 1138 0426 0097      		sbiw r24,0
 1139 0428 01F0      		breq .L83
 1140               	.L98:
 409:../../os/kernel/src/chqueues.c ****       if (qwait((GenericQueue *)oqp, time) != Q_OK) {
 410:../../os/kernel/src/chqueues.c ****         chSysUnlock();
 411:../../os/kernel/src/chqueues.c ****         return w;
 412:../../os/kernel/src/chqueues.c ****       }
 413:../../os/kernel/src/chqueues.c ****     }
 414:../../os/kernel/src/chqueues.c ****     oqp->q_counter--;
 1141               		.loc 1 414 0
 1142 042a 0197      		sbiw r24,1
 1143 042c 9D83      		std Y+5,r25
 1144 042e 8C83      		std Y+4,r24
 415:../../os/kernel/src/chqueues.c ****     *oqp->q_wrptr++ = *bp++;
 1145               		.loc 1 415 0
 1146 0430 F701      		movw r30,r14
 1147 0432 8191      		ld r24,Z+
 1148 0434 7F01      		movw r14,r30
 1149               	.LVL77:
 1150 0436 AA85      		ldd r26,Y+10
 1151 0438 BB85      		ldd r27,Y+11
 1152 043a 8D93      		st X+,r24
 1153 043c BB87      		std Y+11,r27
 1154 043e AA87      		std Y+10,r26
 1155               	.LVL78:
 416:../../os/kernel/src/chqueues.c ****     if (oqp->q_wrptr >= oqp->q_top)
 1156               		.loc 1 416 0
 1157 0440 8885      		ldd r24,Y+8
 1158 0442 9985      		ldd r25,Y+9
 1159 0444 A817      		cp r26,r24
 1160 0446 B907      		cpc r27,r25
 1161 0448 00F0      		brlo .L84
 417:../../os/kernel/src/chqueues.c ****       oqp->q_wrptr = oqp->q_buffer;
 1162               		.loc 1 417 0
 1163 044a 8E81      		ldd r24,Y+6
 1164 044c 9F81      		ldd r25,Y+7
 1165 044e 9B87      		std Y+11,r25
 1166 0450 8A87      		std Y+10,r24
 1167               	.L84:
 418:../../os/kernel/src/chqueues.c **** 
 419:../../os/kernel/src/chqueues.c ****     if (nfy)
 1168               		.loc 1 419 0
 1169 0452 C114      		cp r12,__zero_reg__
 1170 0454 D104      		cpc r13,__zero_reg__
 1171 0456 01F0      		breq .L85
 420:../../os/kernel/src/chqueues.c ****       nfy(oqp);
 1172               		.loc 1 420 0
 1173 0458 CE01      		movw r24,r28
 1174 045a F601      		movw r30,r12
 1175 045c 0995      		icall
 1176               	.LVL79:
 1177               	.L85:
 421:../../os/kernel/src/chqueues.c **** 
 422:../../os/kernel/src/chqueues.c ****     chSysUnlock(); /* Gives a preemption chance in a controlled point.*/
 1178               		.loc 1 422 0
 1179               	/* #APP */
 1180               	 ;  422 "../../os/kernel/src/chqueues.c" 1
 1181 045e 7894      		sei
 1182               	 ;  0 "" 2
 423:../../os/kernel/src/chqueues.c ****     w++;
 1183               		.loc 1 423 0
 1184               	/* #NOAPP */
 1185 0460 0F5F      		subi r16,-1
 1186 0462 1F4F      		sbci r17,-1
 1187               	.LVL80:
 424:../../os/kernel/src/chqueues.c ****     if (--n == 0)
 1188               		.loc 1 424 0
 1189 0464 F1E0      		ldi r31,1
 1190 0466 8F1A      		sub r8,r31
 1191 0468 9108      		sbc r9,__zero_reg__
 1192               	.LVL81:
 1193 046a 01F0      		breq .L82
 425:../../os/kernel/src/chqueues.c ****       return w;
 426:../../os/kernel/src/chqueues.c ****     chSysLock();
 1194               		.loc 1 426 0
 1195               	/* #APP */
 1196               	 ;  426 "../../os/kernel/src/chqueues.c" 1
 1197 046c F894      		cli
 1198               	 ;  0 "" 2
 408:../../os/kernel/src/chqueues.c ****     while (chOQIsFullI(oqp)) {
 1199               		.loc 1 408 0
 1200               	/* #NOAPP */
 1201 046e 8C81      		ldd r24,Y+4
 1202 0470 9D81      		ldd r25,Y+5
 1203 0472 0097      		sbiw r24,0
 1204 0474 01F4      		brne .L98
 1205               	.L83:
 409:../../os/kernel/src/chqueues.c ****       if (qwait((GenericQueue *)oqp, time) != Q_OK) {
 1206               		.loc 1 409 0
 1207 0476 B501      		movw r22,r10
 1208 0478 CE01      		movw r24,r28
 1209 047a 0E94 0000 		call qwait
 1210               	.LVL82:
 1211 047e 892B      		or r24,r25
 1212 0480 01F0      		breq .L97
 410:../../os/kernel/src/chqueues.c ****         chSysUnlock();
 1213               		.loc 1 410 0
 1214               	/* #APP */
 1215               	 ;  410 "../../os/kernel/src/chqueues.c" 1
 1216 0482 7894      		sei
 1217               	 ;  0 "" 2
 1218               	/* #NOAPP */
 1219               	.L82:
 427:../../os/kernel/src/chqueues.c ****   }
 428:../../os/kernel/src/chqueues.c **** }
 1220               		.loc 1 428 0
 1221 0484 C801      		movw r24,r16
 1222               	/* epilogue start */
 1223 0486 DF91      		pop r29
 1224 0488 CF91      		pop r28
 1225               	.LVL83:
 1226 048a 1F91      		pop r17
 1227 048c 0F91      		pop r16
 1228               	.LVL84:
 1229 048e FF90      		pop r15
 1230 0490 EF90      		pop r14
 1231               	.LVL85:
 1232 0492 DF90      		pop r13
 1233 0494 CF90      		pop r12
 1234               	.LVL86:
 1235 0496 BF90      		pop r11
 1236 0498 AF90      		pop r10
 1237               	.LVL87:
 1238 049a 9F90      		pop r9
 1239 049c 8F90      		pop r8
 1240               	.LVL88:
 1241 049e 0895      		ret
 1242               		.cfi_endproc
 1243               	.LFE17:
 1245               	.Letext0:
 1246               		.file 3 "/usr/local/cross/lib/gcc/avr/4.7.2/include/stddef.h"
 1247               		.file 4 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 1248               		.file 5 "../../os/ports/GCC/AVR/chtypes.h"
 1249               		.file 6 "../../os/kernel/include/chlists.h"
 1250               		.file 7 "../../os/kernel/include/chthreads.h"
 1251               		.file 8 "../../os/ports/GCC/AVR/chcore.h"
 1252               		.file 9 "../../os/kernel/include/chschd.h"
 1253               		.file 10 "../../os/kernel/include/chmtx.h"
 1254               		.file 11 "../../os/kernel/include/chqueues.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chqueues.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:11     .text:0000000000000000 qwait
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:83     .text:0000000000000040 chIQInit
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:139    .text:0000000000000074 chIQResetI
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:226    .text:00000000000000c8 chIQPutI
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:352    .text:000000000000015a chIQGetTimeout
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:474    .text:00000000000001c8 chIQReadTimeout
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:658    .text:000000000000026c chOQInit
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:714    .text:00000000000002a0 chOQResetI
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:805    .text:00000000000002fc chOQPutTimeout
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:939    .text:0000000000000376 chOQGetI
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccOQRBPc.s:1059   .text:00000000000003f8 chOQWriteTimeout

UNDEFINED SYMBOLS
rlist
chSchGoSleepTimeoutS
chSchReadyI

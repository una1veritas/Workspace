   1               		.file	"chregistry.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	chRegFirstThread
  12               	chRegFirstThread:
  13               	.LFB7:
  14               		.file 1 "../../os/kernel/src/chregistry.c"
   1:../../os/kernel/src/chregistry.c **** /*
   2:../../os/kernel/src/chregistry.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../os/kernel/src/chregistry.c ****                  2011,2012 Giovanni Di Sirio.
   4:../../os/kernel/src/chregistry.c **** 
   5:../../os/kernel/src/chregistry.c ****     This file is part of ChibiOS/RT.
   6:../../os/kernel/src/chregistry.c **** 
   7:../../os/kernel/src/chregistry.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../os/kernel/src/chregistry.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/kernel/src/chregistry.c ****     the Free Software Foundation; either version 3 of the License, or
  10:../../os/kernel/src/chregistry.c ****     (at your option) any later version.
  11:../../os/kernel/src/chregistry.c **** 
  12:../../os/kernel/src/chregistry.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../os/kernel/src/chregistry.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../os/kernel/src/chregistry.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../os/kernel/src/chregistry.c ****     GNU General Public License for more details.
  16:../../os/kernel/src/chregistry.c **** 
  17:../../os/kernel/src/chregistry.c ****     You should have received a copy of the GNU General Public License
  18:../../os/kernel/src/chregistry.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../os/kernel/src/chregistry.c **** */
  20:../../os/kernel/src/chregistry.c **** 
  21:../../os/kernel/src/chregistry.c **** /**
  22:../../os/kernel/src/chregistry.c ****  * @file    chregistry.c
  23:../../os/kernel/src/chregistry.c ****  * @brief   Threads registry code.
  24:../../os/kernel/src/chregistry.c ****  *
  25:../../os/kernel/src/chregistry.c ****  * @addtogroup registry
  26:../../os/kernel/src/chregistry.c ****  * @details Threads Registry related APIs and services.
  27:../../os/kernel/src/chregistry.c ****  *
  28:../../os/kernel/src/chregistry.c ****  *          <h2>Operation mode</h2>
  29:../../os/kernel/src/chregistry.c ****  *          The Threads Registry is a double linked list that holds all the
  30:../../os/kernel/src/chregistry.c ****  *          active threads in the system.<br>
  31:../../os/kernel/src/chregistry.c ****  *          Operations defined for the registry:
  32:../../os/kernel/src/chregistry.c ****  *          - <b>First</b>, returns the first, in creation order, active thread
  33:../../os/kernel/src/chregistry.c ****  *            in the system.
  34:../../os/kernel/src/chregistry.c ****  *          - <b>Next</b>, returns the next, in creation order, active thread
  35:../../os/kernel/src/chregistry.c ****  *            in the system.
  36:../../os/kernel/src/chregistry.c ****  *          .
  37:../../os/kernel/src/chregistry.c ****  *          The registry is meant to be mainly a debug feature, for example,
  38:../../os/kernel/src/chregistry.c ****  *          using the registry a debugger can enumerate the active threads
  39:../../os/kernel/src/chregistry.c ****  *          in any given moment or the shell can print the active threads
  40:../../os/kernel/src/chregistry.c ****  *          and their state.<br>
  41:../../os/kernel/src/chregistry.c ****  *          Another possible use is for centralized threads memory management,
  42:../../os/kernel/src/chregistry.c ****  *          terminating threads can pulse an event source and an event handler
  43:../../os/kernel/src/chregistry.c ****  *          can perform a scansion of the registry in order to recover the
  44:../../os/kernel/src/chregistry.c ****  *          memory.
  45:../../os/kernel/src/chregistry.c ****  * @pre     In order to use the threads registry the @p CH_USE_REGISTRY option
  46:../../os/kernel/src/chregistry.c ****  *          must be enabled in @p chconf.h.
  47:../../os/kernel/src/chregistry.c ****  * @{
  48:../../os/kernel/src/chregistry.c ****  */
  49:../../os/kernel/src/chregistry.c **** #include "ch.h"
  50:../../os/kernel/src/chregistry.c **** 
  51:../../os/kernel/src/chregistry.c **** #if CH_USE_REGISTRY || defined(__DOXYGEN__)
  52:../../os/kernel/src/chregistry.c **** 
  53:../../os/kernel/src/chregistry.c **** #define _offsetof(st, m)                                                     \
  54:../../os/kernel/src/chregistry.c ****   ((size_t)((char *)&((st *)0)->m - (char *)0))
  55:../../os/kernel/src/chregistry.c **** 
  56:../../os/kernel/src/chregistry.c **** /*
  57:../../os/kernel/src/chregistry.c ****  * OS signature in ROM plus debug-related information.
  58:../../os/kernel/src/chregistry.c ****  */
  59:../../os/kernel/src/chregistry.c **** ROMCONST chdebug_t ch_debug = {
  60:../../os/kernel/src/chregistry.c ****   "main",
  61:../../os/kernel/src/chregistry.c ****   (uint8_t)0,
  62:../../os/kernel/src/chregistry.c ****   (uint8_t)sizeof (chdebug_t),
  63:../../os/kernel/src/chregistry.c ****   (uint16_t)((CH_KERNEL_MAJOR << 11) |
  64:../../os/kernel/src/chregistry.c ****              (CH_KERNEL_MINOR << 6) |
  65:../../os/kernel/src/chregistry.c ****              (CH_KERNEL_PATCH) << 0),
  66:../../os/kernel/src/chregistry.c ****   (uint8_t)sizeof (void *),
  67:../../os/kernel/src/chregistry.c ****   (uint8_t)sizeof (systime_t),
  68:../../os/kernel/src/chregistry.c ****   (uint8_t)sizeof (Thread),
  69:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_prio),
  70:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_ctx),
  71:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_newer),
  72:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_older),
  73:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_name),
  74:../../os/kernel/src/chregistry.c **** #if CH_DBG_ENABLE_STACK_CHECK
  75:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_stklimit),
  76:../../os/kernel/src/chregistry.c **** #else
  77:../../os/kernel/src/chregistry.c ****   (uint8_t)0,
  78:../../os/kernel/src/chregistry.c **** #endif
  79:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_state),
  80:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_flags),
  81:../../os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
  82:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_refs),
  83:../../os/kernel/src/chregistry.c **** #else
  84:../../os/kernel/src/chregistry.c ****   (uint8_t)0,
  85:../../os/kernel/src/chregistry.c **** #endif
  86:../../os/kernel/src/chregistry.c **** #if CH_TIME_QUANTUM > 0
  87:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_preempt),
  88:../../os/kernel/src/chregistry.c **** #else
  89:../../os/kernel/src/chregistry.c ****   (uint8_t)0,
  90:../../os/kernel/src/chregistry.c **** #endif
  91:../../os/kernel/src/chregistry.c **** #if CH_DBG_THREADS_PROFILING
  92:../../os/kernel/src/chregistry.c ****   (uint8_t)_offsetof(Thread, p_time)
  93:../../os/kernel/src/chregistry.c **** #else
  94:../../os/kernel/src/chregistry.c ****   (uint8_t)0
  95:../../os/kernel/src/chregistry.c **** #endif
  96:../../os/kernel/src/chregistry.c **** };
  97:../../os/kernel/src/chregistry.c **** 
  98:../../os/kernel/src/chregistry.c **** /**
  99:../../os/kernel/src/chregistry.c ****  * @brief   Returns the first thread in the system.
 100:../../os/kernel/src/chregistry.c ****  * @details Returns the most ancient thread in the system, usually this is
 101:../../os/kernel/src/chregistry.c ****  *          the main thread unless it terminated. A reference is added to the
 102:../../os/kernel/src/chregistry.c ****  *          returned thread in order to make sure its status is not lost.
 103:../../os/kernel/src/chregistry.c ****  * @note    This function cannot return @p NULL because there is always at
 104:../../os/kernel/src/chregistry.c ****  *          least one thread in the system.
 105:../../os/kernel/src/chregistry.c ****  *
 106:../../os/kernel/src/chregistry.c ****  * @return              A reference to the most ancient thread.
 107:../../os/kernel/src/chregistry.c ****  *
 108:../../os/kernel/src/chregistry.c ****  * @api
 109:../../os/kernel/src/chregistry.c ****  */
 110:../../os/kernel/src/chregistry.c **** Thread *chRegFirstThread(void) {
  15               		.loc 1 110 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
 111:../../os/kernel/src/chregistry.c ****   Thread *tp;
 112:../../os/kernel/src/chregistry.c **** 
 113:../../os/kernel/src/chregistry.c ****   chSysLock();
  21               		.loc 1 113 0
  22               	/* #APP */
  23               	 ;  113 "../../os/kernel/src/chregistry.c" 1
  24 0000 F894      		cli
  25               	 ;  0 "" 2
 114:../../os/kernel/src/chregistry.c ****   tp = rlist.r_newer;
  26               		.loc 1 114 0
  27               	/* #NOAPP */
  28 0002 E0E0      		ldi r30,lo8(rlist+7)
  29 0004 F0E0      		ldi r31,hi8(rlist+7)
  30 0006 8081      		ld r24,Z
  31 0008 9181      		ldd r25,Z+1
  32               	.LVL0:
 115:../../os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
 116:../../os/kernel/src/chregistry.c ****   tp->p_refs++;
 117:../../os/kernel/src/chregistry.c **** #endif
 118:../../os/kernel/src/chregistry.c ****   chSysUnlock();
  33               		.loc 1 118 0
  34               	/* #APP */
  35               	 ;  118 "../../os/kernel/src/chregistry.c" 1
  36 000a 7894      		sei
  37               	 ;  0 "" 2
 119:../../os/kernel/src/chregistry.c ****   return tp;
 120:../../os/kernel/src/chregistry.c **** }
  38               		.loc 1 120 0
  39               	/* #NOAPP */
  40 000c 0895      		ret
  41               		.cfi_endproc
  42               	.LFE7:
  44               	.global	chRegNextThread
  46               	chRegNextThread:
  47               	.LFB8:
 121:../../os/kernel/src/chregistry.c **** 
 122:../../os/kernel/src/chregistry.c **** /**
 123:../../os/kernel/src/chregistry.c ****  * @brief   Returns the thread next to the specified one.
 124:../../os/kernel/src/chregistry.c ****  * @details The reference counter of the specified thread is decremented and
 125:../../os/kernel/src/chregistry.c ****  *          the reference counter of the returned thread is incremented.
 126:../../os/kernel/src/chregistry.c ****  *
 127:../../os/kernel/src/chregistry.c ****  * @param[in] tp        pointer to the thread
 128:../../os/kernel/src/chregistry.c ****  * @return              A reference to the next thread.
 129:../../os/kernel/src/chregistry.c ****  * @retval NULL         if there is no next thread.
 130:../../os/kernel/src/chregistry.c ****  *
 131:../../os/kernel/src/chregistry.c ****  * @api
 132:../../os/kernel/src/chregistry.c ****  */
 133:../../os/kernel/src/chregistry.c **** Thread *chRegNextThread(Thread *tp) {
  48               		.loc 1 133 0
  49               		.cfi_startproc
  50               	.LVL1:
  51               	/* prologue: function */
  52               	/* frame size = 0 */
  53               	/* stack size = 0 */
  54               	.L__stack_usage = 0
 134:../../os/kernel/src/chregistry.c ****   Thread *ntp;
 135:../../os/kernel/src/chregistry.c **** 
 136:../../os/kernel/src/chregistry.c ****   chSysLock();
  55               		.loc 1 136 0
  56               	/* #APP */
  57               	 ;  136 "../../os/kernel/src/chregistry.c" 1
  58 000e F894      		cli
  59               	 ;  0 "" 2
 137:../../os/kernel/src/chregistry.c ****   ntp = tp->p_newer;
  60               		.loc 1 137 0
  61               	/* #NOAPP */
  62 0010 FC01      		movw r30,r24
  63 0012 2781      		ldd r18,Z+7
  64 0014 3085      		ldd r19,Z+8
  65               	.LVL2:
 138:../../os/kernel/src/chregistry.c ****   if (ntp == (Thread *)&rlist)
  66               		.loc 1 138 0
  67 0016 F0E0      		ldi r31,hi8(rlist)
  68 0018 2030      		cpi r18,lo8(rlist)
  69 001a 3F07      		cpc r19,r31
  70 001c 01F0      		breq .L6
  71               	.LVL3:
  72               	.L3:
 139:../../os/kernel/src/chregistry.c ****     ntp = NULL;
 140:../../os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
 141:../../os/kernel/src/chregistry.c ****   else {
 142:../../os/kernel/src/chregistry.c ****     chDbgAssert(ntp->p_refs < 255, "chRegNextThread(), #1",
 143:../../os/kernel/src/chregistry.c ****                 "too many references");
 144:../../os/kernel/src/chregistry.c ****     ntp->p_refs++;
 145:../../os/kernel/src/chregistry.c ****   }
 146:../../os/kernel/src/chregistry.c **** #endif
 147:../../os/kernel/src/chregistry.c ****   chSysUnlock();
  73               		.loc 1 147 0
  74               	/* #APP */
  75               	 ;  147 "../../os/kernel/src/chregistry.c" 1
  76 001e 7894      		sei
  77               	 ;  0 "" 2
 148:../../os/kernel/src/chregistry.c **** #if CH_USE_DYNAMIC
 149:../../os/kernel/src/chregistry.c ****   chThdRelease(tp);
 150:../../os/kernel/src/chregistry.c **** #endif
 151:../../os/kernel/src/chregistry.c ****   return ntp;
 152:../../os/kernel/src/chregistry.c **** }
  78               		.loc 1 152 0
  79               	/* #NOAPP */
  80 0020 C901      		movw r24,r18
  81               	.LVL4:
  82 0022 0895      		ret
  83               	.LVL5:
  84               	.L6:
 139:../../os/kernel/src/chregistry.c ****     ntp = NULL;
  85               		.loc 1 139 0
  86 0024 20E0      		ldi r18,0
  87 0026 30E0      		ldi r19,0
  88               	.LVL6:
  89 0028 00C0      		rjmp .L3
  90               		.cfi_endproc
  91               	.LFE8:
  93               	.global	ch_debug
  94               		.section	.rodata
  97               	ch_debug:
  98 0000 6D61 696E 		.ascii	"main"
  99 0004 00        		.byte	0
 100 0005 16        		.byte	22
 101 0006 4111      		.word	4417
 102 0008 02        		.byte	2
 103 0009 02        		.byte	2
 104 000a 20        		.byte	32
 105 000b 04        		.byte	4
 106 000c 05        		.byte	5
 107 000d 07        		.byte	7
 108 000e 09        		.byte	9
 109 000f 0B        		.byte	11
 110 0010 00        		.byte	0
 111 0011 0D        		.byte	13
 112 0012 0E        		.byte	14
 113 0013 00        		.byte	0
 114 0014 0F        		.byte	15
 115 0015 10        		.byte	16
 116               		.text
 117               	.Letext0:
 118               		.file 2 "/usr/local/cross/lib/gcc/avr/4.7.2/include/stddef.h"
 119               		.file 3 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 120               		.file 4 "../../os/ports/GCC/AVR/chtypes.h"
 121               		.file 5 "../../os/kernel/include/chlists.h"
 122               		.file 6 "../../os/kernel/include/chthreads.h"
 123               		.file 7 "../../os/ports/GCC/AVR/chcore.h"
 124               		.file 8 "../../os/kernel/include/chschd.h"
 125               		.file 9 "../../os/kernel/include/chmtx.h"
 126               		.file 10 "../../os/kernel/include/chregistry.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chregistry.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:12     .text:0000000000000000 chRegFirstThread
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:46     .text:000000000000000e chRegNextThread
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc8cIjQI.s:97     .rodata:0000000000000000 ch_debug

UNDEFINED SYMBOLS
rlist
__do_copy_data

   1               		.file	"chsys.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.rodata.str1.1,"aMS",@progbits,1
  11               	.LC0:
  12 0000 6964 6C65 		.string	"idle"
  12      00
  13               		.text
  14               	.global	_idle_thread
  16               	_idle_thread:
  17               	.LFB7:
  18               		.file 1 "../../os/kernel/src/chsys.c"
   1:../../os/kernel/src/chsys.c **** /*
   2:../../os/kernel/src/chsys.c ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:../../os/kernel/src/chsys.c ****                  2011,2012 Giovanni Di Sirio.
   4:../../os/kernel/src/chsys.c **** 
   5:../../os/kernel/src/chsys.c ****     This file is part of ChibiOS/RT.
   6:../../os/kernel/src/chsys.c **** 
   7:../../os/kernel/src/chsys.c ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:../../os/kernel/src/chsys.c ****     it under the terms of the GNU General Public License as published by
   9:../../os/kernel/src/chsys.c ****     the Free Software Foundation; either version 3 of the License, or
  10:../../os/kernel/src/chsys.c ****     (at your option) any later version.
  11:../../os/kernel/src/chsys.c **** 
  12:../../os/kernel/src/chsys.c ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:../../os/kernel/src/chsys.c ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:../../os/kernel/src/chsys.c ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:../../os/kernel/src/chsys.c ****     GNU General Public License for more details.
  16:../../os/kernel/src/chsys.c **** 
  17:../../os/kernel/src/chsys.c ****     You should have received a copy of the GNU General Public License
  18:../../os/kernel/src/chsys.c ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:../../os/kernel/src/chsys.c **** */
  20:../../os/kernel/src/chsys.c **** 
  21:../../os/kernel/src/chsys.c **** /**
  22:../../os/kernel/src/chsys.c ****  * @file    chsys.c
  23:../../os/kernel/src/chsys.c ****  * @brief   System related code.
  24:../../os/kernel/src/chsys.c ****  *
  25:../../os/kernel/src/chsys.c ****  * @addtogroup system
  26:../../os/kernel/src/chsys.c ****  * @details System related APIs and services:
  27:../../os/kernel/src/chsys.c ****  *          - Initialization.
  28:../../os/kernel/src/chsys.c ****  *          - Locks.
  29:../../os/kernel/src/chsys.c ****  *          - Interrupt Handling.
  30:../../os/kernel/src/chsys.c ****  *          - Power Management.
  31:../../os/kernel/src/chsys.c ****  *          - Abnormal Termination.
  32:../../os/kernel/src/chsys.c ****  *          .
  33:../../os/kernel/src/chsys.c ****  * @{
  34:../../os/kernel/src/chsys.c ****  */
  35:../../os/kernel/src/chsys.c **** 
  36:../../os/kernel/src/chsys.c **** #include "ch.h"
  37:../../os/kernel/src/chsys.c **** 
  38:../../os/kernel/src/chsys.c **** #if !CH_NO_IDLE_THREAD || defined(__DOXYGEN__)
  39:../../os/kernel/src/chsys.c **** /**
  40:../../os/kernel/src/chsys.c ****  * @brief   Idle thread working area.
  41:../../os/kernel/src/chsys.c ****  */
  42:../../os/kernel/src/chsys.c **** WORKING_AREA(_idle_thread_wa, PORT_IDLE_THREAD_STACK_SIZE);
  43:../../os/kernel/src/chsys.c **** 
  44:../../os/kernel/src/chsys.c **** /**
  45:../../os/kernel/src/chsys.c ****  * @brief   This function implements the idle thread infinite loop.
  46:../../os/kernel/src/chsys.c ****  * @details The function puts the processor in the lowest power mode capable
  47:../../os/kernel/src/chsys.c ****  *          to serve interrupts.<br>
  48:../../os/kernel/src/chsys.c ****  *          The priority is internally set to the minimum system value so
  49:../../os/kernel/src/chsys.c ****  *          that this thread is executed only if there are no other ready
  50:../../os/kernel/src/chsys.c ****  *          threads in the system.
  51:../../os/kernel/src/chsys.c ****  *
  52:../../os/kernel/src/chsys.c ****  * @param[in] p the thread parameter, unused in this scenario
  53:../../os/kernel/src/chsys.c ****  */
  54:../../os/kernel/src/chsys.c **** void _idle_thread(void *p) {
  19               		.loc 1 54 0
  20               		.cfi_startproc
  21               	.LVL0:
  22               	/* prologue: function */
  23               	/* frame size = 0 */
  24               	/* stack size = 0 */
  25               	.L__stack_usage = 0
  55:../../os/kernel/src/chsys.c **** 
  56:../../os/kernel/src/chsys.c ****   (void)p;
  57:../../os/kernel/src/chsys.c ****   chRegSetThreadName("idle");
  26               		.loc 1 57 0
  27 0000 E091 0000 		lds r30,rlist+11
  28 0004 F091 0000 		lds r31,rlist+11+1
  29 0008 80E0      		ldi r24,lo8(.LC0)
  30 000a 90E0      		ldi r25,hi8(.LC0)
  31               	.LVL1:
  32 000c 9487      		std Z+12,r25
  33 000e 8387      		std Z+11,r24
  34               	.L2:
  35 0010 00C0      		rjmp .L2
  36               		.cfi_endproc
  37               	.LFE7:
  39               	.global	chSysInit
  41               	chSysInit:
  42               	.LFB8:
  58:../../os/kernel/src/chsys.c ****   while (TRUE) {
  59:../../os/kernel/src/chsys.c ****     port_wait_for_interrupt();
  60:../../os/kernel/src/chsys.c ****     IDLE_LOOP_HOOK();
  61:../../os/kernel/src/chsys.c ****   }
  62:../../os/kernel/src/chsys.c **** }
  63:../../os/kernel/src/chsys.c **** #endif /* CH_NO_IDLE_THREAD */
  64:../../os/kernel/src/chsys.c **** 
  65:../../os/kernel/src/chsys.c **** /**
  66:../../os/kernel/src/chsys.c ****  * @brief   ChibiOS/RT initialization.
  67:../../os/kernel/src/chsys.c ****  * @details After executing this function the current instructions stream
  68:../../os/kernel/src/chsys.c ****  *          becomes the main thread.
  69:../../os/kernel/src/chsys.c ****  * @pre     Interrupts must be still disabled when @p chSysInit() is invoked
  70:../../os/kernel/src/chsys.c ****  *          and are internally enabled.
  71:../../os/kernel/src/chsys.c ****  * @post    The main thread is created with priority @p NORMALPRIO.
  72:../../os/kernel/src/chsys.c ****  * @note    This function has special, architecture-dependent, requirements,
  73:../../os/kernel/src/chsys.c ****  *          see the notes into the various port reference manuals.
  74:../../os/kernel/src/chsys.c ****  *
  75:../../os/kernel/src/chsys.c ****  * @special
  76:../../os/kernel/src/chsys.c ****  */
  77:../../os/kernel/src/chsys.c **** void chSysInit(void) {
  43               		.loc 1 77 0
  44               		.cfi_startproc
  45 0012 0F93      		push r16
  46               	.LCFI0:
  47               		.cfi_def_cfa_offset 3
  48               		.cfi_offset 16, -2
  49 0014 1F93      		push r17
  50               	.LCFI1:
  51               		.cfi_def_cfa_offset 4
  52               		.cfi_offset 17, -3
  53               	/* prologue: function */
  54               	/* frame size = 0 */
  55               	/* stack size = 2 */
  56               	.L__stack_usage = 2
  78:../../os/kernel/src/chsys.c ****   static Thread mainthread;
  79:../../os/kernel/src/chsys.c **** #if CH_DBG_ENABLE_STACK_CHECK
  80:../../os/kernel/src/chsys.c ****   extern stkalign_t __main_thread_stack_base__;
  81:../../os/kernel/src/chsys.c **** #endif
  82:../../os/kernel/src/chsys.c **** 
  83:../../os/kernel/src/chsys.c ****   port_init();
  84:../../os/kernel/src/chsys.c ****   _scheduler_init();
  57               		.loc 1 84 0
  58 0016 0E94 0000 		call _scheduler_init
  59               	.LVL2:
  85:../../os/kernel/src/chsys.c ****   _vt_init();
  60               		.loc 1 85 0
  61 001a 0E94 0000 		call _vt_init
  62               	.LVL3:
  86:../../os/kernel/src/chsys.c **** #if CH_USE_MEMCORE
  87:../../os/kernel/src/chsys.c ****   _core_init();
  88:../../os/kernel/src/chsys.c **** #endif
  89:../../os/kernel/src/chsys.c **** #if CH_USE_HEAP
  90:../../os/kernel/src/chsys.c ****   _heap_init();
  91:../../os/kernel/src/chsys.c **** #endif
  92:../../os/kernel/src/chsys.c **** #if CH_DBG_ENABLE_TRACE
  93:../../os/kernel/src/chsys.c ****   _trace_init();
  94:../../os/kernel/src/chsys.c **** #endif
  95:../../os/kernel/src/chsys.c **** 
  96:../../os/kernel/src/chsys.c ****   /* Now this instructions flow becomes the main thread.*/
  97:../../os/kernel/src/chsys.c ****   setcurrp(_thread_init(&mainthread, NORMALPRIO));
  63               		.loc 1 97 0
  64 001e 60E4      		ldi r22,lo8(64)
  65 0020 80E0      		ldi r24,lo8(mainthread.1935)
  66 0022 90E0      		ldi r25,hi8(mainthread.1935)
  67 0024 0E94 0000 		call _thread_init
  68               	.LVL4:
  69 0028 9093 0000 		sts rlist+11+1,r25
  70 002c 8093 0000 		sts rlist+11,r24
  98:../../os/kernel/src/chsys.c ****   currp->p_state = THD_STATE_CURRENT;
  71               		.loc 1 98 0
  72 0030 21E0      		ldi r18,lo8(1)
  73 0032 FC01      		movw r30,r24
  74 0034 2587      		std Z+13,r18
  99:../../os/kernel/src/chsys.c **** #if CH_DBG_ENABLE_STACK_CHECK
 100:../../os/kernel/src/chsys.c ****   /* This is a special case because the main thread Thread structure is not
 101:../../os/kernel/src/chsys.c ****      adjacent to its stack area.*/
 102:../../os/kernel/src/chsys.c ****   currp->p_stklimit = &__main_thread_stack_base__;
 103:../../os/kernel/src/chsys.c **** #endif
 104:../../os/kernel/src/chsys.c ****   chSysEnable();
  75               		.loc 1 104 0
  76               	/* #APP */
  77               	 ;  104 "../../os/kernel/src/chsys.c" 1
  78 0036 7894      		sei
  79               	 ;  0 "" 2
 105:../../os/kernel/src/chsys.c **** 
 106:../../os/kernel/src/chsys.c ****   /* Note, &ch_debug points to the string "main" if the registry is
 107:../../os/kernel/src/chsys.c ****      active, else the parameter is ignored.*/
 108:../../os/kernel/src/chsys.c ****   chRegSetThreadName((const char *)&ch_debug);
  80               		.loc 1 108 0
  81               	/* #NOAPP */
  82 0038 E091 0000 		lds r30,rlist+11
  83 003c F091 0000 		lds r31,rlist+11+1
  84 0040 80E0      		ldi r24,lo8(ch_debug)
  85 0042 90E0      		ldi r25,hi8(ch_debug)
  86 0044 9487      		std Z+12,r25
  87 0046 8387      		std Z+11,r24
 109:../../os/kernel/src/chsys.c **** 
 110:../../os/kernel/src/chsys.c **** #if !CH_NO_IDLE_THREAD
 111:../../os/kernel/src/chsys.c ****   /* This thread has the lowest priority in the system, its role is just to
 112:../../os/kernel/src/chsys.c ****      serve interrupts in its context while keeping the lowest energy saving
 113:../../os/kernel/src/chsys.c ****      mode compatible with the system status.*/
 114:../../os/kernel/src/chsys.c ****   chThdCreateStatic(_idle_thread_wa, sizeof(_idle_thread_wa), IDLEPRIO,
  88               		.loc 1 114 0
  89 0048 00E0      		ldi r16,0
  90 004a 10E0      		ldi r17,0
  91 004c 20E0      		ldi r18,lo8(gs(_idle_thread))
  92 004e 30E0      		ldi r19,hi8(gs(_idle_thread))
  93 0050 41E0      		ldi r20,lo8(1)
  94 0052 6DE6      		ldi r22,lo8(109)
  95 0054 70E0      		ldi r23,0
  96 0056 80E0      		ldi r24,lo8(_idle_thread_wa)
  97 0058 90E0      		ldi r25,hi8(_idle_thread_wa)
  98 005a 0E94 0000 		call chThdCreateStatic
  99               	.LVL5:
 100               	/* epilogue start */
 115:../../os/kernel/src/chsys.c ****                     (tfunc_t)_idle_thread, NULL);
 116:../../os/kernel/src/chsys.c **** #endif
 117:../../os/kernel/src/chsys.c **** }
 101               		.loc 1 117 0
 102 005e 1F91      		pop r17
 103 0060 0F91      		pop r16
 104 0062 0895      		ret
 105               		.cfi_endproc
 106               	.LFE8:
 108               	.global	chSysTimerHandlerI
 110               	chSysTimerHandlerI:
 111               	.LFB9:
 118:../../os/kernel/src/chsys.c **** 
 119:../../os/kernel/src/chsys.c **** /**
 120:../../os/kernel/src/chsys.c ****  * @brief   Handles time ticks for round robin preemption and timer increments.
 121:../../os/kernel/src/chsys.c ****  * @details Decrements the remaining time quantum of the running thread
 122:../../os/kernel/src/chsys.c ****  *          and preempts it when the quantum is used up. Increments system
 123:../../os/kernel/src/chsys.c ****  *          time and manages the timers.
 124:../../os/kernel/src/chsys.c ****  * @note    The frequency of the timer determines the system tick granularity
 125:../../os/kernel/src/chsys.c ****  *          and, together with the @p CH_TIME_QUANTUM macro, the round robin
 126:../../os/kernel/src/chsys.c ****  *          interval.
 127:../../os/kernel/src/chsys.c ****  *
 128:../../os/kernel/src/chsys.c ****  * @iclass
 129:../../os/kernel/src/chsys.c ****  */
 130:../../os/kernel/src/chsys.c **** void chSysTimerHandlerI(void) {
 112               		.loc 1 130 0
 113               		.cfi_startproc
 114 0064 0F93      		push r16
 115               	.LCFI2:
 116               		.cfi_def_cfa_offset 3
 117               		.cfi_offset 16, -2
 118 0066 1F93      		push r17
 119               	.LCFI3:
 120               		.cfi_def_cfa_offset 4
 121               		.cfi_offset 17, -3
 122 0068 CF93      		push r28
 123               	.LCFI4:
 124               		.cfi_def_cfa_offset 5
 125               		.cfi_offset 28, -4
 126 006a DF93      		push r29
 127               	.LCFI5:
 128               		.cfi_def_cfa_offset 6
 129               		.cfi_offset 29, -5
 130               	/* prologue: function */
 131               	/* frame size = 0 */
 132               	/* stack size = 4 */
 133               	.L__stack_usage = 4
 131:../../os/kernel/src/chsys.c **** 
 132:../../os/kernel/src/chsys.c ****   chDbgCheckClassI();
 133:../../os/kernel/src/chsys.c **** 
 134:../../os/kernel/src/chsys.c **** #if CH_TIME_QUANTUM > 0
 135:../../os/kernel/src/chsys.c ****   /* Running thread has not used up quantum yet? */
 136:../../os/kernel/src/chsys.c ****   if (currp->p_preempt > 0)
 134               		.loc 1 136 0
 135 006c E091 0000 		lds r30,rlist+11
 136 0070 F091 0000 		lds r31,rlist+11+1
 137 0074 8785      		ldd r24,Z+15
 138 0076 8823      		tst r24
 139 0078 01F0      		breq .L6
 137:../../os/kernel/src/chsys.c ****     /* Decrement remaining quantum.*/
 138:../../os/kernel/src/chsys.c ****     currp->p_preempt--;
 140               		.loc 1 138 0
 141 007a 8150      		subi r24,lo8(-(-1))
 142 007c 8787      		std Z+15,r24
 143               	.L6:
 139:../../os/kernel/src/chsys.c **** #endif
 140:../../os/kernel/src/chsys.c **** #if CH_DBG_THREADS_PROFILING
 141:../../os/kernel/src/chsys.c ****   currp->p_time++;
 144               		.loc 1 141 0
 145 007e 8089      		ldd r24,Z+16
 146 0080 9189      		ldd r25,Z+17
 147 0082 0196      		adiw r24,1
 148 0084 918B      		std Z+17,r25
 149 0086 808B      		std Z+16,r24
 142:../../os/kernel/src/chsys.c **** #endif
 143:../../os/kernel/src/chsys.c ****   chVTDoTickI();
 150               		.loc 1 143 0
 151 0088 8091 0000 		lds r24,vtlist+6
 152 008c 9091 0000 		lds r25,vtlist+6+1
 153 0090 0196      		adiw r24,1
 154 0092 9093 0000 		sts vtlist+6+1,r25
 155 0096 8093 0000 		sts vtlist+6,r24
 156 009a A091 0000 		lds r26,vtlist
 157 009e B091 0000 		lds r27,vtlist+1
 158 00a2 80E0      		ldi r24,hi8(vtlist)
 159 00a4 A030      		cpi r26,lo8(vtlist)
 160 00a6 B807      		cpc r27,r24
 161 00a8 01F0      		breq .L5
 162               	.LBB2:
 163               		.loc 1 143 0 is_stmt 0 discriminator 1
 164 00aa 1496      		adiw r26,4
 165 00ac 8D91      		ld r24,X+
 166 00ae 9C91      		ld r25,X
 167 00b0 1597      		sbiw r26,4+1
 168 00b2 0197      		sbiw r24,1
 169 00b4 1596      		adiw r26,4+1
 170 00b6 9C93      		st X,r25
 171 00b8 8E93      		st -X,r24
 172 00ba 1497      		sbiw r26,4
 173               	.LVL6:
 174 00bc 892B      		or r24,r25
 175 00be 01F4      		brne .L5
 176 00c0 00E0      		ldi r16,lo8(vtlist)
 177 00c2 10E0      		ldi r17,hi8(vtlist)
 178               	.L9:
 179               	.LBB3:
 180               		.loc 1 143 0 discriminator 3
 181 00c4 1696      		adiw r26,6
 182 00c6 ED91      		ld r30,X+
 183 00c8 FC91      		ld r31,X
 184 00ca 1797      		sbiw r26,6+1
 185               	.LVL7:
 186 00cc 1796      		adiw r26,6+1
 187 00ce 1C92      		st X,__zero_reg__
 188 00d0 1E92      		st -X,__zero_reg__
 189 00d2 1697      		sbiw r26,6
 190 00d4 CD91      		ld r28,X+
 191 00d6 DC91      		ld r29,X
 192 00d8 1197      		sbiw r26,1
 193 00da 1B83      		std Y+3,r17
 194 00dc 0A83      		std Y+2,r16
 195 00de D093 0000 		sts vtlist+1,r29
 196 00e2 C093 0000 		sts vtlist,r28
 197 00e6 1896      		adiw r26,8
 198 00e8 8D91      		ld r24,X+
 199 00ea 9C91      		ld r25,X
 200 00ec 1997      		sbiw r26,8+1
 201 00ee 0995      		icall
 202               	.LVL8:
 203               	.LBE3:
 204 00f0 A091 0000 		lds r26,vtlist
 205 00f4 B091 0000 		lds r27,vtlist+1
 206               	.LVL9:
 207 00f8 1496      		adiw r26,4
 208 00fa 8D91      		ld r24,X+
 209 00fc 9C91      		ld r25,X
 210 00fe 1597      		sbiw r26,4+1
 211 0100 892B      		or r24,r25
 212 0102 01F0      		breq .L9
 213               	.LVL10:
 214               	.L5:
 215               	/* epilogue start */
 216               	.LBE2:
 144:../../os/kernel/src/chsys.c **** #if defined(SYSTEM_TICK_EVENT_HOOK)
 145:../../os/kernel/src/chsys.c ****   SYSTEM_TICK_EVENT_HOOK();
 146:../../os/kernel/src/chsys.c **** #endif
 147:../../os/kernel/src/chsys.c **** }
 217               		.loc 1 147 0 is_stmt 1
 218 0104 DF91      		pop r29
 219 0106 CF91      		pop r28
 220 0108 1F91      		pop r17
 221 010a 0F91      		pop r16
 222 010c 0895      		ret
 223               		.cfi_endproc
 224               	.LFE9:
 226               		.comm	_idle_thread_wa,109,1
 227               		.local	mainthread.1935
 228               		.comm	mainthread.1935,32,1
 229               	.Letext0:
 230               		.file 2 "/usr/local/cross/lib/gcc/avr/4.7.2/include/stddef.h"
 231               		.file 3 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 232               		.file 4 "../../os/ports/GCC/AVR/chtypes.h"
 233               		.file 5 "../../os/kernel/include/chlists.h"
 234               		.file 6 "../../os/kernel/include/chthreads.h"
 235               		.file 7 "../../os/ports/GCC/AVR/chcore.h"
 236               		.file 8 "../../os/kernel/include/chvt.h"
 237               		.file 9 "../../os/kernel/include/chschd.h"
 238               		.file 10 "../../os/kernel/include/chmtx.h"
 239               		.file 11 "../../os/kernel/include/chregistry.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 chsys.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:5      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:6      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:16     .text:0000000000000000 _idle_thread
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:41     .text:0000000000000012 chSysInit
                             .bss:0000000000000000 mainthread.1935
                            *COM*:000000000000006d _idle_thread_wa
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//ccntPdtM.s:110    .text:0000000000000064 chSysTimerHandlerI

UNDEFINED SYMBOLS
rlist
_scheduler_init
_vt_init
_thread_init
ch_debug
chThdCreateStatic
vtlist
__do_copy_data
__do_clear_bss

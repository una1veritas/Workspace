   1               		.file	"main.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__RAMPZ__ = 0x3b
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.text
   9               	.Ltext0:
  10               		.cfi_sections	.debug_frame
  12               	Thread1:
  13               	.LFB7:
  14               		.file 1 "main.c"
   1:main.c        **** /*
   2:main.c        ****     ChibiOS/RT - Copyright (C) 2006,2007,2008,2009,2010,
   3:main.c        ****                  2011,2012 Giovanni Di Sirio.
   4:main.c        **** 
   5:main.c        ****     This file is part of ChibiOS/RT.
   6:main.c        **** 
   7:main.c        ****     ChibiOS/RT is free software; you can redistribute it and/or modify
   8:main.c        ****     it under the terms of the GNU General Public License as published by
   9:main.c        ****     the Free Software Foundation; either version 3 of the License, or
  10:main.c        ****     (at your option) any later version.
  11:main.c        **** 
  12:main.c        ****     ChibiOS/RT is distributed in the hope that it will be useful,
  13:main.c        ****     but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:main.c        ****     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:main.c        ****     GNU General Public License for more details.
  16:main.c        **** 
  17:main.c        ****     You should have received a copy of the GNU General Public License
  18:main.c        ****     along with this program.  If not, see <http://www.gnu.org/licenses/>.
  19:main.c        **** */
  20:main.c        **** 
  21:main.c        **** #include "ch.h"
  22:main.c        **** #include "hal.h"
  23:main.c        **** #include "test.h"
  24:main.c        **** 
  25:main.c        **** static WORKING_AREA(waThread1, 32);
  26:main.c        **** static msg_t Thread1(void *arg) {
  15               		.loc 1 26 0
  16               		.cfi_startproc
  17               	/* prologue: function */
  18               	/* frame size = 0 */
  19               	/* stack size = 0 */
  20               	.L__stack_usage = 0
  21               	.LVL0:
  22               	.L2:
  27:main.c        **** 
  28:main.c        ****   while (TRUE) {
  29:main.c        ****     palTogglePad(IOPORT2, PORTB_LED1);
  23               		.loc 1 29 0 discriminator 1
  24 0000 85B1      		in r24,0x5
  25 0002 8058      		subi r24,lo8(-(-128))
  26 0004 85B9      		out 0x5,r24
  30:main.c        ****     chThdSleepMilliseconds(1000);
  27               		.loc 1 30 0 discriminator 1
  28 0006 88EE      		ldi r24,lo8(-24)
  29 0008 93E0      		ldi r25,lo8(3)
  30 000a 0E94 0000 		call chThdSleep
  31               	.LVL1:
  32 000e 00C0      		rjmp .L2
  33               		.cfi_endproc
  34               	.LFE7:
  36               		.section	.text.startup,"ax",@progbits
  37               	.global	main
  39               	main:
  40               	.LFB8:
  31:main.c        ****   }
  32:main.c        ****   return 0;
  33:main.c        **** }
  34:main.c        **** 
  35:main.c        **** /*
  36:main.c        ****  * Application entry point.
  37:main.c        ****  */
  38:main.c        **** int main(void) {
  41               		.loc 1 38 0
  42               		.cfi_startproc
  43               	/* prologue: function */
  44               	/* frame size = 0 */
  45               	/* stack size = 0 */
  46               	.L__stack_usage = 0
  39:main.c        **** 
  40:main.c        ****   /*
  41:main.c        ****    * System initializations.
  42:main.c        ****    * - HAL initialization, this also initializes the configured device drivers
  43:main.c        ****    *   and performs the board-specific initializations.
  44:main.c        ****    * - Kernel initialization, the main() function becomes a thread and the
  45:main.c        ****    *   RTOS is active.
  46:main.c        ****    */
  47:main.c        ****   halInit();
  47               		.loc 1 47 0
  48 0000 0E94 0000 		call halInit
  49               	.LVL2:
  48:main.c        ****   chSysInit();
  50               		.loc 1 48 0
  51 0004 0E94 0000 		call chSysInit
  52               	.LVL3:
  49:main.c        **** 
  50:main.c        ****   /*
  51:main.c        ****    * Activates the serial driver 1 using the driver default configuration.
  52:main.c        ****    */
  53:main.c        ****   palClearPad(IOPORT2, PORTB_LED1);
  53               		.loc 1 53 0
  54               	/* #APP */
  55               	 ;  53 "main.c" 1
  56 0008 2F98      		cbi 5,7
  57               		
  58               	 ;  0 "" 2
  54:main.c        ****   sdStart(&SD1, NULL);
  59               		.loc 1 54 0
  60               	/* #NOAPP */
  61 000a 60E0      		ldi r22,0
  62 000c 70E0      		ldi r23,0
  63 000e 80E0      		ldi r24,lo8(SD1)
  64 0010 90E0      		ldi r25,hi8(SD1)
  65 0012 0E94 0000 		call sdStart
  66               	.LVL4:
  55:main.c        **** 
  56:main.c        ****   /*
  57:main.c        ****    * Starts the LED blinker thread.
  58:main.c        ****    */
  59:main.c        ****   chThdCreateStatic(waThread1, sizeof(waThread1), NORMALPRIO, Thread1, NULL);
  67               		.loc 1 59 0
  68 0016 00E0      		ldi r16,0
  69 0018 10E0      		ldi r17,0
  70 001a 20E0      		ldi r18,lo8(gs(Thread1))
  71 001c 30E0      		ldi r19,hi8(gs(Thread1))
  72 001e 40E4      		ldi r20,lo8(64)
  73 0020 67E8      		ldi r22,lo8(-121)
  74 0022 70E0      		ldi r23,0
  75 0024 80E0      		ldi r24,lo8(waThread1)
  76 0026 90E0      		ldi r25,hi8(waThread1)
  77 0028 0E94 0000 		call chThdCreateStatic
  78               	.LVL5:
  60:main.c        **** 
  61:main.c        ****   TestThread(&SD1);
  79               		.loc 1 61 0
  80 002c 80E0      		ldi r24,lo8(SD1)
  81 002e 90E0      		ldi r25,hi8(SD1)
  82 0030 0E94 0000 		call TestThread
  83               	.LVL6:
  84               	.L4:
  62:main.c        ****   while(TRUE) {
  63:main.c        ****     chThdSleepMilliseconds(1000);
  85               		.loc 1 63 0 discriminator 1
  86 0034 88EE      		ldi r24,lo8(-24)
  87 0036 93E0      		ldi r25,lo8(3)
  88 0038 0E94 0000 		call chThdSleep
  89               	.LVL7:
  90 003c 00C0      		rjmp .L4
  91               		.cfi_endproc
  92               	.LFE8:
  94               		.local	waThread1
  95               		.comm	waThread1,135,1
  96               		.text
  97               	.Letext0:
  98               		.file 2 "/usr/local/cross/lib/gcc/avr/4.7.2/include/stddef.h"
  99               		.file 3 "/usr/local/cross/lib/gcc/avr/4.7.2/../../../../avr/include/stdint.h"
 100               		.file 4 "../../os/ports/GCC/AVR/chtypes.h"
 101               		.file 5 "../../os/kernel/include/chlists.h"
 102               		.file 6 "../../os/kernel/include/chthreads.h"
 103               		.file 7 "../../os/ports/GCC/AVR/chcore.h"
 104               		.file 8 "../../os/kernel/include/chmtx.h"
 105               		.file 9 "../../os/kernel/include/chevents.h"
 106               		.file 10 "../../os/kernel/include/chqueues.h"
 107               		.file 11 "../../os/hal/platforms/AVR/pal_lld.h"
 108               		.file 12 "../../os/hal/include/serial.h"
 109               		.file 13 "../../os/hal/platforms/AVR/serial_lld.h"
 110               		.file 14 "../../os/hal/include/hal.h"
 111               		.file 15 "../../os/kernel/include/chsys.h"
 112               		.file 16 "../../test/test.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:2      *ABS*:000000000000003e __SP_H__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:3      *ABS*:000000000000003d __SP_L__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:4      *ABS*:000000000000003f __SREG__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:5      *ABS*:000000000000003b __RAMPZ__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:6      *ABS*:0000000000000000 __tmp_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:7      *ABS*:0000000000000001 __zero_reg__
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:12     .text:0000000000000000 Thread1
/var/folders/5n/p_75w94d66l9ssrldxqdhh700000gn/T//cc3d8WJM.s:39     .text.startup:0000000000000000 main
                             .bss:0000000000000000 waThread1

UNDEFINED SYMBOLS
chThdSleep
halInit
chSysInit
SD1
sdStart
chThdCreateStatic
TestThread
__do_clear_bss

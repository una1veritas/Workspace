
Allocating common symbols
Common symbol       size              file

param               0x20              gcc_sample.o
combuf              0x50              gcc_sample.o
combuf2f            0x4               gcc_sample.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD startup.o
LOAD gcc_sample.o

.start          0x0000000000000000       0x90
                0x0000000000000000                _stext = .
 startup.o(.text)
 .text          0x0000000000000000       0x90 startup.o
                0x0000000000000020                _startup
                0x0000000000000090                _etext = .

.text           0x0000000000000090     0x17e0
                0x0000000000000090                _stext = .
 *(.text)
 .text          0x0000000000000090     0x17e0 gcc_sample.o
                0x0000000000000090                CheckRecvData
                0x00000000000000a4                RecvData
                0x00000000000000c4                SendData
                0x00000000000000e4                IRQ_func
                0x0000000000000124                CPU_Initialize
                0x000000000000020c                putscon
                0x0000000000000238                getscon
                0x0000000000000368                paramer
                0x0000000000000380                movem
                0x0000000000000418                dumpmt
                0x0000000000000430                cmpstr
                0x0000000000000494                cpysstr
                0x0000000000000504                spacen
                0x0000000000000530                crlf
                0x000000000000054c                chex
                0x0000000000000588                htol
                0x00000000000005dc                argck
                0x000000000000063c                hex
                0x0000000000000650                ckasci
                0x0000000000000674                cstrlen
                0x00000000000006ac                csprintf
                0x00000000000009ec                cprintf
                0x0000000000000a34                srload
                0x0000000000000c9c                verify
                0x0000000000000d50                setmemo
                0x0000000000000fd4                dumpm
                0x000000000000112c                findp
                0x0000000000001230                sievemain
                0x0000000000001328                main2
                0x000000000000177c                main
                0x0000000000001870                _etext = .

.glue_7         0x0000000000001870        0x0
 .glue_7        0x0000000000000000        0x0 linker stubs

.glue_7t        0x0000000000001870        0x0
 .glue_7t       0x0000000000000000        0x0 linker stubs

.vfp11_veneer   0x0000000000001870        0x0
 .vfp11_veneer  0x0000000000000000        0x0 linker stubs

.v4_bx          0x0000000000001870        0x0
 .v4_bx         0x0000000000000000        0x0 linker stubs

.iplt           0x0000000000001870        0x0
 .iplt          0x0000000000000000        0x0 startup.o

.rdata          0x0000000000001870      0x208
                0x0000000000001870                _srdata = .
 *(.rodata)
 *(.rodata.str1.4)
 .rodata.str1.4
                0x0000000000001870      0x208 gcc_sample.o
                0x0000000000001a78                _erdata = .

.rel.dyn        0x0000000000001a78        0x0
 .rel.iplt      0x0000000000000000        0x0 startup.o

.data           0x000000004000f000        0x0
                0x000000004000f000                _sdata = .
 *(.data)
 .data          0x000000004000f000        0x0 startup.o
 .data          0x000000004000f000        0x0 gcc_sample.o
 *(.zdata)
                0x000000004000f000                _edata = .

.igot.plt       0x000000004000f000        0x0
 .igot.plt      0x0000000000000000        0x0 startup.o

.bss            0x000000004000f000       0x88
                0x000000004000f000                _sbss = .
 *(.bss)
 .bss           0x000000004000f000        0x0 startup.o
 .bss           0x000000004000f000        0x0 gcc_sample.o
 *(.comment)
 .comment       0x000000004000f000       0x11 gcc_sample.o
                                         0x12 (size before relaxing)
                0x000000004000f011                _ebss = .
 *fill*         0x000000004000f011        0x3 00
 COMMON         0x000000004000f014       0x74 gcc_sample.o
                0x000000004000f014                param
                0x000000004000f034                combuf
                0x000000004000f084                combuf2f
                0x000000004000f088                _end = .
                0x000000004000f088                . = ALIGN (0x4)
                0x000000004000f288                . = (. + 0x200)
                0x000000004000f288                _sp_base = .
                0x000000004000f488                . = (. + 0x200)
                0x000000004000f488                _exception_sp_base = .
OUTPUT(gcc_sample_r elf32-littlearm)

.ARM.attributes
                0x0000000000000000       0x2c
 .ARM.attributes
                0x0000000000000000       0x10 startup.o
 .ARM.attributes
                0x0000000000000010       0x32 gcc_sample.o

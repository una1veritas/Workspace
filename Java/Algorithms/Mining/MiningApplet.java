/*
	A basic extension of the java.applet.Applet class
 */

import java.awt.*;
import java.applet.*;

import java.util.Vector;
import java.io.*;
import java.net.*; 

public class MiningApplet extends Applet
{
	public void init()
	{
		// Take out this line if you don't use symantec.itools.net.RelativeURL or symantec.itools.awt.util.StatusScroller
		symantec.itools.lang.Context.setApplet(this);
	
		// This code is automatically generated by Visual Cafe when you add
		// components to the visual environment. It instantiates and initializes
		// the components. To modify the code, only use code syntax that matches
		// what Visual Cafe can generate, or Visual Cafe may be unable to back
		// parse your Java file into its visual environment.
		//{{INIT_CONTROLS
		setLayout(null);
		setSize(370,320);
		add(resultArea);
		resultArea.setFont(new Font("MonoSpaced", Font.PLAIN, 12));
		resultArea.setBounds(12,180,348,131);
		label1.setText("Output:");
		add(label1);
		label1.setBounds(12,156,48,24);
		add(targetURLField);
		targetURLField.setBounds(12,36,348,24);
		label2.setText("Target File URL:");
		add(label2);
		label2.setBounds(12,12,96,24);
		label3.setText("Accurracy (%)");
		add(label3);
		label3.setBounds(12,72,84,24);
		accurracyChoice.addItem("96");
		accurracyChoice.addItem("92");
		accurracyChoice.addItem("90");
		accurracyChoice.addItem("85");
		accurracyChoice.addItem("80");
		accurracyChoice.addItem("75");
		accurracyChoice.addItem("66");
		accurracyChoice.addItem("50");
		add(accurracyChoice);
		accurracyChoice.setBounds(12,96,86,25);
		label4.setText("Support (%)");
		add(label4);
		label4.setBounds(156,72,108,24);
		supportChoice.addItem("2");
		supportChoice.addItem("4");
		supportChoice.addItem("8");
		supportChoice.addItem("12");
		supportChoice.addItem("16");
		supportChoice.addItem("25");
		supportChoice.addItem("32");
		supportChoice.addItem("64");
		add(supportChoice);
		supportChoice.setBounds(156,96,99,25);
		runButton.setLabel("button");
		runButton.setCursor(java.awt.Cursor.getPredefinedCursor(java.awt.Cursor.HAND_CURSOR));
		add(runButton);
		runButton.setBackground(java.awt.Color.lightGray);
		runButton.setBounds(240,132,110,30);
		//}}
	
		//{{REGISTER_LISTENERS
		SymAction lSymAction = new SymAction();
		runButton.addActionListener(lSymAction);
		//}}
	}
	
	//{{DECLARE_CONTROLS
	java.awt.TextArea resultArea = new java.awt.TextArea("",0,0,TextArea.SCROLLBARS_VERTICAL_ONLY);
	java.awt.Label label1 = new java.awt.Label();
	java.awt.TextField targetURLField = new java.awt.TextField();
	java.awt.Label label2 = new java.awt.Label();
	java.awt.Label label3 = new java.awt.Label();
	java.awt.Choice accurracyChoice = new java.awt.Choice();
	java.awt.Label label4 = new java.awt.Label();
	java.awt.Choice supportChoice = new java.awt.Choice();
	java.awt.Button runButton = new java.awt.Button();
	//}}

	class SymAction implements java.awt.event.ActionListener
	{
		public void actionPerformed(java.awt.event.ActionEvent event)
		{
			Object object = event.getSource();
			if (object == runButton)
				runButton_ActionPerformed(event);
		}
	}

	void runButton_ActionPerformed(java.awt.event.ActionEvent event)
	{
		// to do: code goes here.
		String str;
		double confidence, support;
		Vector strings = new Vector();
		BufferedReader reader = null;
		long t;
		//DataInputStream inStream = new DataInputStream(System.in);

		try {
			System.out.println("Opening file "+targetURLField.getText());
			reader = new BufferedReader(new InputStreamReader((new URL(targetURLField.getText()).openStream())));
		} catch(Exception e) {
			System.out.println("File does not found: "+ e.toString());
		}

	 	confidence = (double)Integer.parseInt(accurracyChoice.getSelectedItem()) / 100;
		support = (double)Integer.parseInt(supportChoice.getSelectedItem()) / 100;
		System.out.println("Input condidence = " + accurracyChoice.getSelectedItem() + " %");
		System.out.println("Input support = " + supportChoice.getSelectedItem() + " %"); 

		try {
			System.out.print("Reading strings");
			while ((str = reader.readLine()) != null) {
				strings.addElement(str);
				System.out.print(".");
			}
			System.out.println();
		} catch(IOException e) {
			System.out.println("Regarded Error: \n"+ e.toString());
		}
		t = System.currentTimeMillis();
		Mining m = new Mining(strings, confidence, support);
		System.out.println("Completed in "+(System.currentTimeMillis() - t)+ " msec.\n");	
	}
}

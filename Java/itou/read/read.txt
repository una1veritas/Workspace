１．表紙
	○○システムについて説明していきます。
２．背景と目的
	まず現状として、
	* 業務手続の規則法規は文章で書かれているものが多く、
	  これは見づらく、分かりにくいものが多い。
	* そこで規則を読んで理解するのではなく、
	　決定木を使い、目で見て理解するシステムの開発を行った。
３．システムの概要
	開発したシステムの全体的な流れを説明します。
　・構成
	* 規則である文章から、運用側が考えている注意点を抽出する。
	　それから具体的な事例を作成し、
	　事例から決定木を作成するQuinlanが開発したC4.5を
	　用いて決定木で作成します。
	* C4.5は具体事例しか扱えない為、特徴抽出から具体的な事例を
	　作るところまでを作成しました。
４．入力
	C4.5で決定木を作成する前の準備段階となる
	抽象事例と具体事例について説明します。
	* 授業での単位認定を例に話をしていきます。
	　C4.5では質問を属性、その答えを属性値、最終的結論をクラスをいいます。
	　このような定義の上で、具体事例と抽象事例を説明していくと、
	　具体は全属性値が定まっており、抽象は一部が任意となる事例。
	　どういうことかというと、
	　下記の例をみると、上を具体事例、下を抽象事例という。
	　具体事例は○○のように全属性値が既存の事例で、
	　一方、抽象事例は試験の属性値に関わらず、
	　課題が不提出ならば、クラスは不合格といった事例になります。
５．事例設定から展開
	次に入力部分の抽象事例の設定から
	それから作成される具体事例について説明します。
　・設定
	* 規則の抽出したい特徴として、以下の２つがある。
	　これを手順①に従い、図のように書く。
	　これで抽象事例の設定は終了です。
　・展開
	* 具体事例は抽象事例の＊の部分を展開することで作成されます。
	　図のような場合、試験の＊を展開します。
	　試験は60未満と60以上をもつので、２つの具体事例が作成します。
	　この場合は＊がひとつしかありませんが、複数ある場合は
	　この作業をすべての抽象事例の＊がなくなるまで繰り返します。
６．実験
	実際に授業料免除制度で申請できるか否かを
	判定する木を作成してみたいと思います。
	* 運用者の経験や知識から左の６つの注意点があるとします。
	* これを抽象事例として記述していきます。
	　まず申請可のポイントとして、
	　①新入生のときは理由が１年以内
	　②在学生のときは４回生以内ならば理由は半年以内
	　の２つがあります。
	　次に申請不可になる際のポイントとして
	　①理由、②回生、③休学　④留年
	　の４点に注意した抽象事例を与えます。
７．結果
	この６つの抽象事例を与えたとき、出力された決定木が図１です。
	* まず決定木の説明です。
	　理由で４つ、１年のときは新入生かで分別。
	　理由が半年のときは、休学するかで分け、何回生かで
	　分けるという木になりました。
	　このようにもとの規則を表す木が出力されました。
	* 構造は
	　[クリック]
	　抽象事例で気にした部分が木に現れています。
	　次に「理由、休学、回生」の属性間に論理積、つまり
	　ＡＮＤ関係があることが分かります。
	　（一見、無関係でありそうな属性に関係があることが分かる）
	　ただし、「留年」については、この抽象事例の場合、
	　Yes事例との関係がないため、選択されなかったと考えられる．
８．まとめ
	最後にまとめると、
　・考察
	* 実験から抽象事例で与えた特徴を反映させた規則を表す木を
	　作成することが出来ました。
	* また出力された木が属性間の関係を表すことで、
	　運用側のもつ目に見えなかった経験や知識を
	　図で表し、可視化できました。
	　（これは業務分析などにも活用できるのではないかと考える）
　・課題
	* 抽象事例を設定の際に注意点があります。
	　抽象事例から作られた具体事例を使いC4.5は決定木を作ります。
	　しかし決定木を作ろうとすると、具体事例に矛盾がある場合、
	　木を作ることなく、プログラムは停止してしまいます。
	　どこが矛盾か調べながら抽象事例を修正する必要があり、
	　とても手間がかかります。
	　なので、具体事例を作成した際に、矛盾がないかをチェックし
	　矛盾を解消する機能が必要であると考えます。
******** 以上で発表を終わります。*********


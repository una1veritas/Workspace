/*
 twi.h - TWI/I2C library for Wiring & Arduino modified the original
  twi.h/.c by Sin
 Copyright (c) 2006 Nicholas Zambetti.  All right reserved.

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library; if not, write to the Free Software
 Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
 */

#ifndef TwoWire_h
#define TwoWire_h

#include <Arduino.h>
#include <inttypes.h>

class TwoWire2 {
	// globals and constants.
	static const long TWI_FREQ = 100000L;
	static const int TWI_BUFFER_LENGTH = min(48, 64);

	enum TWT_STATE {
		TWI_READY = 0, TWI_MRX = 1, TWI_MTX = 2, TWI_SRX = 3, TWI_STX = 4,
	};

	static volatile uint8_t twi_state;
	static volatile uint8_t twi_slarw;
	static volatile uint8_t twi_sendStop;			// should the transaction end with a stop
	static volatile uint8_t twi_inRepStart;			// in the middle of a repeated start

public:

	void twi_init(void);
	void twi_setAddress(uint8_t);
	uint8_t twi_readFrom(uint8_t, uint8_t*, uint8_t, uint8_t);
	uint8_t twi_writeTo(uint8_t, uint8_t*, uint8_t, uint8_t, uint8_t);
	uint8_t twi_transmit(const uint8_t*, uint8_t);
	void twi_attachSlaveRxEvent(void (*)(uint8_t*, int));
	void twi_attachSlaveTxEvent(void (*)(void));
	void twi_reply(uint8_t);
	void twi_stop(void);
	void twi_releaseBus(void);

};

#endif


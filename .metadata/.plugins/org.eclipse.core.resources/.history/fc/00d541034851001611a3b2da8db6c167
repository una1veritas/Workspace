/*
 * Permutation.cpp
 *
 *  Created on: 2016/07/24
 *      Author: sin
 */

#include "Permutation.h"

	const bool next(void) {
		unsigned int boundary = size - 1;
		for ( ; boundary > 0 && perm[boundary-1] > perm[boundary]; --boundary) {}
		// std::cout << "boundary = " << boundary << ", " << *this << std::endl;
		//sort
		std::sort(perm.begin()+boundary, perm.end(), [](int a, int b) { return a < b; } );
		// std::cout << "sorted: " << *this << std::endl;
		// find the next for perm[top-1]
		unsigned int larger;
		for(larger = boundary; larger < size; ++larger) {
			if ( perm[boundary-1] < perm[larger] )
				break;
		}
		if ( !(larger < size) ) {
			//std::cerr << "next error!" << std::endl;
			return false;
		}
		unsigned int t = perm[boundary-1];
		perm[boundary-1] = perm[larger];
		perm[larger] = t;
		//std::cout << *this << std::endl;
		return true;
	}

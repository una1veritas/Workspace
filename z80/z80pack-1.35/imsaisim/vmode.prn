 pl/m-80 version v4.0                                   Thu Jun  1 19:45:10 2017
 00001  1   /*
 00002  1           CP/M UTILITY TO SET VIDEO MODES FOR IMSAI VIO BOARD
 00003  1
 00004  1           THIS PROGRAM WAS WRITTEN FOR THE INTEL PL/M-80 CROSS COMPILER
 00005  1
 00006  1           1.0 02/08/2017 UDO MUNK         FIRST RELEASED VERSION
 00007  1           1.1 02/10/2017 UDO MUNK         ADDED MORE FEATURES
 00008  1           1.2 06/01/2017 UDO MUNK         CHECK FIRMWARE SIGNATURE
 00009  1   */
 00010  1
 00011  1   0100H: /* ORIGIN OF THIS PROGRAM FOR CP/M */
 00012  1
 00013  1   DECLARE         /* ASCII CONSTANTS */
 00014  1       CR          LITERALLY '13',         /* CARRIAGE RETURN */
 00015  1       LF          LITERALLY '10',         /* LINEFEED */
 00016  1       ESC         LITERALLY '1BH',        /* ESCAPE */
 00017  1       CNTLZ       LITERALLY '1AH';        /* SUB */
 00018  1
 00019  1   DECLARE         /* BDOS FUNCTIONS */
 00020  1       BDOS$JUMP   LITERALLY '05H',        /* JUMP TO BDOS */
 00021  1       BDOS$EXIT   LITERALLY '0',          /* EXIT PROGRAM */
 00022  1       BDOS$PRINTS LITERALLY '9';          /* PRINT CONSOLE STRING */
 00023  1
 00024  1   DECLARE         /* DEFAULT FILE CONTROL BLOCK */
 00025  1       FCB$A       ADDRESS INITIAL(5CH),
 00026  1       FCB         BASED FCB$A (33) BYTE;
 00027  1
 00028  1   DECLARE         /* IMSAI VIO MEMORY MAPPED COMMAND WORD */
 00029  1       VIO$A       ADDRESS INITIAL(0F7FFH),
 00030  1       VIO$CMD     BASED VIO$A BYTE;
 00031  1
 00032  1   DECLARE         /* IMSAI VIO FIRMWARE SIGNATURE */
 00033  1       VSIG$A      ADDRESS INITIAL(0FFFDH),
 00034  1       VSIG        BASED VSIG$A BYTE;
 00035  1
 00036  1   DECLARE         /* IMSAI VIO FIRMWARE INITIALISATION */
 00037  1       VIO$INIT    LITERALLY '0F800H';
 00038  1
 00039  1   DECLARE         /* IMSAI VIO FIRMWARE TERMINAL SEQUENCES */
 00040  1       C$TOGGLE    DATA (ESC,'C',CNTLZ,'$'), /* TOGGLE 80/40 COLUMNS */
 00041  1       L$TOGGLE    DATA (ESC,'L',CNTLZ,'$'), /* TOGGLE 24/12 LINES */
 00042  1       I$TOGGLE    DATA (ESC,'V$'),          /* TOGGLE INVERSE/NORMAL VIDEO */
 00043  1       U$TOGGLE    DATA (ESC,'U$'),          /* TOGGLE UPPER/LOWER CASE */
 00044  1       CLS         DATA (CNTLZ,'$');         /* CLEAR SCREEN, HOME CURSOR */
 00045  1
 00046  1   /* CALL VIO FIRMWARE INITIALISATION ROUTINE */
 00047  1   VINIT: PROCEDURE;
 00048  2       GO TO VIO$INIT;
 00049  2   END VINIT;
 00050  1
 00051  1   /* CALL BDOS FUNCTIONS WITHOUT RETURN CODE */
 00052  1   BDOS1: PROCEDURE(FUNC,PARM);
 00053  2       DECLARE FUNC BYTE;
 00054  2       DECLARE PARM ADDRESS;
 00055  2       GO TO BDOS$JUMP;
 00056  2   END BDOS1;
 00057  1
 00058  1   /* PRINT A STRING TERMINATED WITH $ CHARACTER */
 00059  1   PRINTS: PROCEDURE(S);
 00060  2       DECLARE S ADDRESS;
 00061  2       CALL BDOS1(BDOS$PRINTS,S);
 00062  2   END PRINTS;
 00063  1
 00064  1   /* PRINT USAGE FOR THE PROGRAM */
 00065  1   USAGE: PROCEDURE;
 00066  2       CALL PRINTS(.(LF,'USAGE:',CR,LF,LF,'$'));
 00067  2       CALL PRINTS(.('  VMODE F(IRMWARE- CALL FIRMWARE INITIALISATION',CR,LF,'$'));
 00068  2       CALL PRINTS(.('  VMODE S(CREEN  - CLEAR SCREEN',CR,LF,'$'));
 00069  2       CALL PRINTS(.(LF,'SET HARDWARE:',CR,LF,'$'));
 00070  2       CALL PRINTS(.('  VMODE R(ESET   - RESET TO 80X24 TEXT MODE',CR,LF,'$'));
 00071  2       CALL PRINTS(.('  VMODE I(NVERSE - TURN ON INVERSE VIDEO',CR,LF,'$'));
 00072  2       CALL PRINTS(.('  VMODE N(ORMAL  - TURN OFF INVERSE VIDEO',CR,LF,'$'));
 00073  2       CALL PRINTS(.(LF,'SET TERMINAL MODE:',CR,LF,'$'));
 00074  2       CALL PRINTS(.('  VMODE U(PPER   - TOGGLE UPPER/LOWER CASE',CR,LF,'$'));
 00075  2       CALL PRINTS(.('  VMODE V(IDEO   - TOGGLE INVERSE VIDEO',CR,LF,'$'));
 00076  2       CALL PRINTS(.('  VMODE C(OLUMNS - TOGGLE 80/40 COLUMNS/LINE',CR,LF,'$'));
 00077  2       CALL PRINTS(.('  VMODE L(INES   - TOGGLE 24/12 LINES',CR,LF,'$'));
 00078  2   END USAGE;
 00079  1
 00080  1   /* FIRST CHECK VIO FIRMWARE SIGNATURE, DO NOTHING IF NOT THERE */
 00081  1   IF (VSIG(0) <> 'V') OR (VSIG(1) <> 'I') OR (VSIG(2) <> '0') THEN DO;
 00082  1       CALL PRINTS(.('NO VIO FOUND',CR,LF,'$'));
 00083  2       GO TO DONE;
 00084  2   END;
 00085  1
 00086  1   IF FCB(1) = 'F' THEN                    /* CALL FIRMWARE INITIALISATION */
 00087  1       CALL VINIT;
 00088  1   ELSE IF FCB(1) = 'S' THEN               /* CLEAR SCREEN */
 00089  1       CALL PRINTS(.CLS);
 00090  1   ELSE IF FCB(1) = 'R' THEN               /* RESET VIDEO MODE */
 00091  1       VIO$CMD = 8;
 00092  1   ELSE IF FCB(1) = 'I' THEN               /* INVERSE VIDEO */
 00093  1       VIO$CMD = VIO$CMD OR 16;
 00094  1   ELSE IF FCB(1) = 'N' THEN               /* NORMAL VIDEO */
 00095  1       VIO$CMD = VIO$CMD AND 15;
 00096  1   ELSE IF FCB(1) = 'U' THEN               /* UPPER/LOWER CASE */
 00097  1       CALL PRINTS(.U$TOGGLE);
 00098  1   ELSE IF FCB(1) = 'V' THEN               /* INVERSE/NORMAL VIDEO */
 00099  1       CALL PRINTS(.I$TOGGLE);
 00100  1   ELSE IF FCB(1) = 'C' THEN               /* 80/40 COLUMNS */
 00101  1       CALL PRINTS(.C$TOGGLE);
 00102  1   ELSE IF FCB(1) = 'L' THEN               /* 24/12 LINES */
 00103  1       CALL PRINTS(.L$TOGGLE);
 00104  1   ELSE                                    /* CRY AND DIE */
 00105  1       CALL USAGE;
 00106  1
 00107  1   DONE:
 00108  1   CALL BDOS1(BDOS$EXIT,0);                /* TERMINATE PROGRAM */
 00109  1
 00110  1   EOF
 NO PROGRAM ERRORS
  
 table use by pass 1:

 SYMBOL TABLE - MAX=  5994 TOP=   638 LOC=     5 LEN=     1 CNT=   126 ABS=  6000
 MACRO  TABLE - MAX=  3000 TOP=    91 CUR=  3001

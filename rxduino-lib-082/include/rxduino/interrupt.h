/*******************************************************************************
* RXduinoライブラリ & 特電HAL
* 
* このソフトウェアは特殊電子回路株式会社によって開発されたものであり、当社製品の
* サポートとして提供されます。このライブラリは当社製品および当社がライセンスした
* 製品に対して使用することができます。
* このソフトウェアはあるがままの状態で提供され、内容および動作についての保障はあ
* りません。弊社はファイルの内容および実行結果についていかなる責任も負いません。
* お客様は、お客様の製品開発のために当ソフトウェアのソースコードを自由に参照し、
* 引用していただくことができます。
* このファイルを単体で第三者へ開示・再配布・貸与・譲渡することはできません。
* コンパイル・リンク後のオブジェクトファイル(ELF ファイルまたはMOT,SRECファイル)
* であって、デバッグ情報が削除されている場合は第三者に再配布することができます。
* (C) Copyright 2011-2012 TokushuDenshiKairo Inc. 特殊電子回路株式会社
* http://rx.tokudenkairo.co.jp/
*******************************************************************************/

#ifndef	__H_RXDUINO_INTERRUPT
#define	__H_RXDUINO_INTERRUPT
/**************************************************************************//**
 * @file    interrupt.h
 * @brief   Renesas RX62N/63N Arduino Library produced by Tokushu Denshi Kairo Inc.
 * @version	V0.50
 * @date	1. August 2011.
 * @author	Tokushu Denshi Kairo Inc.
 * @note	Copyright &copy; 2011 - 2012 Tokushu Denshi Kairo Inc. All rights reserved.
 ******************************************************************************/
#include "rxduino.h"
#include "../tkdnhal/tkdn_interrupt.h"

#ifdef __cplusplus
	extern "C" {
#endif

// 割り込み許可
/*********************************************************************//**
 * @brief		noInterrupts関数によって停止した割り込みを有効にする.
 * 				割り込みはデフォルトで有効とされ,バックグラウンドで重要なタスクを処理します.
 * 				いくつかの機能は割り込みが無効の間は動作しません.たとえば,シリアル通信の受信データが無視されます.
 * 				割り込みはコードのタイミングを若干乱すので,クリティカルなセクションでは無効にしたほうがいいかもしれません.
 * @param[in]	なし
 *
 * @return		なし
 **********************************************************************/
RXDUINO_API
void interrupts(void);

/*********************************************************************//**
 * @brief		割り込みを無効にする.interrupts関数でまた有効にできます.
 * @param[in]	なし
 *
 * @return		なし
 **********************************************************************/
RXDUINO_API
void noInterrupts();

// 割り込みの割り当て
// 引数interrupt
// interrupt 0 ポートP10 (IRQ0) ※TQFP100ピンにはない
//           1 ポートP11 (IRQ1) ※TQFP100ピンにはない
//           2 ポートP12 (IRQ2)
//           3 ポートP13 (IRQ3)
//           4 ポートP14 (IRQ4)
//           5 ポートP15 (IRQ5)
//           6 ポートP16 (IRQ6)
//           7 ポートP17 (IRQ7)
/*********************************************************************//**
 * @brief		外部割り込みが発生したときに実行する関数を指定する.
 * 				RXduinoは割り込み0(P10)と割り込み1(P11),割り込み2(P12),
 * 				割り込み3(P13),割り込み4(P14),割り込み5(P15),割り込み6(P16),割り込み7(P17)
 * 				が使用可能です.呼び出せる関数は引数と戻り値が不要なものだけです.
 *
 * @param[in]	interrupt 割り込み番号(0 - 7)
 * @param[in]	func 割り込み発生時に呼び出す関数
 * @param[in]	mode 割り込みを発生させるトリガ
 * 				- INTTRIG_LOW : ピンがLOWのとき発生
 * 				- INTTRIG_CHANGE : ピンの状態が変化したときに発生
 * 				- INTTRIG_RISING : ピンの状態がLOWからHIGHに変わったときに発生
 * 				- INTTRIG_FALLING : ピンの状態がHIGHからLOWに変わったときに発生
 *
 * @return		なし
 **********************************************************************/
RXDUINO_API
void attachInterrupt(unsigned char interrupt, void (*func)(void), InterruptTrigger mode);

/*********************************************************************//**
 * @brief		指定した割り込みを停止する.
 * @param[in]	interrupt 割り込み番号(0 - 7)
 *
 * @return		なし
 **********************************************************************/
RXDUINO_API
void detachInterrupt(unsigned char interrupt);

#ifdef __cplusplus
	}
#endif

#endif // __H_RXDUINO_INTERRUPT


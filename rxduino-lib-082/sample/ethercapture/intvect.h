/***********************************************************************/
/*                                                                     */
/*  FILE        :vect.h                                                */
/*  DATE        :Wed, May 8, 2011                                     */
/*  DESCRIPTION :Definition of Vector                                  */
/*  CPU TYPE    :RX62N                                                 */
/*                                                                     */
/*  This file is generated by Renesas Project Generator (Ver.4.51).    */
/*  NOTE:THIS IS A TYPICAL EXAMPLE.                                    */
/*                                                                     */
/***********************************************************************/
/************************************************************************
*
* Device     : RX/RX600/RX62N
*
* File Name  : vect.h
*
* Abstract   : Definition of Vector.
*
* History    : 1.00  (2010-03-05)  [Hardware Manual Revision : 0.50]
*            : 1.01  (2010-03-15)  [Hardware Manual Revision : 0.50]
*            : 1.01a (2011-05-08)  modified for GCC
*
* NOTE       : THIS IS A TYPICAL EXAMPLE.
*
* Copyright (C) 2010 Renesas Electronics Corporation.
* and Renesas Solutions Corporation. All rights reserved.
* Copyright (C) 2011 Tokushu Denshi Kairo Inc.
*
************************************************************************/

#ifdef __cplusplus
extern "C" {
#endif

#define __INTTERUPT_FUNC __attribute__ ((interrupt))

// Exception(Supervisor Instruction)
void Excep_SuperVisorInst(void) __INTTERUPT_FUNC ;

// Exception(Undefined Instruction)
void Excep_UndefinedInst(void) __INTTERUPT_FUNC ;

// Exception(Floating Point)
void Excep_FloatingPoint(void) __INTTERUPT_FUNC ;

// NMI
void NonMaskableInterrupt(void) __INTTERUPT_FUNC ;

// Dummy
void Dummy(void) __INTTERUPT_FUNC ;

// BRK
void Excep_BRK(void) __INTTERUPT_FUNC ;

// vector  1 reserved
// vector  2 reserved
// vector  3 reserved
// vector  4 reserved
// vector  5 reserved
// vector  6 reserved
// vector  7 reserved
// vector  8 reserved
// vector  9 reserved
// vector 10 reserved
// vector 11 reserved
// vector 12 reserved
// vector 13 reserved
// vector 14 reserved
// vector 15 reserved

// BUSERR
void Excep_BUSERR(void) __INTTERUPT_FUNC ;

// vector 17 reserved
// vector 18 reserved
// vector 19 reserved
// vector 20 reserved

// FCU_FCUERR
void Excep_FCU_FCUERR(void) __INTTERUPT_FUNC ;

// vector 22 reserved

// FCU_FRDYI
void Excep_FCU_FRDYI(void) __INTTERUPT_FUNC ;

// vector 24 reserved
// vector 25 reserved
// vector 26 reserved

// ICU SWINT
void Excep_ICU_SWINT(void) __INTTERUPT_FUNC ;

// CMTU0_CMT0
void Excep_CMTU0_CMT0(void) __INTTERUPT_FUNC ;

// CMTU0_CMT1
void Excep_CMTU0_CMT1(void) __INTTERUPT_FUNC ;

// CMTU1_CMT2
void Excep_CMTU1_CMT2(void) __INTTERUPT_FUNC ;

// CMTU1_CMT3
void Excep_CMTU1_CMT3(void) __INTTERUPT_FUNC ;

// ETHER EINT
void Excep_ETHER_EINT(void) __INTTERUPT_FUNC ;

// vector 33 reserved
// vector 34 reserved
// vector 35 reserved

// USB0 D0FIFO0
void Excep_USB0_D0FIFO0(void) __INTTERUPT_FUNC ;

// USB0 D1FIFO0
void Excep_USB0_D1FIFO0(void) __INTTERUPT_FUNC ;

// USB0 USBI0
void Excep_USB0_USBI0(void) __INTTERUPT_FUNC ;

// vector 39 reserved

// USB1 D0FIFO1
void Excep_USB1_D0FIFO1(void) __INTTERUPT_FUNC ;

// USB1 D1FIFO1
void Excep_USB1_D1FIFO1(void) __INTTERUPT_FUNC ;

// USB1 USBI1
void Excep_USB1_USBI1(void) __INTTERUPT_FUNC ;

// vector 43 reserved

// RSPI0 SPEI0
void Excep_RSPI0_SPEI0(void) __INTTERUPT_FUNC ;

// RSPI0 SPRI0
void Excep_RSPI0_SPRI0(void) __INTTERUPT_FUNC ;

// RSPI0 SPTI0
void Excep_RSPI0_SPTI0(void) __INTTERUPT_FUNC ;

// RSPI0 SPII0
void Excep_RSPI0_SPII0(void) __INTTERUPT_FUNC ;

// RSPI1 SPEI1
void Excep_RSPI1_SPEI1(void) __INTTERUPT_FUNC ;

// RSPI1 SPRI1
void Excep_RSPI1_SPRI1(void) __INTTERUPT_FUNC ;

// RSPI1 SPTI1
void Excep_RSPI1_SPTI1(void) __INTTERUPT_FUNC ;

// RSPI1 SPII1
void Excep_RSPI1_SPII1(void) __INTTERUPT_FUNC ;

// vector 52 reserved
// vector 53 reserved
// vector 54 reserved
// vector 55 reserved

// CAN0 ERS0
void Excep_CAN0_ERS0(void) __INTTERUPT_FUNC ;

// CAN0 RXF0
void Excep_CAN0_RXF0(void) __INTTERUPT_FUNC ;

// CAN0 TXF0
void Excep_CAN0_TXF0(void) __INTTERUPT_FUNC ;

// CAN0 RXM0
void Excep_CAN0_RXM0(void) __INTTERUPT_FUNC ;

// CAN0 TXM0
void Excep_CAN0_TXM0(void) __INTTERUPT_FUNC ;

// vector 61 reserved

// RTC PRD
void Excep_RTC_PRD(void) __INTTERUPT_FUNC ;

// RTC CUP
void Excep_RTC_CUP(void) __INTTERUPT_FUNC ;

// IRQ0
void Excep_IRQ0(void) __INTTERUPT_FUNC ;

// IRQ1
void Excep_IRQ1(void) __INTTERUPT_FUNC ;

// IRQ2
void Excep_IRQ2(void) __INTTERUPT_FUNC ;

// IRQ3
void Excep_IRQ3(void) __INTTERUPT_FUNC ;

// IRQ4
void Excep_IRQ4(void) __INTTERUPT_FUNC ;

// IRQ5
void Excep_IRQ5(void) __INTTERUPT_FUNC ;

// IRQ6
void Excep_IRQ6(void) __INTTERUPT_FUNC ;

// IRQ7
void Excep_IRQ7(void) __INTTERUPT_FUNC ;

// IRQ8
void Excep_IRQ8(void) __INTTERUPT_FUNC ;

// IRQ9
void Excep_IRQ9(void) __INTTERUPT_FUNC ;

// IRQ10
void Excep_IRQ10(void) __INTTERUPT_FUNC ;

// IRQ11
void Excep_IRQ11(void) __INTTERUPT_FUNC ;

// IRQ12
void Excep_IRQ12(void) __INTTERUPT_FUNC ;

// IRQ13
void Excep_IRQ13(void) __INTTERUPT_FUNC ;

// IRQ14
void Excep_IRQ14(void) __INTTERUPT_FUNC ;

// IRQ15
void Excep_IRQ15(void) __INTTERUPT_FUNC ;

// vector 80 reserved
// vector 81 reserved
// vector 82 reserved
// vector 83 reserved
// vector 84 reserved
// vector 85 reserved
// vector 86 reserved
// vector 87 reserved
// vector 88 reserved
// vector 89 reserved

// USB RESUME USBR0
void Excep_USB_USBR0(void) __INTTERUPT_FUNC ;

// USB RESUME USBR1
void Excep_USB_USBR1(void) __INTTERUPT_FUNC ;

// RTC ALM
void Excep_RTC_ALM(void) __INTTERUPT_FUNC ;

// vector 93 reserved
// vector 94 reserved
// vector 95 reserved

// WDT_WOVI
void Excep_WDT_WOVI(void) __INTTERUPT_FUNC ;

// vector 97 reserved

// AD0_ADI0
void Excep_AD0_ADI0(void) __INTTERUPT_FUNC ;

// AD1_ADI1
void Excep_AD1_ADI1(void) __INTTERUPT_FUNC ;

// vector 100 reserved
// vector 101 reserved

// S12AD ADI12
void Excep_S12AD_ADI12(void) __INTTERUPT_FUNC ;

// vector 103 reserved
// vector 104 reserved
// vector 105 reserved
// vector 106 reserved
// vector 107 reserved
// vector 108 reserved
// vector 109 reserved
// vector 110 reserved
// vector 111 reserved
// vector 112 reserved
// vector 113 reserved

// MTU0 TGIA0
void Excep_MTU0_TGIA0(void) __INTTERUPT_FUNC ;

// MTU0 TGIB0
void Excep_MTU0_TGIB0(void) __INTTERUPT_FUNC ;

// MTU0 TGIC0
void Excep_MTU0_TGIC0(void) __INTTERUPT_FUNC ;

// MTU0 TGID0
void Excep_MTU0_TGID0(void) __INTTERUPT_FUNC ;

// MTU0 TCIV0
void Excep_MTU0_TCIV0(void) __INTTERUPT_FUNC ;

// MTU0 TGIE0
void Excep_MTU0_TGIE0(void) __INTTERUPT_FUNC ;

// MTU0 TGIF0
void Excep_MTU0_TGIF0(void) __INTTERUPT_FUNC ;

// MTU1 TGIA1
void Excep_MTU1_TGIA1(void) __INTTERUPT_FUNC ;

// MTU1 TGIB1
void Excep_MTU1_TGIB1(void) __INTTERUPT_FUNC ;

// MTU1 TCIV1
void Excep_MTU1_TCIV1(void) __INTTERUPT_FUNC ;

// MTU1 TCIU1
void Excep_MTU1_TCIU1(void) __INTTERUPT_FUNC ;

// MTU2 TGIA2
void Excep_MTU2_TGIA2(void) __INTTERUPT_FUNC ;

// MTU2 TGIB2
void Excep_MTU2_TGIB2(void) __INTTERUPT_FUNC ;

// MTU2 TCIV2
void Excep_MTU2_TCIV2(void) __INTTERUPT_FUNC ;

// MTU2 TCIU2
void Excep_MTU2_TCIU2(void) __INTTERUPT_FUNC ;

// MTU3 TGIA3
void Excep_MTU3_TGIA3(void) __INTTERUPT_FUNC ;

// MTU3 TGIB3
void Excep_MTU3_TGIB3(void) __INTTERUPT_FUNC ;

// MTU3 TGIC3
void Excep_MTU3_TGIC3(void) __INTTERUPT_FUNC ;

// MTU3 TGID3
void Excep_MTU3_TGID3(void) __INTTERUPT_FUNC ;

// MTU3 TCIV3
void Excep_MTU3_TCIV3(void) __INTTERUPT_FUNC ;


// MTU4 TGIA4
void Excep_MTU4_TGIA4(void) __INTTERUPT_FUNC ;

// MTU4 TGIB4
void Excep_MTU4_TGIB4(void) __INTTERUPT_FUNC ;

// MTU4 TGIC4
void Excep_MTU4_TGIC4(void) __INTTERUPT_FUNC ;

// MTU4 TGID4
void Excep_MTU4_TGID4(void) __INTTERUPT_FUNC ;

// MTU4 TCIV4
void Excep_MTU4_TCIV4(void) __INTTERUPT_FUNC ;

// MTU5 TCIU5
void Excep_MTU5_TCIU5(void) __INTTERUPT_FUNC ;

// MTU5 TCIV5
void Excep_MTU5_TCIV5(void) __INTTERUPT_FUNC ;

// MTU5 TCIW5
void Excep_MTU5_TCIW5(void) __INTTERUPT_FUNC ;

// MTU6 TGIA6
void Excep_MTU6_TGIA6(void) __INTTERUPT_FUNC ;

// MTU6 TGIB6
void Excep_MTU6_TGIB6(void) __INTTERUPT_FUNC ;

// MTU6 TGIC6
void Excep_MTU6_TGIC6(void) __INTTERUPT_FUNC ;

// MTU6 TGID6
void Excep_MTU6_TGID6(void) __INTTERUPT_FUNC ;

// MTU6 TCIV6
void Excep_MTU6_TCIV6(void) __INTTERUPT_FUNC ;

// MTU6 TGIE6
void Excep_MTU6_TGIE6(void) __INTTERUPT_FUNC ;

// MTU6 TGIF6
void Excep_MTU6_TGIF6(void) __INTTERUPT_FUNC ;

// MTU7 TGIA7
void Excep_MTU7_TGIA7(void) __INTTERUPT_FUNC ;

// MTU7 TGIB7
void Excep_MTU7_TGIB7(void) __INTTERUPT_FUNC ;

// MTU7 TCIV7
void Excep_MTU7_TCIV7(void) __INTTERUPT_FUNC ;

// MTU7 TCIU7
void Excep_MTU7_TCIU7(void) __INTTERUPT_FUNC ;

// MTU8 TGIA8
void Excep_MTU8_TGIA8(void) __INTTERUPT_FUNC ;

// MTU8 TGIB8
void Excep_MTU8_TGIB8(void) __INTTERUPT_FUNC ;

// MTU8 TCIV8
void Excep_MTU8_TCIV8(void) __INTTERUPT_FUNC ;

// MTU8 TCIU8
void Excep_MTU8_TCIU8(void) __INTTERUPT_FUNC ;

// MTU9 TGIA9
void Excep_MTU9_TGIA9(void) __INTTERUPT_FUNC ;

// MTU9 TGIB9
void Excep_MTU9_TGIB9(void) __INTTERUPT_FUNC ;

// MTU9 TGIC9
void Excep_MTU9_TGIC9(void) __INTTERUPT_FUNC ;

// MTU9 TGID9
void Excep_MTU9_TGID9(void) __INTTERUPT_FUNC ;

// MTU9 TCIV9
void Excep_MTU9_TCIV9(void) __INTTERUPT_FUNC ;

// MTU10 TGIA10
void Excep_MTU10_TGIA10(void) __INTTERUPT_FUNC ;

// MTU10 TGIB10
void Excep_MTU10_TGIB10(void) __INTTERUPT_FUNC ;

// MTU10 TGIC10
void Excep_MTU10_TGIC10(void) __INTTERUPT_FUNC ;

// MTU10 TGID10
void Excep_MTU10_TGID10(void) __INTTERUPT_FUNC ;

// MTU10 TCIV10
void Excep_MTU10_TCIV10(void) __INTTERUPT_FUNC ;

// MTU11 TCIU11
void Excep_MTU11_TCIU11(void) __INTTERUPT_FUNC ;

// MTU11 TCIV11
void Excep_MTU11_TCIV11(void) __INTTERUPT_FUNC ;

// MTU11 TCIW11
void Excep_MTU11_TCIW11(void) __INTTERUPT_FUNC ;

// POE OEI1
void Excep_POE_OEI1(void) __INTTERUPT_FUNC ;

// POE OEI1
void Excep_POE_OEI2(void) __INTTERUPT_FUNC ;

// POE OEI1
void Excep_POE_OEI3(void) __INTTERUPT_FUNC ;

// POE OEI1
void Excep_POE_OEI4(void) __INTTERUPT_FUNC ;

// TMR0_CMI0A
void Excep_TMR0_CMI0A(void) __INTTERUPT_FUNC ;

// TMR0_CMI0B
void Excep_TMR0_CMI0B(void) __INTTERUPT_FUNC ;

// TMR0_OV0I
void Excep_TMR0_OV0I(void) __INTTERUPT_FUNC ;

// TMR1_CMI1A
void Excep_TMR1_CMI1A(void) __INTTERUPT_FUNC ;

// TMR1_CMI1B
void Excep_TMR1_CMI1B(void) __INTTERUPT_FUNC ;

// TMR1_OV1I
void Excep_TMR1_OV1I(void) __INTTERUPT_FUNC ;

// TMR2_CMI2A
void Excep_TMR2_CMI2A(void) __INTTERUPT_FUNC ;

// TMR2_CMI2B
void Excep_TMR2_CMI2B(void) __INTTERUPT_FUNC ;

// TMR2_OV2I
void Excep_TMR2_OV2I(void) __INTTERUPT_FUNC ;

// TMR3_CMI3A
void Excep_TMR3_CMI3A(void) __INTTERUPT_FUNC ;

// TMR3_CMI3B
void Excep_TMR3_CMI3B(void) __INTTERUPT_FUNC ;

// TMR3_OV3I
void Excep_TMR3_OV3I(void) __INTTERUPT_FUNC ;

// vector 186 reserved
// vector 187 reserved
// vector 188 reserved
// vector 189 reserved
// vector 190 reserved
// vector 191 reserved
// vector 192 reserved
// vector 193 reserved
// vector 194 reserved
// vector 195 reserved
// vector 196 reserved
// vector 197 reserved

// DMACA DMAC0
void Excep_DMACA_DMAC0(void) __INTTERUPT_FUNC ;

// DMAC DMAC1
void Excep_DMACA_DMAC1(void) __INTTERUPT_FUNC ;

// DMAC DMAC2
void Excep_DMACA_DMAC2(void) __INTTERUPT_FUNC ;

// DMAC DMAC3
void Excep_DMACA_DMAC3(void) __INTTERUPT_FUNC ;

// EXDMAC DMAC0
void Excep_EXDMAC_DMAC0(void) __INTTERUPT_FUNC ;

// EXDMAC DMAC1
void Excep_EXDMAC_DMAC1(void) __INTTERUPT_FUNC ;

// vector 203 reserved
// vector 204 reserved
// vector 205 reserved
// vector 206 reserved
// vector 207 reserved
// vector 208 reserved
// vector 209 reserved
// vector 210 reserved
// vector 211 reserved
// vector 212 reserved
// vector 213 reserved

// SCI0_ERI0
void Excep_SCI0_ERI0(void) __INTTERUPT_FUNC ;

// SCI0_RXI0
void Excep_SCI0_RXI0(void) __INTTERUPT_FUNC ;

// SCI0_TXI0
void Excep_SCI0_TXI0(void) __INTTERUPT_FUNC ;

// SCI0_TEI0
void Excep_SCI0_TEI0(void) __INTTERUPT_FUNC ;

// SCI1_ERI1
void Excep_SCI1_ERI1(void) __INTTERUPT_FUNC ;

// SCI1_RXI1
void Excep_SCI1_RXI1(void) __INTTERUPT_FUNC ;

// SCI1_TXI1
void Excep_SCI1_TXI1(void) __INTTERUPT_FUNC ;

// SCI1_TEI1
void Excep_SCI1_TEI1(void) __INTTERUPT_FUNC ;

// SCI2_ERI2
void Excep_SCI2_ERI2(void) __INTTERUPT_FUNC ;

// SCI2_RXI2
void Excep_SCI2_RXI2(void) __INTTERUPT_FUNC ;

// SCI2_TXI2
void Excep_SCI2_TXI2(void) __INTTERUPT_FUNC ;

// SCI2_TEI2
void Excep_SCI2_TEI2(void) __INTTERUPT_FUNC ;

// SCI3_ERI3
void Excep_SCI3_ERI3(void) __INTTERUPT_FUNC ;

// SCI3_RXI3
void Excep_SCI3_RXI3(void) __INTTERUPT_FUNC ;

// SCI3_TXI3
void Excep_SCI3_TXI3(void) __INTTERUPT_FUNC ;

// SCI3_TEI3
void Excep_SCI3_TEI3(void) __INTTERUPT_FUNC ;

// vector 230 reserved
// vector 231 reserved
// vector 232 reserved
// vector 233 reserved

// SCI5_ERI5
void Excep_SCI5_ERI5(void) __INTTERUPT_FUNC ;

// SCI5_RXI5
void Excep_SCI5_RXI5(void) __INTTERUPT_FUNC ;

// SCI5_TXI5
void Excep_SCI5_TXI5(void) __INTTERUPT_FUNC ;

// SCI5_TEI5
void Excep_SCI5_TEI5(void) __INTTERUPT_FUNC ;

// SCI6_ERI6
void Excep_SCI6_ERI6(void) __INTTERUPT_FUNC ;

// SCI6_RXI6
void Excep_SCI6_RXI6(void) __INTTERUPT_FUNC ;

// SCI6_TXI6
void Excep_SCI6_TXI6(void) __INTTERUPT_FUNC ;

// SCI6_TEI6
void Excep_SCI6_TEI6(void) __INTTERUPT_FUNC ;

// vector 242 reserved
// vector 243 reserved
// vector 244 reserved
// vector 245 reserved

// RIIC0_EEI0
void Excep_RIIC0_EEI0(void) __INTTERUPT_FUNC ;

// RIIC0_RXI0
void Excep_RIIC0_RXI0(void) __INTTERUPT_FUNC ;

// RIIC0_TXI0
void Excep_RIIC0_TXI0(void) __INTTERUPT_FUNC ;

// RIIC0_TEI0
void Excep_RIIC0_TEI0(void) __INTTERUPT_FUNC ;

// RIIC1_EEI1
void Excep_RIIC1_EEI1(void) __INTTERUPT_FUNC ;

// RIIC1_RXI1
void Excep_RIIC1_RXI1(void) __INTTERUPT_FUNC ;

// RIIC1_TXI1
void Excep_RIIC1_TXI1(void) __INTTERUPT_FUNC ;

// RIIC1_TEI1
void Excep_RIIC1_TEI1(void) __INTTERUPT_FUNC ;

// vector 254 reserved
// vector 255 reserved

//;<<VECTOR DATA START (POWER ON RESET)>>
//;Power On Reset PC
extern void PowerON_Reset_PC(void) __INTTERUPT_FUNC ;                                                                                                                
//;<<VECTOR DATA END (POWER ON RESET)>>

#ifdef __cplusplus
}
#endif

/***********************************************************************/
/*                                                                     */
/*  FILE        :vect.h                                                */
/*  DATE        :Wed, May 8, 2011                                     */
/*  DESCRIPTION :Definition of Vector                                  */
/*  CPU TYPE    :RX62N                                                 */
/*                                                                     */
/*  This file is generated by Renesas Project Generator (Ver.4.51).    */
/*  NOTE:THIS IS A TYPICAL EXAMPLE.                                    */
/*                                                                     */
/***********************************************************************/
/************************************************************************
*
* Device     : RX/RX600/RX62N
*
* File Name  : vect.h
*
* Abstract   : Definition of Vector.
*
* History    : 1.00  (2010-03-05)  [Hardware Manual Revision : 0.50]
*            : 1.01  (2010-03-15)  [Hardware Manual Revision : 0.50]
*            : 1.01a (2011-05-08)  modified for GCC
*
* NOTE       : THIS IS A TYPICAL EXAMPLE.
*
* Copyright (C) 2010 Renesas Electronics Corporation.
* and Renesas Solutions Corporation. All rights reserved.
* Copyright (C) 2011 Tokushu Denshi Kairo Inc.
*
************************************************************************/

#define __INTTERUPT_FUNC __attribute__ ((interrupt))

#ifdef __cplusplus
extern "C" {
#endif

typedef void (*FUNC_INTERRPUT_HANDLER) (void);

extern FUNC_INTERRPUT_HANDLER USBI0_handler;
extern FUNC_INTERRPUT_HANDLER USBI1_handler;

// Exception(Supervisor Instruction)
void Excep_SuperVisorInst(void) __INTTERUPT_FUNC ;

// Exception(Undefined Instruction)
void Excep_UndefinedInst(void) __INTTERUPT_FUNC ;

// Exception(Floating Point)
void Excep_FloatingPoint(void) __INTTERUPT_FUNC ;

// NMI
void NonMaskableInterrupt(void) __INTTERUPT_FUNC ;

// Dummy
void Dummy(void) __INTTERUPT_FUNC ;

// BRK
void Excep_BRK(void) __INTTERUPT_FUNC ;

// vector  1 reserved
// vector  2 reserved
// vector  3 reserved
// vector  4 reserved
// vector  5 reserved
// vector  6 reserved
// vector  7 reserved
// vector  8 reserved
// vector  9 reserved
// vector 10 reserved
// vector 11 reserved
// vector 12 reserved
// vector 13 reserved
// vector 14 reserved
// vector 15 reserved

// BUSERR
void Excep_BUSERR(void) __INTTERUPT_FUNC ;

// vector 17 reserved
// vector 18 reserved
// vector 19 reserved
// vector 20 reserved

// FCU_FCUERR
void Excep_FCUIF_FIFEERR(void) __INTTERUPT_FUNC ;

// vector 22 reserved

// FCU_FRDYI
void Excep_FCUIF_FRDYI(void) __INTTERUPT_FUNC ;

// vector 24 reserved
// vector 25 reserved
// vector 26 reserved

// ICU SWINT
void Excep_ICU_SWINT(void) __INTTERUPT_FUNC ;

// CMTU0_CMT0
void Excep_CMT0_CMI0(void) __INTTERUPT_FUNC ;

// CMTU1_CMT1
void Excep_CMT1_CMI1(void) __INTTERUPT_FUNC ;

// CMTU2_CMT2
void Excep_CMT2_CMI2(void) __INTTERUPT_FUNC ;

// CMTU3_CMT3
void Excep_CMT3_CMI3(void) __INTTERUPT_FUNC ;

// ETHER EINT
void Excep_ETHER_EINT(void) __INTTERUPT_FUNC ;

// USB0 D0FIFO0
void Excep_USB0_D0FIFO0(void) __INTTERUPT_FUNC ;

// USB0 D1FIFO0
void Excep_USB0_D1FIFO0(void) __INTTERUPT_FUNC ;

// USB0 USBI0
void Excep_USB0_USBI0(void) __INTTERUPT_FUNC;

// USB1 D0FIFO1
void Excep_USB1_D0FIFO1(void) __INTTERUPT_FUNC ;

// USB1 D1FIFO1
void Excep_USB1_D1FIFO1(void) __INTTERUPT_FUNC ;

// USB1 USBI1
void Excep_USB1_USBI1(void) __INTTERUPT_FUNC ;

// RSPI0 SPRI0
void Excep_RSPI0_SPRI0(void) __INTTERUPT_FUNC ;

// RSPI0 SPTI0
void Excep_RSPI0_SPTI0(void) __INTTERUPT_FUNC ;

// RSPI0 SPII0
void Excep_RSPI0_SPII0(void) __INTTERUPT_FUNC ;

// RSPI1 SPRI1
void Excep_RSPI1_SPRI1(void) __INTTERUPT_FUNC ;

// RSPI1 SPTI1
void Excep_RSPI1_SPTI1(void) __INTTERUPT_FUNC ;

// RSPI1 SPII1
void Excep_RSPI1_SPII1(void) __INTTERUPT_FUNC ;

// RSPI2 SPRI2
void Excep_RSPI2_SPRI2(void) __INTTERUPT_FUNC ;

// RSPI2 SPTI2
void Excep_RSPI2_SPTI2(void) __INTTERUPT_FUNC ;

// RSPI2 SPII2
void Excep_RSPI2_SPII2(void) __INTTERUPT_FUNC ;

// CAN0 RXF0
void Excep_CAN0_RXF0(void) __INTTERUPT_FUNC ;

// CAN0 TXF0
void Excep_CAN0_TXF0(void) __INTTERUPT_FUNC ;

// CAN0 RXM0
void Excep_CAN0_RXM0(void) __INTTERUPT_FUNC ;

// CAN0 TXM0
void Excep_CAN0_TXM0(void) __INTTERUPT_FUNC ;

// CAN1 RXF1
void Excep_CAN1_RXF1(void) __INTTERUPT_FUNC ;

// CAN1 TXF1
void Excep_CAN1_TXF1(void) __INTTERUPT_FUNC ;

// CAN1 RXM1
void Excep_CAN1_RXM1(void) __INTTERUPT_FUNC ;

// CAN1 TXM1
void Excep_CAN1_TXM1(void) __INTTERUPT_FUNC ;

// vector 56 reserved
// vector 57 reserved
// vector 58 reserved
// vector 59 reserved
// vector 60 reserved
// vector 61 reserved
// RTC CUP
void Excep_RTC_CUP(void) __INTTERUPT_FUNC ;

// vector 63 reserved

// IRQ0
void Excep_IRQ0(void) __INTTERUPT_FUNC ;

// IRQ1
void Excep_IRQ1(void) __INTTERUPT_FUNC ;

// IRQ2
void Excep_IRQ2(void) __INTTERUPT_FUNC ;

// IRQ3
void Excep_IRQ3(void) __INTTERUPT_FUNC ;

// IRQ4
void Excep_IRQ4(void) __INTTERUPT_FUNC ;

// IRQ5
void Excep_IRQ5(void) __INTTERUPT_FUNC ;

// IRQ6
void Excep_IRQ6(void) __INTTERUPT_FUNC ;

// IRQ7
void Excep_IRQ7(void) __INTTERUPT_FUNC ;

// IRQ8
void Excep_IRQ8(void) __INTTERUPT_FUNC ;

// IRQ9
void Excep_IRQ9(void) __INTTERUPT_FUNC ;

// IRQ10
void Excep_IRQ10(void) __INTTERUPT_FUNC ;

// IRQ11
void Excep_IRQ11(void) __INTTERUPT_FUNC ;

// IRQ12
void Excep_IRQ12(void) __INTTERUPT_FUNC ;

// IRQ13
void Excep_IRQ13(void) __INTTERUPT_FUNC ;

// IRQ14
void Excep_IRQ14(void) __INTTERUPT_FUNC ;

// IRQ15
void Excep_IRQ15(void) __INTTERUPT_FUNC ;

// vector 80 reserved
// vector 81 reserved
// vector 82 reserved
// vector 83 reserved
// vector 84 reserved
// vector 85 reserved
// vector 86 reserved
// vector 87 reserved
// vector 88 reserved
// vector 89 reserved

// USB RESUME USBR0
void Excep_USB_USBR0(void) __INTTERUPT_FUNC ;

// USB RESUME USBR1
void Excep_USB_USBR1(void) __INTTERUPT_FUNC ;

// RTC ALM
void Excep_RTC_ALM(void) __INTTERUPT_FUNC ;

// vector 93 reserved
// vector 94 reserved
// vector 95 reserved
// vector 96 reserved
// vector 97 reserved

// ADA0 ADI0
void Excep_ADA0_ADI0(void) __INTTERUPT_FUNC ;

// vector 99 reserved
// vector 100 reserved
// vector 101 reserved

// S12AD0 S12ADI0
void Excep_S12AD0_S12ADI0(void) __INTTERUPT_FUNC ;

// vector 103 reserved
// vector 104 reserved
// vector 105 reserved

// GROUP E0
void Excep_GROUP_E0(void) __INTTERUPT_FUNC ;

// GROUP E1
void Excep_GROUP_E1(void) __INTTERUPT_FUNC ;

// GROUP E2
void Excep_GROUP_E2(void) __INTTERUPT_FUNC ;

// GROUP E3
void Excep_GROUP_E3(void) __INTTERUPT_FUNC ;

// GROUP E4
void Excep_GROUP_E4(void) __INTTERUPT_FUNC ;

// GROUP E5
void Excep_GROUP_E5(void) __INTTERUPT_FUNC ;

// GROUP E6
void Excep_GROUP_E6(void) __INTTERUPT_FUNC ;

// vector 113 reserved

// GROUP L0
void Excep_GROUP_L0(void) __INTTERUPT_FUNC ;

// vector 115 reserved
// vector 116 reserved
// vector 117 reserved
// vector 118 reserved
// vector 119 reserved
// vector 120 reserved
// vector 121 reserved

// SCIX_SCIX0
void Excep_SCIX_SCIX0(void) __INTTERUPT_FUNC ;

// SCIX_SCIX1
void Excep_SCIX_SCIX1(void) __INTTERUPT_FUNC ;

// SCIX_SCIX2
void Excep_SCIX_SCIX2(void) __INTTERUPT_FUNC ;

// SCIX_SCIX3
void Excep_SCIX_SCIX3(void) __INTTERUPT_FUNC ;

// TPU0 TGIA0
void Excep_TPU0_TGIA0(void) __INTTERUPT_FUNC ;

// TPU0 TGIB0
void Excep_TPU0_TGIB0(void) __INTTERUPT_FUNC ;

// TPU0 TGIC0
void Excep_TPU0_TGIC0(void) __INTTERUPT_FUNC ;

// TPU0 TGID0
void Excep_TPU0_TGID0(void) __INTTERUPT_FUNC ;

// TPU1 TGIA1
void Excep_TPU1_TGIA1(void) __INTTERUPT_FUNC ;

// TPU1 TGIB1
void Excep_TPU1_TGIB1(void) __INTTERUPT_FUNC ;

// TPU2 TGIA2
void Excep_TPU2_TGIA2(void) __INTTERUPT_FUNC ;

// TPU2 TGIB2
void Excep_TPU2_TGIB2(void) __INTTERUPT_FUNC ;

// TPU3 TGIA3
void Excep_TPU3_TGIA3(void) __INTTERUPT_FUNC ;

// TPU3 TGIB3
void Excep_TPU3_TGIB3(void) __INTTERUPT_FUNC ;

// TPU3 TGIC3
void Excep_TPU3_TGIC3(void) __INTTERUPT_FUNC ;

// TPU3 TGID3
void Excep_TPU3_TGID3(void) __INTTERUPT_FUNC ;

// TPU4 TGIA4
void Excep_TPU4_TGIA4(void) __INTTERUPT_FUNC ;

// TPU4 TGIB4
void Excep_TPU4_TGIB4(void) __INTTERUPT_FUNC ;

// TPU5 TGIA15
void Excep_TPU5_TGIA5(void) __INTTERUPT_FUNC ;

// TPU5 TGIB5
void Excep_TPU5_TGIB5(void) __INTTERUPT_FUNC ;

// TPU6/MTU0 TGIA6/TGIA0
void Excep_TPU6_TGIA6(void) __INTTERUPT_FUNC ;

// TPU6/MTU0 TGIB6/TGIB0
void Excep_TPU6_TGIB6(void) __INTTERUPT_FUNC ;

// TPU6/MTU0 TGIC6/TGIC0
void Excep_TPU6_TGIC6(void) __INTTERUPT_FUNC ;

// TPU6/MTU0 TGID6/TGID0
void Excep_TPU6_TGID6(void) __INTTERUPT_FUNC ;

// TPU6/MTU0 TGIE6/TGIE0
void Excep_TPU6_TGIE6(void) __INTTERUPT_FUNC ;

// TPU6/MTU0 TGIF6/TGIF0
void Excep_TPU6_TGIF6(void) __INTTERUPT_FUNC ;

// TPU7/MTU1 TGIA7/TGIA1
void Excep_TPU7_TGIA7(void) __INTTERUPT_FUNC ;

// TPU7/MTU1 TGIB7/TGIB1
void Excep_TPU7_TGIB7(void) __INTTERUPT_FUNC ;

// TPU8/MTU2 TGIA8/TGIA2
void Excep_TPU8_TGIA8(void) __INTTERUPT_FUNC ;

// TPU8/MTU2 TGIB8/TGIB2
void Excep_TPU8_TGIB8(void) __INTTERUPT_FUNC ;

// TPU9/MTU3 TGIA9/TGIA3
void Excep_TPU9_TGIA9(void) __INTTERUPT_FUNC ;

// TPU9/MTU3 TGIB9/TGIB3
void Excep_TPU9_TGIB9(void) __INTTERUPT_FUNC ;

// TPU9/MTU3 TGIC9/TGIC3
void Excep_TPU9_TGIC9(void) __INTTERUPT_FUNC ;

// TPU9/MTU3 TGID9/TGID3
void Excep_TPU9_TGID9(void) __INTTERUPT_FUNC ;

// TPU10/MTU4 TGIA10/TGIA4
void Excep_TPU10_TGIA10(void) __INTTERUPT_FUNC ;

// TPU10/MTU4 TGIB10/TGIB4
void Excep_TPU10_TGIB10(void) __INTTERUPT_FUNC ;

// TPU10/MTU4 TGIC10/TGIC4
void Excep_TPU10_TGIC10(void) __INTTERUPT_FUNC ;

// TPU10/MTU4 TGID10/TGID4
void Excep_TPU10_TGID10(void) __INTTERUPT_FUNC ;

// TPU10/MTU4 TGIV10/TGIV4
void Excep_TPU10_TGIV10(void) __INTTERUPT_FUNC ;

// MTU5 TGIU5
void Excep_MTU5_TGIU5(void) __INTTERUPT_FUNC ;

// MTU5 TGIV5
void Excep_MTU5_TGIV5(void) __INTTERUPT_FUNC ;

// MTU5 TGIW5
void Excep_MTU5_TGIW5(void) __INTTERUPT_FUNC ;

// TPU11 TGIA11
void Excep_TPU11_TGIA11(void) __INTTERUPT_FUNC ;

// TPU11 TGIB11
void Excep_TPU11_TGIB11(void) __INTTERUPT_FUNC ;

// POE2 OEI1
void Excep_POE2_OEI1(void) __INTTERUPT_FUNC ;

// POE2 OEI2
void Excep_POE2_OEI2(void) __INTTERUPT_FUNC ;

// vector 168 reserved
// vector 169 reserved

// TMR0_CMIA0
void Excep_TMR0_CMIA0(void) __INTTERUPT_FUNC ;

// TMR0_CMIB0
void Excep_TMR0_CMIB0(void) __INTTERUPT_FUNC ;

// TMR0_OVI0
void Excep_TMR0_OVI0(void) __INTTERUPT_FUNC ;

// TMR1_CMIA1
void Excep_TMR1_CMIA1(void) __INTTERUPT_FUNC ;

// TMR1_CMIB1
void Excep_TMR1_CMIB1(void) __INTTERUPT_FUNC ;

// TMR1_OVI1
void Excep_TMR1_OVI1(void) __INTTERUPT_FUNC ;

// TMR2_CMIA2
void Excep_TMR2_CMIA2(void) __INTTERUPT_FUNC ;

// TMR2_CMIB2
void Excep_TMR2_CMIB2(void) __INTTERUPT_FUNC ;

// TMR2_OVI2
void Excep_TMR2_OVI2(void) __INTTERUPT_FUNC ;

// TMR3_CMIA3
void Excep_TMR3_CMIA3(void) __INTTERUPT_FUNC ;

// TMR3_CMIB3
void Excep_TMR3_CMIB3(void) __INTTERUPT_FUNC ;

// TMR3_OVI3
void Excep_TMR3_OVI3(void) __INTTERUPT_FUNC ;

// RIIC0 EEI0
void Excep_RIIC0_EEI0(void) __INTTERUPT_FUNC ;

// RIIC0 RXI0
void Excep_RIIC0_RXI0(void) __INTTERUPT_FUNC ;

// RIIC0 TXI0
void Excep_RIIC0_TXI0(void) __INTTERUPT_FUNC ;

// RIIC0 TEI0
void Excep_RIIC0_TEI0(void) __INTTERUPT_FUNC ;

// RIIC1 EEI0
void Excep_RIIC1_EEI0(void) __INTTERUPT_FUNC ;

// RIIC1 RXI0
void Excep_RIIC1_RXI0(void) __INTTERUPT_FUNC ;

// RIIC1 TXI0
void Excep_RIIC1_TXI0(void) __INTTERUPT_FUNC ;

// RIIC1 TEI0
void Excep_RIIC1_TEI0(void) __INTTERUPT_FUNC ;

// RIIC2 EEI0
void Excep_RIIC2_EEI0(void) __INTTERUPT_FUNC ;

// RIIC2 RXI0
void Excep_RIIC2_RXI0(void) __INTTERUPT_FUNC ;

// RIIC2 TXI0
void Excep_RIIC2_TXI0(void) __INTTERUPT_FUNC ;

// RIIC2 TEI0
void Excep_RIIC2_TEI0(void) __INTTERUPT_FUNC ;

// RIIC3 EEI0
void Excep_RIIC3_EEI0(void) __INTTERUPT_FUNC ;

// RIIC3 RXI0
void Excep_RIIC3_RXI0(void) __INTTERUPT_FUNC ;

// RIIC3 TXI0
void Excep_RIIC3_TXI0(void) __INTTERUPT_FUNC ;

// RIIC3 TEI0
void Excep_RIIC3_TEI0(void) __INTTERUPT_FUNC ;

// DMACA DMAC0
void Excep_DMACA_DMAC0(void) __INTTERUPT_FUNC ;

// DMAC DMAC1
void Excep_DMACA_DMAC1(void) __INTTERUPT_FUNC ;

// DMAC DMAC2
void Excep_DMACA_DMAC2(void) __INTTERUPT_FUNC ;

// DMAC DMAC3
void Excep_DMACA_DMAC3(void) __INTTERUPT_FUNC ;

// EXDMAC DMAC0
void Excep_EXDMAC_DMAC0(void) __INTTERUPT_FUNC ;

// EXDMAC DMAC1
void Excep_EXDMAC_DMAC1(void) __INTTERUPT_FUNC ;
// vector 204 reserved
// vector 205 reserved
// vector 206 reserved
// vector 207 reserved
// vector 208 reserved
// vector 209 reserved
// vector 210 reserved
// vector 211 reserved
// vector 212 reserved
// vector 213 reserved

// SCI0_RXI0
void Excep_SCI0_RXI0(void) __INTTERUPT_FUNC ;

// SCI0_TXI0
void Excep_SCI0_TXI0(void) __INTTERUPT_FUNC ;

// SCI0_TEI0
void Excep_SCI0_TEI0(void) __INTTERUPT_FUNC ;

// SCI1_RXI1
void Excep_SCI1_RXI1(void) __INTTERUPT_FUNC ;

// SCI1_TXI1
void Excep_SCI1_TXI1(void) __INTTERUPT_FUNC ;

// SCI1_TEI1
void Excep_SCI1_TEI1(void) __INTTERUPT_FUNC ;

// SCI2_RXI2
void Excep_SCI2_RXI2(void) __INTTERUPT_FUNC ;

// SCI2_TXI2
void Excep_SCI2_TXI2(void) __INTTERUPT_FUNC ;

// SCI2_TEI2
void Excep_SCI2_TEI2(void) __INTTERUPT_FUNC ;

// SCI3_RXI3
void Excep_SCI3_RXI3(void) __INTTERUPT_FUNC ;

// SCI3_TXI3
void Excep_SCI3_TXI3(void) __INTTERUPT_FUNC ;

// SCI3_TEI3
void Excep_SCI3_TEI3(void) __INTTERUPT_FUNC ;

// SCI4_RXI4
void Excep_SCI4_RXI4(void) __INTTERUPT_FUNC ;

// SCI4_TXI4
void Excep_SCI4_TXI4(void) __INTTERUPT_FUNC ;

// SCI4_TEI4
void Excep_SCI4_TEI4(void) __INTTERUPT_FUNC ;

// SCI5_RXI5
void Excep_SCI5_RXI5(void) __INTTERUPT_FUNC ;

// SCI5_TXI5
void Excep_SCI5_TXI5(void) __INTTERUPT_FUNC ;

// SCI5_TEI5
void Excep_SCI5_TEI5(void) __INTTERUPT_FUNC ;

// SCI6_RXI6
void Excep_SCI6_RXI6(void) __INTTERUPT_FUNC ;

// SCI6_TXI6
void Excep_SCI6_TXI6(void) __INTTERUPT_FUNC ;

// SCI6_TEI6
void Excep_SCI6_TEI6(void) __INTTERUPT_FUNC ;

// SCI7_RXI7
void Excep_SCI7_RXI7(void) __INTTERUPT_FUNC ;
// SCI7_TXI7
void Excep_SCI7_TXI7(void) __INTTERUPT_FUNC ;

// SCI7_TEI7
void Excep_SCI7_TEI7(void) __INTTERUPT_FUNC ;

// SCI8_RXI8
void Excep_SCI8_RXI8(void) __INTTERUPT_FUNC ;

// SCI8_TXI8
void Excep_SCI8_TXI8(void) __INTTERUPT_FUNC ;

// SCI8_TEI8
void Excep_SCI8_TEI8(void) __INTTERUPT_FUNC ;

// SCI9_RXI9
void Excep_SCI9_RXI9(void) __INTTERUPT_FUNC ;

// SCI9_TXI9
void Excep_SCI9_TXI9(void) __INTTERUPT_FUNC ;

// SCI9_TEI9
void Excep_SCI9_TEI9(void) __INTTERUPT_FUNC ;

// SCI10_RXI10
void Excep_SCI10_RXI10(void) __INTTERUPT_FUNC ;

// SCI10_TXI10
void Excep_SCI10_TXI10(void) __INTTERUPT_FUNC ;

// SCI10_TEI10
void Excep_SCI10_TEI10(void) __INTTERUPT_FUNC ;

// SCI11_RXI11
void Excep_SCI11_RXI11(void) __INTTERUPT_FUNC ;

// SCI11_TXI11
void Excep_SCI11_TXI11(void) __INTTERUPT_FUNC ;

// SCI11_TEI11
void Excep_SCI11_TEI11(void) __INTTERUPT_FUNC ;

// SCI12_RXI12
void Excep_SCI12_RXI12(void) __INTTERUPT_FUNC ;

// SCI12_TXI12
void Excep_SCI12_TXI12(void) __INTTERUPT_FUNC ;

// SCI12_TEI12
void Excep_SCI12_TEI12(void) __INTTERUPT_FUNC ;

// IEBUS IEBINT
void Excep_IEBUS_IEBINT(void) __INTTERUPT_FUNC ;

// vector 254 reserved
// vector 255 reserved

//;<<VECTOR DATA START (POWER ON RESET)>>
//;Power On Reset PC
extern void PowerON_Reset_PC(void) __INTTERUPT_FUNC ;
//;<<VECTOR DATA END (POWER ON RESET)>>


#ifdef __cplusplus
}
#endif

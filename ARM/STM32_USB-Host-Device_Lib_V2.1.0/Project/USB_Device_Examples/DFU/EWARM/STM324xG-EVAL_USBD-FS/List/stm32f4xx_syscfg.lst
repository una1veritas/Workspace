###############################################################################
#                                                                             #
#                                                       19/Sep/2012  16:16:11 #
# IAR ANSI C/C++ Compiler V6.40.2.33884/W32 KICKSTART for ARM                 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Libraries\STM32F4xx_StdPeriph_Driver #
#                    \src\stm32f4xx_syscfg.c                                  #
#    Command line =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Libraries\STM32F4xx_StdPeriph_Driver #
#                    \src\stm32f4xx_syscfg.c -D USE_STDPERIPH_DRIVER -D       #
#                    STM32F4XX -D USE_STM324xG_EVAL -D USE_USB_OTG_FS -lcN    #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\List\ -o                         #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\Obj\ --debug --endian=little     #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench 6.4           #
#                    Kickstart\arm\INC\c\DLib_Config_Full.h" -I               #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\ -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM3 #
#                    2_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples #
#                    \DFU\EWARM\..\inc\ -I \\psf\Home\Documents\Eclipse\Works #
#                    pace\ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_De #
#                    vice_Examples\DFU\EWARM\..\..\..\..\Libraries\CMSIS\Devi #
#                    ce\ST\STM32F4xx\Include\ -I                              #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\  #
#                    -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB- #
#                    Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\E #
#                    WARM\..\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\ -I  #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Libraries\STM32_USB_Device_Library\Core\in #
#                    c\ -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_U #
#                    SB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DF #
#                    U\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\C #
#                    lass\dfu\inc\ -I \\psf\Home\Documents\Eclipse\Workspace\ #
#                    ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_ #
#                    Examples\DFU\EWARM\..\..\..\..\Utilities\STM32_EVAL\ -I  #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Utilities\STM32_EVAL\Common\ -I            #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\    #
#                    -Ohz --use_c++_inline -I "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.4                           #
#                    Kickstart\arm\CMSIS\Include\"                            #
#    List file    =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\List\stm32f4xx_syscfg.lst        #
#    Object file  =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\Obj\stm32f4xx_syscfg.o           #
#                                                                             #
#                                                                             #
###############################################################################

\\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Host-Device_Lib_V2.1.0\Libraries\STM32F4xx_StdPeriph_Driver\src\stm32f4xx_syscfg.c
      1          /**
      2            ******************************************************************************
      3            * @file    stm32f4xx_syscfg.c
      4            * @author  MCD Application Team
      5            * @version V1.0.2
      6            * @date    05-March-2012
      7            * @brief   This file provides firmware functions to manage the SYSCFG peripheral.
      8            *
      9            *  @verbatim
     10            *  
     11            *          ===================================================================
     12            *                                 How to use this driver
     13            *          ===================================================================
     14            *                  
     15            *          This driver provides functions for:
     16            *          
     17            *          1. Remapping the memory accessible in the code area using SYSCFG_MemoryRemapConfig()
     18            *              
     19            *          2. Manage the EXTI lines connection to the GPIOs using SYSCFG_EXTILineConfig()
     20            *            
     21            *          3. Select the ETHERNET media interface (RMII/RII) using SYSCFG_ETH_MediaInterfaceConfig()
     22            *
     23            *  @note  SYSCFG APB clock must be enabled to get write access to SYSCFG registers,
     24            *         using RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);
     25            *                 
     26            *  @endverbatim
     27            *      
     28            ******************************************************************************
     29            * @attention
     30            *
     31            * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     32            *
     33            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     34            * You may not use this file except in compliance with the License.
     35            * You may obtain a copy of the License at:
     36            *
     37            *        http://www.st.com/software_license_agreement_liberty_v2
     38            *
     39            * Unless required by applicable law or agreed to in writing, software 
     40            * distributed under the License is distributed on an "AS IS" BASIS, 
     41            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     42            * See the License for the specific language governing permissions and
     43            * limitations under the License.
     44            *
     45            ******************************************************************************
     46            */
     47          
     48          /* Includes ------------------------------------------------------------------*/
     49          #include "stm32f4xx_syscfg.h"
     50          #include "stm32f4xx_rcc.h"
     51          
     52          /** @addtogroup STM32F4xx_StdPeriph_Driver
     53            * @{
     54            */
     55          
     56          /** @defgroup SYSCFG 
     57            * @brief SYSCFG driver modules
     58            * @{
     59            */ 
     60          
     61          /* Private typedef -----------------------------------------------------------*/
     62          /* Private define ------------------------------------------------------------*/
     63          /* ------------ RCC registers bit address in the alias region ----------- */
     64          #define SYSCFG_OFFSET             (SYSCFG_BASE - PERIPH_BASE)
     65          /* ---  PMC Register ---*/ 
     66          /* Alias word address of MII_RMII_SEL bit */ 
     67          #define PMC_OFFSET                (SYSCFG_OFFSET + 0x04) 
     68          #define MII_RMII_SEL_BitNumber    ((uint8_t)0x17) 
     69          #define PMC_MII_RMII_SEL_BB       (PERIPH_BB_BASE + (PMC_OFFSET * 32) + (MII_RMII_SEL_BitNumber * 4)) 
     70          
     71          /* ---  CMPCR Register ---*/ 
     72          /* Alias word address of CMP_PD bit */ 
     73          #define CMPCR_OFFSET              (SYSCFG_OFFSET + 0x20) 
     74          #define CMP_PD_BitNumber          ((uint8_t)0x00) 
     75          #define CMPCR_CMP_PD_BB           (PERIPH_BB_BASE + (CMPCR_OFFSET * 32) + (CMP_PD_BitNumber * 4)) 
     76          
     77          /* Private macro -------------------------------------------------------------*/
     78          /* Private variables ---------------------------------------------------------*/
     79          /* Private function prototypes -----------------------------------------------*/
     80          /* Private functions ---------------------------------------------------------*/
     81          
     82          /** @defgroup SYSCFG_Private_Functions
     83            * @{
     84            */ 
     85          
     86          /**
     87            * @brief  Deinitializes the Alternate Functions (remap and EXTI configuration)
     88            *   registers to their default reset values.
     89            * @param  None
     90            * @retval None
     91            */
     92          void SYSCFG_DeInit(void)
     93          {
     94             RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, ENABLE);
     95             RCC_APB2PeriphResetCmd(RCC_APB2Periph_SYSCFG, DISABLE);
     96          }
     97          
     98          /**
     99            * @brief  Changes the mapping of the specified pin.
    100            * @param  SYSCFG_Memory: selects the memory remapping.
    101            *         This parameter can be one of the following values:
    102            *            @arg SYSCFG_MemoryRemap_Flash:       Main Flash memory mapped at 0x00000000  
    103            *            @arg SYSCFG_MemoryRemap_SystemFlash: System Flash memory mapped at 0x00000000
    104            *            @arg SYSCFG_MemoryRemap_FSMC:        FSMC (Bank1 (NOR/PSRAM 1 and 2) mapped at 0x00000000
    105            *            @arg SYSCFG_MemoryRemap_SRAM:        Embedded SRAM (112kB) mapped at 0x00000000
    106            * @retval None
    107            */
    108          void SYSCFG_MemoryRemapConfig(uint8_t SYSCFG_MemoryRemap)
    109          {
    110            /* Check the parameters */
    111            assert_param(IS_SYSCFG_MEMORY_REMAP_CONFING(SYSCFG_MemoryRemap));
    112          
    113            SYSCFG->MEMRMP = SYSCFG_MemoryRemap;
    114          }
    115          
    116          /**
    117            * @brief  Selects the GPIO pin used as EXTI Line.
    118            * @param  EXTI_PortSourceGPIOx : selects the GPIO port to be used as source for
    119            *          EXTI lines where x can be (A..I).
    120            * @param  EXTI_PinSourcex: specifies the EXTI line to be configured.
    121            *           This parameter can be EXTI_PinSourcex where x can be (0..15, except
    122            *           for EXTI_PortSourceGPIOI x can be (0..11).
    123            * @retval None
    124            */
    125          void SYSCFG_EXTILineConfig(uint8_t EXTI_PortSourceGPIOx, uint8_t EXTI_PinSourcex)
    126          {
    127            uint32_t tmp = 0x00;
    128          
    129            /* Check the parameters */
    130            assert_param(IS_EXTI_PORT_SOURCE(EXTI_PortSourceGPIOx));
    131            assert_param(IS_EXTI_PIN_SOURCE(EXTI_PinSourcex));
    132          
    133            tmp = ((uint32_t)0x0F) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03));
    134            SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] &= ~tmp;
    135            SYSCFG->EXTICR[EXTI_PinSourcex >> 0x02] |= (((uint32_t)EXTI_PortSourceGPIOx) << (0x04 * (EXTI_PinSourcex & (uint8_t)0x03)));
    136          }
    137          
    138          /**
    139            * @brief  Selects the ETHERNET media interface 
    140            * @param  SYSCFG_ETH_MediaInterface: specifies the Media Interface mode. 
    141            *          This parameter can be one of the following values: 
    142            *            @arg SYSCFG_ETH_MediaInterface_MII: MII mode selected
    143            *            @arg SYSCFG_ETH_MediaInterface_RMII: RMII mode selected 
    144            * @retval None 
    145            */
    146          void SYSCFG_ETH_MediaInterfaceConfig(uint32_t SYSCFG_ETH_MediaInterface) 
    147          { 
    148            assert_param(IS_SYSCFG_ETH_MEDIA_INTERFACE(SYSCFG_ETH_MediaInterface)); 
    149            /* Configure MII_RMII selection bit */ 
    150            *(__IO uint32_t *) PMC_MII_RMII_SEL_BB = SYSCFG_ETH_MediaInterface; 
    151          }
    152          
    153          /**
    154            * @brief  Enables or disables the I/O Compensation Cell.
    155            * @note   The I/O compensation cell can be used only when the device supply
    156            *         voltage ranges from 2.4 to 3.6 V.  
    157            * @param  NewState: new state of the I/O Compensation Cell.
    158            *          This parameter can be one of the following values:
    159            *            @arg ENABLE: I/O compensation cell enabled  
    160            *            @arg DISABLE: I/O compensation cell power-down mode  
    161            * @retval None
    162            */
    163          void SYSCFG_CompensationCellCmd(FunctionalState NewState)
    164          {
    165            /* Check the parameters */
    166            assert_param(IS_FUNCTIONAL_STATE(NewState));
    167          
    168            *(__IO uint32_t *) CMPCR_CMP_PD_BB = (uint32_t)NewState;
    169          }
    170          
    171          /**
    172            * @brief  Checks whether the I/O Compensation Cell ready flag is set or not.
    173            * @param  None
    174            * @retval The new state of the I/O Compensation Cell ready flag (SET or RESET)
    175            */
    176          FlagStatus SYSCFG_GetCompensationCellStatus(void)
    177          {
    178            FlagStatus bitstatus = RESET;
    179              
    180            if ((SYSCFG->CMPCR & SYSCFG_CMPCR_READY ) != (uint32_t)RESET)
    181            {
    182              bitstatus = SET;
    183            }
    184            else
    185            {
    186              bitstatus = RESET;
    187            }
    188            return bitstatus;
    189          }
    190          
    191          /**
    192            * @}
    193            */
    194          
    195          /**
    196            * @}
    197            */
    198          
    199          /**
    200            * @}
    201            */
    202          
    203          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  SYSCFG_CompensationCellCmd
        8  SYSCFG_DeInit
             0 -> RCC_APB2PeriphResetCmd
             8 -> RCC_APB2PeriphResetCmd
        0  SYSCFG_ETH_MediaInterfaceConfig
       12  SYSCFG_EXTILineConfig
        0  SYSCFG_GetCompensationCellStatus
        0  SYSCFG_MemoryRemapConfig


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       6  SYSCFG_CompensationCellCmd
      26  SYSCFG_DeInit
       6  SYSCFG_ETH_MediaInterfaceConfig
      34  SYSCFG_EXTILineConfig
      12  SYSCFG_GetCompensationCellStatus
       6  SYSCFG_MemoryRemapConfig

 
 110 bytes in section .text
 
 110 bytes of CODE memory

Errors: none
Warnings: none

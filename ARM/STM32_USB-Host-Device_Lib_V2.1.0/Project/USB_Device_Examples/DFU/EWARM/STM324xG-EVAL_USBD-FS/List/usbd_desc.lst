###############################################################################
#                                                                             #
#                                                       19/Sep/2012  16:16:19 #
# IAR ANSI C/C++ Compiler V6.40.2.33884/W32 KICKSTART for ARM                 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\src\ #
#                    usbd_desc.c                                              #
#    Command line =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\src\ #
#                    usbd_desc.c -D USE_STDPERIPH_DRIVER -D STM32F4XX -D      #
#                    USE_STM324xG_EVAL -D USE_USB_OTG_FS -lcN                 #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\List\ -o                         #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\Obj\ --debug --endian=little     #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench 6.4           #
#                    Kickstart\arm\INC\c\DLib_Config_Full.h" -I               #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\ -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM3 #
#                    2_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples #
#                    \DFU\EWARM\..\inc\ -I \\psf\Home\Documents\Eclipse\Works #
#                    pace\ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_De #
#                    vice_Examples\DFU\EWARM\..\..\..\..\Libraries\CMSIS\Devi #
#                    ce\ST\STM32F4xx\Include\ -I                              #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\  #
#                    -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB- #
#                    Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\E #
#                    WARM\..\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\ -I  #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Libraries\STM32_USB_Device_Library\Core\in #
#                    c\ -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_U #
#                    SB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DF #
#                    U\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\C #
#                    lass\dfu\inc\ -I \\psf\Home\Documents\Eclipse\Workspace\ #
#                    ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_ #
#                    Examples\DFU\EWARM\..\..\..\..\Utilities\STM32_EVAL\ -I  #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Utilities\STM32_EVAL\Common\ -I            #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\    #
#                    -Ohz --use_c++_inline -I "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.4                           #
#                    Kickstart\arm\CMSIS\Include\"                            #
#    List file    =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\List\usbd_desc.lst               #
#    Object file  =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\Obj\usbd_desc.o                  #
#                                                                             #
#                                                                             #
###############################################################################

\\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\src\usbd_desc.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_desc.c
      4            * @author  MCD Application Team
      5            * @version V1.1.0
      6            * @date    19-March-2012
      7            * @brief   This file provides the USBD descriptors and string formating method.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */ 
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "usbd_core.h"
     30          #include "usbd_desc.h"
     31          #include "usbd_req.h"
     32          #include "usbd_conf.h"
     33          #include "usb_regs.h"
     34          
     35          /** @addtogroup STM32_USB_OTG_DEVICE_LIBRARY
     36            * @{
     37            */
     38          
     39          
     40          /** @defgroup USBD_DESC 
     41            * @brief USBD descriptors module
     42            * @{
     43            */ 
     44          
     45          /** @defgroup USBD_DESC_Private_TypesDefinitions
     46            * @{
     47            */ 
     48          /**
     49            * @}
     50            */ 
     51          
     52          
     53          /** @defgroup USBD_DESC_Private_Defines
     54            * @{
     55            */ 
     56          
     57          #define USBD_VID                        0x0483
     58          
     59          #define USBD_PID                        0xDF11
     60          
     61          
     62          /** @defgroup USB_String_Descriptors
     63            * @{
     64            */ 
     65          #define USBD_LANGID_STRING              0x409
     66          #define USBD_MANUFACTURER_STRING        "STMicroelectronics"
     67          
     68          #define USBD_PRODUCT_HS_STRING          "DFU in HS mode"
     69          #define USBD_SERIALNUMBER_HS_STRING     "00000000010B"
     70          
     71          #define USBD_PRODUCT_FS_STRING          "DFU in FS Mode"
     72          #define USBD_SERIALNUMBER_FS_STRING     "00000000010C"
     73          
     74          #define USBD_CONFIGURATION_HS_STRING    "DFU Config"
     75          #define USBD_INTERFACE_HS_STRING        "DFU Interface"
     76          
     77          #define USBD_CONFIGURATION_FS_STRING    "DFU Config"
     78          #define USBD_INTERFACE_FS_STRING        "DFU Interface"
     79          /**
     80            * @}
     81            */ 
     82          
     83          
     84          /** @defgroup USBD_DESC_Private_Macros
     85            * @{
     86            */ 
     87          /**
     88            * @}
     89            */ 
     90          
     91          
     92          /** @defgroup USBD_DESC_Private_Variables
     93            * @{
     94            */ 
     95          
     96          USBD_DEVICE USR_desc =
     97          {
     98            USBD_USR_DeviceDescriptor,
     99            USBD_USR_LangIDStrDescriptor, 
    100            USBD_USR_ManufacturerStrDescriptor,
    101            USBD_USR_ProductStrDescriptor,
    102            USBD_USR_SerialStrDescriptor,
    103            USBD_USR_ConfigStrDescriptor,
    104            USBD_USR_InterfaceStrDescriptor,
    105            
    106          };
    107          
    108          
    109          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
    110            #if defined ( __ICCARM__ ) /*!< IAR Compiler */
    111              #pragma data_alignment=4   
    112            #endif
    113          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    114          /* USB Standard Device Descriptor */
    115          __ALIGN_BEGIN uint8_t USBD_DeviceDesc[USB_SIZ_DEVICE_DESC] __ALIGN_END =
    116            {
    117              0x12,                       /*bLength */
    118              USB_DEVICE_DESCRIPTOR_TYPE, /*bDescriptorType*/
    119              0x00,                       /*bcdUSB */
    120              0x02,
    121              0x00,                       /*bDeviceClass*/
    122              0x00,                       /*bDeviceSubClass*/
    123              0x00,                       /*bDeviceProtocol*/
    124              USB_OTG_MAX_EP0_SIZE,      /*bMaxPacketSize*/
    125              LOBYTE(USBD_VID),           /*idVendor*/
    126              HIBYTE(USBD_VID),           /*idVendor*/
    127              LOBYTE(USBD_PID),           /*idVendor*/
    128              HIBYTE(USBD_PID),           /*idVendor*/
    129              0x00,                       /*bcdDevice rel. 2.00*/
    130              0x02,
    131              USBD_IDX_MFC_STR,           /*Index of manufacturer  string*/
    132              USBD_IDX_PRODUCT_STR,       /*Index of product string*/
    133              USBD_IDX_SERIAL_STR,        /*Index of serial number string*/
    134              USBD_CFG_MAX_NUM            /*bNumConfigurations*/
    135            } ; /* USB_DeviceDescriptor */
    136          
    137          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
    138            #if defined ( __ICCARM__ ) /*!< IAR Compiler */
    139              #pragma data_alignment=4   
    140            #endif
    141          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    142          /* USB Standard Device Descriptor */
    143          __ALIGN_BEGIN uint8_t USBD_DeviceQualifierDesc[USB_LEN_DEV_QUALIFIER_DESC] __ALIGN_END =
    144          {
    145            USB_LEN_DEV_QUALIFIER_DESC,
    146            USB_DESC_TYPE_DEVICE_QUALIFIER,
    147            0x00,
    148            0x02,
    149            0x00,
    150            0x00,
    151            0x00,
    152            0x40,
    153            0x01,
    154            0x00,
    155          };
    156          
    157          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
    158            #if defined ( __ICCARM__ ) /*!< IAR Compiler */
    159              #pragma data_alignment=4   
    160            #endif
    161          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    162          /* USB Standard Device Descriptor */
    163          __ALIGN_BEGIN uint8_t USBD_LangIDDesc[USB_SIZ_STRING_LANGID] __ALIGN_END =
    164          {
    165               USB_SIZ_STRING_LANGID,         
    166               USB_DESC_TYPE_STRING,       
    167               LOBYTE(USBD_LANGID_STRING),
    168               HIBYTE(USBD_LANGID_STRING), 
    169          };
    170          /**
    171            * @}
    172            */ 
    173          
    174          
    175          /** @defgroup USBD_DESC_Private_FunctionPrototypes
    176            * @{
    177            */ 
    178          /**
    179            * @}
    180            */ 
    181          
    182          
    183          /** @defgroup USBD_DESC_Private_Functions
    184            * @{
    185            */ 
    186          
    187          /**
    188          * @brief  USBD_USR_DeviceDescriptor 
    189          *         return the device descriptor
    190          * @param  speed : current device speed
    191          * @param  length : pointer to data length variable
    192          * @retval pointer to descriptor buffer
    193          */
    194          uint8_t *  USBD_USR_DeviceDescriptor( uint8_t speed , uint16_t *length)
    195          {
    196            *length = sizeof(USBD_DeviceDesc);
    197            return USBD_DeviceDesc;
    198          }
    199          
    200          /**
    201          * @brief  USBD_USR_LangIDStrDescriptor 
    202          *         return the LangID string descriptor
    203          * @param  speed : current device speed
    204          * @param  length : pointer to data length variable
    205          * @retval pointer to descriptor buffer
    206          */
    207          uint8_t *  USBD_USR_LangIDStrDescriptor( uint8_t speed , uint16_t *length)
    208          {
    209            *length =  sizeof(USBD_LangIDDesc);  
    210            return USBD_LangIDDesc;
    211          }
    212          
    213          
    214          /**
    215          * @brief  USBD_USR_ProductStrDescriptor 
    216          *         return the product string descriptor
    217          * @param  speed : current device speed
    218          * @param  length : pointer to data length variable
    219          * @retval pointer to descriptor buffer
    220          */
    221          uint8_t *  USBD_USR_ProductStrDescriptor( uint8_t speed , uint16_t *length)
    222          {
    223           
    224            
    225            if(speed == 0)
    226            {   
    227              USBD_GetString (USBD_PRODUCT_HS_STRING, USBD_StrDesc, length);
    228            }
    229            else
    230            {
    231              USBD_GetString (USBD_PRODUCT_FS_STRING, USBD_StrDesc, length);    
    232            }
    233            return USBD_StrDesc;
    234          }
    235          
    236          /**
    237          * @brief  USBD_USR_ManufacturerStrDescriptor 
    238          *         return the manufacturer string descriptor
    239          * @param  speed : current device speed
    240          * @param  length : pointer to data length variable
    241          * @retval pointer to descriptor buffer
    242          */
    243          uint8_t *  USBD_USR_ManufacturerStrDescriptor( uint8_t speed , uint16_t *length)
    244          {
    245            USBD_GetString (USBD_MANUFACTURER_STRING, USBD_StrDesc, length);
    246            return USBD_StrDesc;
    247          }
    248          
    249          /**
    250          * @brief  USBD_USR_SerialStrDescriptor 
    251          *         return the serial number string descriptor
    252          * @param  speed : current device speed
    253          * @param  length : pointer to data length variable
    254          * @retval pointer to descriptor buffer
    255          */
    256          uint8_t *  USBD_USR_SerialStrDescriptor( uint8_t speed , uint16_t *length)
    257          {
    258            if(speed  == USB_OTG_SPEED_HIGH)
    259            {    
    260              USBD_GetString (USBD_SERIALNUMBER_HS_STRING, USBD_StrDesc, length);
    261            }
    262            else
    263            {
    264              USBD_GetString (USBD_SERIALNUMBER_FS_STRING, USBD_StrDesc, length);    
    265            }
    266            return USBD_StrDesc;
    267          }
    268          
    269          /**
    270          * @brief  USBD_USR_ConfigStrDescriptor 
    271          *         return the configuration string descriptor
    272          * @param  speed : current device speed
    273          * @param  length : pointer to data length variable
    274          * @retval pointer to descriptor buffer
    275          */
    276          uint8_t *  USBD_USR_ConfigStrDescriptor( uint8_t speed , uint16_t *length)
    277          {
    278            if(speed  == USB_OTG_SPEED_HIGH)
    279            {  
    280              USBD_GetString (USBD_CONFIGURATION_HS_STRING, USBD_StrDesc, length);
    281            }
    282            else
    283            {
    284              USBD_GetString (USBD_CONFIGURATION_FS_STRING, USBD_StrDesc, length); 
    285            }
    286            return USBD_StrDesc;  
    287          }
    288          
    289          
    290          /**
    291          * @brief  USBD_USR_InterfaceStrDescriptor 
    292          *         return the interface string descriptor
    293          * @param  speed : current device speed
    294          * @param  length : pointer to data length variable
    295          * @retval pointer to descriptor buffer
    296          */
    297          uint8_t *  USBD_USR_InterfaceStrDescriptor( uint8_t speed , uint16_t *length)
    298          {
    299            if(speed == 0)
    300            {
    301              USBD_GetString (USBD_INTERFACE_HS_STRING, USBD_StrDesc, length);
    302            }
    303            else
    304            {
    305              USBD_GetString (USBD_INTERFACE_FS_STRING, USBD_StrDesc, length);
    306            }
    307            return USBD_StrDesc;  
    308          }
    309          
    310          /**
    311            * @}
    312            */ 
    313          
    314          
    315          /**
    316            * @}
    317            */ 
    318          
    319          
    320          /**
    321            * @}
    322            */ 
    323          
    324          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/
    325          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  USBD_USR_ConfigStrDescriptor
             8 -> USBD_GetString
        0  USBD_USR_DeviceDescriptor
        8  USBD_USR_InterfaceStrDescriptor
             8 -> USBD_GetString
        0  USBD_USR_LangIDStrDescriptor
        8  USBD_USR_ManufacturerStrDescriptor
             8 -> USBD_GetString
        8  USBD_USR_ProductStrDescriptor
             8 -> USBD_GetString
        8  USBD_USR_SerialStrDescriptor
             8 -> USBD_GetString


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      32  ?<Constant "00000000010B">
      12  ?<Constant "DFU Config">
      16  ?<Constant "DFU Interface">
      32  ?<Constant "DFU in HS mode">
      20  ?<Constant "STMicroelectronics">
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
      12  ?Subroutine0
      20  USBD_DeviceDesc
      12  USBD_DeviceQualifierDesc
       4  USBD_LangIDDesc
       6  USBD_USR_ConfigStrDescriptor
       8  USBD_USR_DeviceDescriptor
       8  USBD_USR_InterfaceStrDescriptor
       8  USBD_USR_LangIDStrDescriptor
       8  USBD_USR_ManufacturerStrDescriptor
      22  USBD_USR_ProductStrDescriptor
      22  USBD_USR_SerialStrDescriptor
      28  USR_desc

 
  64 bytes in section .data
 112 bytes in section .rodata
 126 bytes in section .text
 
 126 bytes of CODE  memory
 112 bytes of CONST memory
  64 bytes of DATA  memory

Errors: none
Warnings: none

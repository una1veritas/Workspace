###############################################################################
#                                                                             #
#                                                       19/Sep/2012  16:16:23 #
# IAR ANSI C/C++ Compiler V6.40.2.33884/W32 KICKSTART for ARM                 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Libraries\STM32_USB_Device_Library\C #
#                    lass\dfu\src\usbd_otp_if.c                               #
#    Command line =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Libraries\STM32_USB_Device_Library\C #
#                    lass\dfu\src\usbd_otp_if.c -D USE_STDPERIPH_DRIVER -D    #
#                    STM32F4XX -D USE_STM324xG_EVAL -D USE_USB_OTG_FS -lcN    #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\List\ -o                         #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\Obj\ --debug --endian=little     #
#                    --cpu=Cortex-M4 -e --fpu=None --dlib_config "C:\Program  #
#                    Files (x86)\IAR Systems\Embedded Workbench 6.4           #
#                    Kickstart\arm\INC\c\DLib_Config_Full.h" -I               #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\ -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM3 #
#                    2_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples #
#                    \DFU\EWARM\..\inc\ -I \\psf\Home\Documents\Eclipse\Works #
#                    pace\ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_De #
#                    vice_Examples\DFU\EWARM\..\..\..\..\Libraries\CMSIS\Devi #
#                    ce\ST\STM32F4xx\Include\ -I                              #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Libraries\STM32F4xx_StdPeriph_Driver\inc\  #
#                    -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB- #
#                    Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\E #
#                    WARM\..\..\..\..\Libraries\STM32_USB_OTG_Driver\inc\ -I  #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Libraries\STM32_USB_Device_Library\Core\in #
#                    c\ -I \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_U #
#                    SB-Host-Device_Lib_V2.1.0\Project\USB_Device_Examples\DF #
#                    U\EWARM\..\..\..\..\Libraries\STM32_USB_Device_Library\C #
#                    lass\dfu\inc\ -I \\psf\Home\Documents\Eclipse\Workspace\ #
#                    ARM\STM32_USB-Host-Device_Lib_V2.1.0\Project\USB_Device_ #
#                    Examples\DFU\EWARM\..\..\..\..\Utilities\STM32_EVAL\ -I  #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Utilities\STM32_EVAL\Common\ -I            #
#                    \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\..\..\..\..\Utilities\STM32_EVAL\STM3240_41_G_EVAL\    #
#                    -Ohz --use_c++_inline -I "C:\Program Files (x86)\IAR     #
#                    Systems\Embedded Workbench 6.4                           #
#                    Kickstart\arm\CMSIS\Include\"                            #
#    List file    =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\List\usbd_otp_if.lst             #
#    Object file  =  \\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Hos #
#                    t-Device_Lib_V2.1.0\Project\USB_Device_Examples\DFU\EWAR #
#                    M\STM324xG-EVAL_USBD-FS\Obj\usbd_otp_if.o                #
#                                                                             #
#                                                                             #
###############################################################################

\\psf\Home\Documents\Eclipse\Workspace\ARM\STM32_USB-Host-Device_Lib_V2.1.0\Libraries\STM32_USB_Device_Library\Class\dfu\src\usbd_otp_if.c
      1          /**
      2            ******************************************************************************
      3            * @file    usbd_otp_if.c
      4            * @author  MCD Application Team
      5            * @version V1.1.0
      6            * @date    19-March-2012
      7            * @brief   Specific media access Layer for OTP (One Time Programming) memory.
      8            ******************************************************************************
      9            * @attention
     10            *
     11            * <h2><center>&copy; COPYRIGHT 2012 STMicroelectronics</center></h2>
     12            *
     13            * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
     14            * You may not use this file except in compliance with the License.
     15            * You may obtain a copy of the License at:
     16            *
     17            *        http://www.st.com/software_license_agreement_liberty_v2
     18            *
     19            * Unless required by applicable law or agreed to in writing, software 
     20            * distributed under the License is distributed on an "AS IS" BASIS, 
     21            * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     22            * See the License for the specific language governing permissions and
     23            * limitations under the License.
     24            *
     25            ******************************************************************************
     26            */ 
     27          
     28          /* Includes ------------------------------------------------------------------*/
     29          #include "usbd_otp_if.h"
     30          #include "usbd_dfu_mal.h"
     31          
     32          /* Private typedef -----------------------------------------------------------*/
     33          /* Private define ------------------------------------------------------------*/
     34          /* Private macro -------------------------------------------------------------*/
     35          
     36          /* Private function prototypes -----------------------------------------------*/
     37          uint16_t OTP_If_Write (uint32_t Add, uint32_t Len);
     38          uint8_t *OTP_If_Read  (uint32_t Add, uint32_t Len);
     39          uint16_t OTP_If_DeInit(void);
     40          uint16_t OTP_If_CheckAdd(uint32_t Add);
     41          
     42          
     43          /* Private variables ---------------------------------------------------------*/
     44          DFU_MAL_Prop_TypeDef DFU_Otp_cb =
     45            {
     46              OTP_IF_STRING,
     47              NULL, /* Init not supported*/
     48              NULL, /* DeInit not supported */
     49              NULL, /* Erase not supported */
     50              OTP_If_Write,
     51              OTP_If_Read,
     52              OTP_If_CheckAdd,
     53              1,  /* Erase Time in ms */
     54              10  /* Programming Time in ms */
     55            };
     56            
     57          /* Private functions ---------------------------------------------------------*/
     58          
     59          /**
     60            * @brief  OTP_If_Write
     61            *         Memory write routine.
     62            * @param  Add: Address to be written to.
     63            * @param  Len: Number of data to be written (in bytes).
     64            * @retval MAL_OK if operation is successeful, MAL_FAIL else.
     65            */
     66          uint16_t OTP_If_Write(uint32_t Add, uint32_t Len)
     67          {
     68            uint32_t idx = 0;
     69            
     70            if  (Len & 0x3) /* Not an aligned data */
     71            {
     72              for (idx = Len; idx < ((Len & 0xFFFC) + 4); idx++)
     73              {
     74                MAL_Buffer[idx] = 0xFF;
     75              }
     76            }
     77            
     78            /* Data received are Word multiple */
     79            for (idx = 0; idx <  Len; idx = idx + 4)
     80            {
     81              FLASH_ProgramWord(Add, *(uint32_t *)(MAL_Buffer + idx));
     82              Add += 4;
     83            }
     84            return MAL_OK;
     85          }
     86          
     87          /**
     88            * @brief  OTP_If_Read
     89            *         Memory read routine.
     90            * @param  Add: Address to be read from.
     91            * @param  Len: Number of data to be read (in bytes).
     92            * @retval Pointer to the phyisical address where data should be read.
     93            */
     94          uint8_t *OTP_If_Read (uint32_t Add, uint32_t Len)
     95          {
     96          #ifdef USB_OTG_HS_INTERNAL_DMA_ENABLED
     97            uint32_t idx = 0;
     98            for (idx = 0; idx < Len; idx += 4)
     99            {
    100              *(uint32_t*)(MAL_Buffer + idx) = *(uint32_t *)(Add + idx);
    101            }
    102            return (uint8_t*)(MAL_Buffer);
    103          #else
    104            return  (uint8_t*)(Add);
    105          #endif /* USB_OTG_HS_INTERNAL_DMA_ENABLED */
    106          }
    107          
    108          /**
    109            * @brief  OTP_If_CheckAdd
    110            *         Check if the address is an allowed address for this memory.
    111            * @param  Add: Address to be checked.
    112            * @param  Len: Number of data to be read (in bytes).
    113            * @retval MAL_OK if the address is allowed, MAL_FAIL else.
    114            */
    115          uint16_t OTP_If_CheckAdd(uint32_t Add)
    116          {
    117            if ((Add >= OTP_START_ADD) && (Add < OTP_END_ADD))
    118            {
    119              return MAL_OK;
    120            }
    121            else
    122            {
    123              return MAL_FAIL;
    124            }
    125          }
    126          /************************ (C) COPYRIGHT STMicroelectronics *****END OF FILE****/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  OTP_If_CheckAdd
        0  OTP_If_Read
       24  OTP_If_Write
             24 -> FLASH_ProgramWord
             24 -> __aeabi_memset


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      44  ?<Constant "@OTP Area   /0x1FFF78...">
       4  ??DataTable0
      36  DFU_Otp_cb
      20  OTP_If_CheckAdd
       2  OTP_If_Read
      60  OTP_If_Write

 
 36 bytes in section .data
 44 bytes in section .rodata
 86 bytes in section .text
 
 86 bytes of CODE  memory
 44 bytes of CONST memory
 36 bytes of DATA  memory

Errors: none
Warnings: none

//============================================================================
// Name        : PocketDataReader.cpp
// Author      : Sin Shimozono
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
using namespace std;

#include <cstdint>

typedef uint8_t uint8;

uint8 data[] = {
	0x02, 0x50, 0x49, 0x43, 0x41, 0x4C, 0x43, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20,
	0x20, 0x0D, 0x23, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x23,
	0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x44, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x0D, 0x00, 0x64, 0x13, 0xFE, 0x59, 0x1E, 0x10, 0x50, 0x49, 0x20, 0x43, 0x41, 0x4C, 0x43,
	0x55, 0x4C, 0x41, 0x54, 0x4F, 0x52, 0x20, 0x0D, 0x00, 0x6E, 0x06, 0xFE, 0x46, 0x50, 0x2C, 0x51,
	0x0D, 0x00, 0x78, 0x0B, 0x50, 0x3D, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00,
	0x82, 0x0B, 0x53, 0x3D, 0x1D, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x00, 0x8C, 0x03,
	0xFE, 0x50, 0x0D, 0x00, 0x96, 0x09, 0xFE, 0x61, 0x22, 0x4E, 0x3D, 0x22, 0x3B, 0x4E, 0x0D, 0x00,
	0xA0, 0x11, 0xFE, 0x57, 0x49, 0x3D, 0x1D, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0xFE,
	0x52, 0x4E, 0x0D, 0x00, 0xAA, 0x05, 0x51, 0x20, 0x3D, 0x50, 0x0D, 0x00, 0xB4, 0x25, 0x50, 0x3D,
	0x50, 0x2B, 0x53, 0x2A, 0x1D, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x2F, 0x28, 0x1D, 0x00,
	0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x49, 0x2B, 0x1D, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
	0x00, 0x29, 0x0D, 0x00, 0xBE, 0x05, 0x53, 0x3D, 0x2D, 0x53, 0x0D, 0x00, 0xC8, 0x30, 0xFE, 0x56,
	0x1E, 0x2D, 0x1D, 0x00, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x2A, 0x28, 0xFE, 0x98, 0x28, 0x49,
	0x2F, 0x1D, 0x00, 0x03, 0x10, 0x00, 0x00, 0x00, 0x00, 0x29, 0x29, 0x3D, 0x49, 0xFE, 0x54, 0xFE,
	0x60, 0x49, 0x3B, 0x22, 0x20, 0x50, 0x49, 0x3D, 0x22, 0x3B, 0x50, 0x2B, 0x51, 0x0D, 0x00, 0xD2,
	0x04, 0xFE, 0x5B, 0x49, 0x0D, 0x00, 0xDC, 0x0B, 0xFE, 0x29, 0x1D, 0x00, 0x00, 0x20, 0x00, 0x00,
	0x00, 0x00, 0x0D, 0x00, 0xE6, 0x25, 0xFE, 0x60, 0x22, 0x49, 0x54, 0x45, 0x52, 0x41, 0x54, 0x45,
	0x44, 0x20, 0x22, 0x3B, 0x49, 0x2D, 0x1D, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x3B, 0x22,
	0x2C, 0x20, 0x50, 0x49, 0x3D, 0x22, 0x3B, 0x50, 0x2B, 0x51, 0x0D, 0x00, 0xF0, 0x03, 0xFE, 0x5A,
	0x0D, 0xFF, 0x02, 0xAA,
};

class CheckSum {
	unsigned long chksum;
public:
	typedef uint8_t uint8;

	CheckSum() : chksum(0) {}

	operator unsigned long() {
		return chksum;
	}

	unsigned int operator=(const unsigned int & x) {
		chksum = x;
		return chksum;
	}

	unsigned long popcount(const uint8 byte) {
		for(int i = 0; i < 8; ++i) {
			if ( (byte & (1<<i)) != 0 ) {
				chksum += 1;
			}
		}
		return chksum;
	}

};

int main(void) {
	puts("!!!Hello World!!!"); /* prints !!!Hello World!!! */

	CheckSum xsum;
	int i;

	for (i = 0; i < 0x30; ++i ) {
		if ( (i & 0x0f) == 0 )
			printf("%04x: ", i);

		xsum.popcount(data[i]);
		printf("%02x ", data[i]);

		if ( (i & 0x0f) == 0x0f )
			printf(": %04x\n", (unsigned int) xsum);
	}
	printf("%04x: %02x %02x\n", 0x30, data[0x30], data[0x31]);
	printf("\nchecksum = %04x\n", (unsigned int) xsum);
	printf("\n");

	xsum = 0;
	int offset = 0x32;
	for (i = 0; data[offset + i] != 0xff; ++i ) {
		if ( (i & 0x0f) == 0 )
			printf("%04x: ", i);
		xsum.popcount(data[offset+i]);
		printf("%02x ", data[offset+i]);

		if ( (i & 0x0f) == 0x0f )
			printf(": %04x\n", (unsigned int) xsum);
	}
	printf("\n%04x: %02x %02x %02x\n", offset + i, data[offset + i], data[offset + i + 1], data[offset + i + 2]);
	printf("checksum = %04x\n", (unsigned int) xsum);
	printf("\n");

	printf("\n");



	return EXIT_SUCCESS;
}

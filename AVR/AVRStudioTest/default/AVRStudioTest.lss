
AVRStudioTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000000c4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_aranges 00000020  00000000  00000000  00000118  2**3
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_info   00000066  00000000  00000000  00000138  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_abbrev 00000014  00000000  00000000  0000019e  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_line   0000005b  00000000  00000000  000001b2  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 60 00 	jmp	0xc0	; 0xc0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
 
 
.global main
 
main:
	ldi	r16, 0xFF
  80:	0f ef       	ldi	r16, 0xFF	; 255
	out	_SFR_IO_ADDR(DDRD), r16
  82:	0a b9       	out	0x0a, r16	; 10
	ldi 	r16, 0x00
  84:	00 e0       	ldi	r16, 0x00	; 0
	out	_SFR_IO_ADDR(PORTD), r16
  86:	0b b9       	out	0x0b, r16	; 11
	out 	_SFR_IO_ADDR(DDRB), r16
  88:	04 b9       	out	0x04, r16	; 4
	
	ldi	r16, 0x01
  8a:	01 e0       	ldi	r16, 0x01	; 1

0000008c <loop>:
loop:
	out	_SFR_IO_ADDR(PORTD), r16
  8c:	0b b9       	out	0x0b, r16	; 11
	call 	wait
  8e:	0e 94 4d 00 	call	0x9a	; 0x9a <wait>
	in  	r17, _SFR_IO_ADDR(PINB)
  92:	13 b1       	in	r17, 0x03	; 3
	sbrc 	r17, 5
  94:	15 fd       	sbrc	r17, 5
	ror	r16
  96:	07 95       	ror	r16
	rjmp	loop    
  98:	f9 cf       	rjmp	.-14     	; 0x8c <loop>

0000009a <wait>:

wait:
	ldi	r19, 0x3f
  9a:	3f e3       	ldi	r19, 0x3F	; 63

0000009c <wait_loop1>:
wait_loop1:
	ldi 	r18, 0xff
  9c:	2f ef       	ldi	r18, 0xFF	; 255

0000009e <wait_loop0>:
	...
	nop
	nop
	nop
	nop
	nop
	dec r18
  b6:	2a 95       	dec	r18
	brne wait_loop0
  b8:	91 f7       	brne	.-28     	; 0x9e <wait_loop0>
	dec r19
  ba:	3a 95       	dec	r19
	brne wait_loop1
  bc:	79 f7       	brne	.-34     	; 0x9c <wait_loop1>
	ret
  be:	08 95       	ret

000000c0 <_exit>:
  c0:	f8 94       	cli

000000c2 <__stop_program>:
  c2:	ff cf       	rjmp	.-2      	; 0xc2 <__stop_program>

#ifndef PEGGYVIDEO16_H
# define PEGGYVIDEO16_H
/*
File:   PeggyVideo.h
*/

#ifdef __cplusplus
extern "C" {
#endif

// Define the addresses of the devices that we want to manage on i2c bus.

#define PEGGYVIDEO		0x34      // device address of Peggy Video

// 25 rows * 13 bytes per row == 325
#define DISP_BUFFER_SIZE 325
#define DISP_COLUMN_LENGTH 25
#define DISP_ROW_LENGTH 25
#define DISP_BYTES_LENGTH 13

#define MAX_BRIGHTNESS 15

////////////////////////////////////////////////////////////////////////////////////////////

/*
 * Pixels are stored in the frameBuffer[] array two per byte, allowing
 * a maximum of 16 levels of brightness per pixel, including off.
 * The Pixel union allows the code to access either pairs of pixels
 * using the both name, or as individual 4 bit pixels using the
 * even and odd names.
 */
typedef union {
	uint8_t both;
	struct {
		uint8_t even:4;
		uint8_t odd:4;
	};
} Pixel, * pPixel;



// structure to pass the video row parameters.
typedef struct
{
//	uint8_t		I2CAddress; Only needed on the the MASTER side of the transmission. Exclude from CRC8.
    uint8_t		RowNumber;  //
	uint8_t     DoublePixels[DISP_BYTES_LENGTH];     // two 4 bit pixels per byte, upper & lower nibble.
    uint8_t     CRC8;        //
} xVideoRowArray, * pVideoRowArray;


static void TaskReadI2CVideo(void *pvParameters);   // Read I2C Bus for Video
static void TaskWriteLED(void *pvParameters); // Write Video to LED Display

/*
prog_uchar Picture[]  = // put these characters in PROGMEM, to save RAM.
{
//   use pgm_read_byte(&Picture[x]) to get them out of PROGMEM.

15, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
14, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
13, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
12, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
11, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
10, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 9, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 8, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 7, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 6, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15,10, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 5, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15,10,10, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 4, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15,10,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 3, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15,10,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 2, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15,10,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 1, 0, 1, 0, 2, 0, 3, 0,15,15,15,15,15,10,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4,10,00,00,00,10,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0,10,00,00,00,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5,10,10,10,10,10, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
 0, 0, 1, 0, 2, 0, 3, 0, 4, 0, 5, 0, 6, 0, 7, 0, 8, 0, 9, 0,10, 0,11, 0,12,
};

11,11,10, 3, 2, 1, 1, 1, 1, 1, 2, 2, 2, 1, 2, 2, 2, 2, 2, 7,13,13,13,14,13,
11,11, 8, 3, 1, 1, 1, 1, 1, 1, 1, 1, 4, 5, 4, 1, 2, 2, 1, 3, 6,12,14,13,13,
10,10, 6, 2, 1, 1, 2, 2, 1, 3, 5, 8,13,15,14, 8, 3, 1, 1, 3, 3, 8,14,13,13,
11, 8, 3, 2, 3, 5, 7, 7, 8,13,15,15,15,15,15,15,11, 5, 3, 4, 3, 7,13,13,13,
11, 8, 3, 3, 7,10,13,14,15,15,15,15,15,15,15,15,15,13, 5, 3, 5, 6,12,14,13,
11, 9, 4, 6, 9,11,13,14,14,15,15,15,14,14,15,15,15,13, 7, 4, 6, 5,10,14,13,
12,11, 6, 7, 9,11,11,13,13,14,14,14,13,14,14,14,15,14, 9, 6, 5, 6, 8,14,13,
11,11, 5, 7, 9,11,11,12,12,14,14,14,14,14,14,15,15,13,11, 7, 4, 4, 5, 9,14,
11, 8, 4, 6, 9,13,14,14,13,14,14,15,13,13,14,14,14,10, 8, 6, 3, 5, 3, 7,11,
11, 7, 2, 5, 6, 7, 8,11,11, 9, 8, 7, 4, 7,11,12,11, 9, 5, 5, 4, 6, 4, 6,11,
10, 8, 3, 2, 1, 1, 2, 4, 8, 5, 2, 1, 1, 2, 5, 9,11,10, 4, 3, 4, 6, 5, 6,13,
10, 9, 4, 1, 1, 0, 1, 1, 8, 6, 2, 0, 2, 3, 2, 6,12,11, 4, 3, 3, 6, 9, 9,13,
 9,10, 6, 2, 1, 2, 1, 3,11,11, 5, 3, 3, 6, 7, 7,12,13, 7, 7, 3, 6,12,12,13,
11,11, 8, 6, 5, 4, 4, 7,14,13,11, 7, 6, 9,11,13,14,14, 9,10, 5, 8,11, 9,13,
 9,11, 9, 8, 8, 7, 8,11,14,13,13,11, 9,11,13,14,13, 8, 6,10, 9,11, 7, 8,12,
 9,10,10, 7, 9,11, 8,12,14,13,11,11,14,14,12,11, 9, 5, 5,10,13,13, 9,11,13,
10,11,10, 7, 6, 5, 5, 8,11,11,10, 6, 9,13,11, 7, 6, 6, 6, 8,10,10,12,13,13,
10, 9,11, 7, 2, 2, 4, 2, 2, 4, 7, 8, 4, 5, 5, 6, 7, 8, 5, 5, 8,11,13,13,13,
10,11,10, 9, 3, 2, 4, 2, 2, 5,11,13, 7, 5, 4, 6, 8, 9, 7, 9,12,14,14,13,13,
10,11,11,10, 5, 2, 3, 3, 3, 5, 7, 7, 6, 7, 5, 7, 8, 8, 9,14,13,14,13,13,13,
10,11,11,11, 5, 3, 3, 4, 6, 7, 7, 8, 8, 7, 4, 6, 8, 6,11,14,13,13,13,13,13,
11,11,11,11, 4, 2, 3, 2, 3, 5, 7, 9, 7, 5, 4, 6, 5, 6,13,11,13,13,13,13,13,
11,11,11, 9, 3, 4, 3, 6, 6, 8, 7, 6, 4, 2, 3, 4, 4, 8,15, 8, 9,13,13,13,13,
11,11,10,11, 5, 2, 2, 3, 4, 3, 3, 3, 2, 2, 2, 1, 4,12,15, 7, 4, 9,13,13,13,
11,11,11,11,11, 4, 1, 1, 2, 2, 2, 2, 1, 1, 1, 3, 7,15,15, 7, 3, 5, 8,11,13,
};
*/

#ifdef __cplusplus
}
#endif

#endif // PEGGYVIDEO16_H

// cmath standard header
// Copyright 2009-2010 IAR Systems AB.
#ifndef _CMATH_
#define _CMATH_

#ifndef _SYSTEM_BUILD
  #pragma system_include
#endif

#include <ycheck.h>
#include <yvals.h>

#ifdef _STD_USING
  #undef _STD_USING
  #include <math.h>
  #define _STD_USING
#else /* _STD_USING */
  #include <math.h>
#endif /* _STD_USING */

#ifdef _GLOBAL_USING
  _STD_BEGIN
  using _CSTD abs; using _CSTD acos; using _CSTD asin;
  using _CSTD atan; using _CSTD atan2; using _CSTD ceil;
  using _CSTD cos; using _CSTD cosh; using _CSTD exp;
  using _CSTD fabs; using _CSTD floor; using _CSTD fmod;
  using _CSTD frexp; using _CSTD ldexp; using _CSTD log;
  using _CSTD log10; using _CSTD modf; using _CSTD pow;
  using _CSTD sin; using _CSTD sinh; using _CSTD sqrt;
  using _CSTD tan; using _CSTD tanh;

  #if _DLIB_ADD_C99_SYMBOLS
    using _CSTD acosf; using _CSTD asinf;
    using _CSTD atanf; using _CSTD atan2f; using _CSTD ceilf;
    using _CSTD cosf; using _CSTD coshf; using _CSTD expf;
    using _CSTD fabsf; using _CSTD floorf; using _CSTD fmodf;
    using _CSTD frexpf; using _CSTD ldexpf; using _CSTD logf;
    using _CSTD log10f; using _CSTD modff; using _CSTD powf;
    using _CSTD sinf; using _CSTD sinhf; using _CSTD sqrtf;
    using _CSTD tanf; using _CSTD tanhf;

    using _CSTD acosl; using _CSTD asinl;
    using _CSTD atanl; using _CSTD atan2l; using _CSTD ceill;
    using _CSTD cosl; using _CSTD coshl; using _CSTD expl;
    using _CSTD fabsl; using _CSTD floorl; using _CSTD fmodl;
    using _CSTD frexpl; using _CSTD ldexpl; using _CSTD logl;
    using _CSTD log10l; using _CSTD modfl; using _CSTD powl;
    using _CSTD sinl; using _CSTD sinhl; using _CSTD sqrtl;
    using _CSTD tanl; using _CSTD tanhl;

    using _CSTD float_t; using _CSTD double_t;
    using _CSTD _D_FNAME(Dcomp); using _CSTD _F_FNAME(Dcomp);
    using _CSTD _L_FNAME(Dcomp);

    using _CSTD acosh; using _CSTD asinh; using _CSTD atanh;
    using _CSTD cbrt; using _CSTD exp2;
    using _CSTD hypot; using _CSTD ilogb;
    using _CSTD log1p; using _CSTD log2; using _CSTD logb;
    using _CSTD llrint; using _CSTD lrint; using _CSTD nearbyint;
    using _CSTD rint; using _CSTD llround; using _CSTD lround;
    using _CSTD fdim; using _CSTD fmax; using _CSTD fmin;
    using _CSTD round; using _CSTD trunc;
    using _CSTD remainder; using _CSTD remquo;
    using _CSTD copysign; using _CSTD nan; using _CSTD nextafter;
    using _CSTD scalbn; using _CSTD scalbln; using _CSTD nexttoward;

    using _CSTD acoshf; using _CSTD asinhf; using _CSTD atanhf;
    using _CSTD cbrtf; using _CSTD exp2f;
    using _CSTD hypotf; using _CSTD ilogbf;
    using _CSTD log1pf; using _CSTD log2f; using _CSTD logbf;
    using _CSTD llrintf; using _CSTD lrintf; using _CSTD nearbyintf;
    using _CSTD rintf; using _CSTD llroundf; using _CSTD lroundf;
    using _CSTD fdimf; using _CSTD fmaxf; using _CSTD fminf;
    using _CSTD roundf; using _CSTD truncf;
    using _CSTD remainderf; using _CSTD remquof;
    using _CSTD copysignf; using _CSTD nanf;
    using _CSTD nextafterf; using _CSTD scalbnf; using _CSTD scalblnf;
    using _CSTD nexttowardf;

    using _CSTD acoshl; using _CSTD asinhl; using _CSTD atanhl;
    using _CSTD cbrtl; using _CSTD exp2l;
    using _CSTD hypotl; using _CSTD ilogbl;
    using _CSTD log1pl; using _CSTD log2l; using _CSTD logbl;
    using _CSTD llrintl; using _CSTD lrintl; using _CSTD nearbyintl;
    using _CSTD rintl; using _CSTD llroundl; using _CSTD lroundl;
    using _CSTD fdiml; using _CSTD fmaxl; using _CSTD fminl;
    using _CSTD roundl; using _CSTD truncl;
    using _CSTD remainderl; using _CSTD remquol;
    using _CSTD copysignl; using _CSTD nanl;
    using _CSTD nextafterl; using _CSTD scalbnl; using _CSTD scalblnl;
    using _CSTD nexttowardl;

    #if _DLIB_ALLOW_LARGE_CONSTANT_TABLES_FOR_MATH
      using _CSTD erf; using _CSTD erfc;
      using _CSTD erff; using _CSTD erfcf;
      using _CSTD erfl; using _CSTD erfcl;
      using _CSTD expm1; using _CSTD expm1f; using _CSTD expm1l;
      using _CSTD lgamma; using _CSTD lgammaf; using _CSTD lgammal;
      using _CSTD tgamma; using _CSTD tgammaf; using _CSTD tgammal;
      using _CSTD fma; using _CSTD fmaf; using _CSTD fmal; 
    #endif /* _DLIB_ALLOW_LARGE_CONSTANT_TABLES_FOR_MATH */

    #if _DLIB_ALLOW_LARGE_CONSTANT_TABLES_FOR_MATH && \
        !defined(_DLIB_DO_NOT_ADD_ACCURATE_FUNCTIONS)
      using _CSTD __iar_tan_accurate; using _CSTD __iar_cos_accurate;
      using _CSTD __iar_sin_accurate; using _CSTD __iar_pow_accurate;
      using _CSTD __iar_Sin_accurate; using _CSTD __iar_Pow_accurate;
      #if _DLIB_ADD_C99_SYMBOLS
        using _CSTD __iar_tan_accuratef; using _CSTD __iar_cos_accuratef;
        using _CSTD __iar_sin_accuratef; using _CSTD __iar_pow_accuratef;
        using _CSTD __iar_Sin_accuratef; using _CSTD __iar_Pow_accuratef;
        using _CSTD __iar_tan_accuratel; using _CSTD __iar_cos_accuratel;
        using _CSTD __iar_sin_accuratel; using _CSTD __iar_pow_accuratel;
        using _CSTD __iar_Sin_accuratel; using _CSTD __iar_Pow_accuratel;
      #endif /* _DLIB_ADD_C99_SYMBOLS */
    #endif /* _DLIB_ALLOW_LARGE_CONSTANT_TABLES_FOR_MATH && 
              !defined(_DLIB_DO_NOT_ADD_ACCURATE_FUNCTIONS) */

    #ifndef _DLIB_DO_NOT_ADD_SMALL_FUNCTIONS
      using _CSTD __iar_cos_small; using _CSTD __iar_exp_small;
      using _CSTD __iar_log_small; using _CSTD __iar_log10_small;
      using _CSTD __iar_pow_small; using _CSTD __iar_sin_small;
      using _CSTD __iar_tan_small;
      #if _DLIB_ADD_C99_SYMBOLS
        using _CSTD __iar_cos_smallf; using _CSTD __iar_exp_smallf;
        using _CSTD __iar_log_smallf; using _CSTD __iar_log10_smallf;
        using _CSTD __iar_pow_smallf; using _CSTD __iar_sin_smallf;
        using _CSTD __iar_tan_smallf;

        using _CSTD __iar_cos_smalll; using _CSTD __iar_exp_smalll;
        using _CSTD __iar_log_smalll; using _CSTD __iar_log10_smalll;
        using _CSTD __iar_pow_smalll; using _CSTD __iar_sin_smalll;
        using _CSTD __iar_tan_smalll;
      #endif /* _DLIB_ADD_C99_SYMBOLS */
    #endif /* _DLIB_DO_NOT_ADD_SMALL_FUNCTIONS */

    #if _HAS_GENERIC_TEMPLATES
      using _CSTD _Rc_type; using _CSTD _Rc_widened;
      using _CSTD _Real_type; using _CSTD _Real_widened;
      using _CSTD _Combined_type;

      using _CSTD fpclassify;
      using _CSTD signbit; using _CSTD isfinite; using _CSTD isinf;
      using _CSTD isnan; using _CSTD isnormal;
      using _CSTD isgreater; using _CSTD isgreaterequal;
      using _CSTD isless; using _CSTD islessequal; using _CSTD islessgreater;
      using _CSTD isunordered;
    #endif /* _HAS_GENERIC_TEMPLATES */

  #endif /* _DLIB_ADD_C99_SYMBOLS */
  _STD_END
#endif /* _GLOBAL_USING */
#endif /* _CMATH_ */

/*
 * Copyright (c) 1992-2009 by P.J. Plauger.  ALL RIGHTS RESERVED.
 * Consult your license regarding permissions and restrictions.
V5.04:0576 */

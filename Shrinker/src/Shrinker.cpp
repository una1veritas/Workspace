//============================================================================
// Name        : Shrinker.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <stdio.h>

#include <iostream>
#include <cmath>

using namespace std;

#define bmv(v, s, d)  ((((v)>>s)&1)<<d)
#define shrink(l, h)  (bmv(l,6, 3) | bmv(l,4, 2) | bmv(l,2, 1) | bmv(l,0, 0) | \
						bmv(h,6, 7) | bmv(h,4, 6) | bmv(h,2, 5) | bmv(h,0, 4))

typedef uint8_t 	uint8;
typedef uint16_t 	uint16;
typedef int16_t  	int16;

//WARNING: This Font Require X-GLCD Lib.
//         You can not use it with MikroE GLCD Lib.

//Font Generated by MikroElektronika GLCD Font Creator 1.2.0.0
//MikroElektronika 2011
//http://www.mikroe.com

//GLCD FontName : pix_Chicago20x30
//GLCD FontSize : 20 x 30

const unsigned char font[] = {
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
		0x30,0x78,0x78,0x30,0x30,0x00,0x30,0x00,
		0x6C,0x6C,0x6C,0x00,0x00,0x00,0x00,0x00,
		0x6C,0x6C,0xFE,0x6C,0xFE,0x6C,0x6C,0x00,
		0x18,0x3E,0x60,0x3C,0x06,0x7C,0x18,0x00,
		0x00,0x63,0x66,0x0C,0x18,0x33,0x63,0x00,
		0x1C,0x36,0x1C,0x3B,0x6E,0x66,0x3B,0x00,
		0x30,0x30,0x60,0x00,0x00,0x00,0x00,0x00,
		0x0C,0x18,0x30,0x30,0x30,0x18,0x0C,0x00,
		0x30,0x18,0x0C,0x0C,0x0C,0x18,0x30,0x00,
		0x00,0x66,0x3C,0xFF,0x3C,0x66,0x00,0x00,
		0x00,0x30,0x30,0xFC,0x30,0x30,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x30,
		0x00,0x00,0x00,0x7E,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x18,0x18,0x00,
		0x03,0x06,0x0C,0x18,0x30,0x60,0x40,0x00,
		0x3E,0x63,0x63,0x6B,0x63,0x63,0x3E,0x00,
		0x18,0x38,0x58,0x18,0x18,0x18,0x7E,0x00,
		0x3C,0x66,0x06,0x1C,0x30,0x66,0x7E,0x00,
		0x3C,0x66,0x06,0x1C,0x06,0x66,0x3C,0x00,
		0x0E,0x1E,0x36,0x66,0x7F,0x06,0x0F,0x00,
		0x7E,0x60,0x7C,0x06,0x06,0x66,0x3C,0x00,
		0x1C,0x30,0x60,0x7C,0x66,0x66,0x3C,0x00,
		0x7E,0x66,0x06,0x0C,0x18,0x18,0x18,0x00,
		0x3C,0x66,0x66,0x3C,0x66,0x66,0x3C,0x00,
		0x3C,0x66,0x66,0x3E,0x06,0x0C,0x38,0x00,
		0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x00,
		0x00,0x18,0x18,0x00,0x00,0x18,0x18,0x30,
		0x0C,0x18,0x30,0x60,0x30,0x18,0x0C,0x00,
		0x00,0x00,0x7E,0x00,0x00,0x7E,0x00,0x00,
		0x30,0x18,0x0C,0x06,0x0C,0x18,0x30,0x00,
		0x3C,0x66,0x06,0x0C,0x18,0x00,0x18,0x00,
		0x3E,0x63,0x6F,0x69,0x6F,0x60,0x3E,0x00,
		0x18,0x3C,0x66,0x66,0x7E,0x66,0x66,0x00,
		0x7E,0x33,0x33,0x3E,0x33,0x33,0x7E,0x00,
		0x1E,0x33,0x60,0x60,0x60,0x33,0x1E,0x00,
		0x7C,0x36,0x33,0x33,0x33,0x36,0x7C,0x00,
		0x7F,0x31,0x34,0x3C,0x34,0x31,0x7F,0x00,
		0x7F,0x31,0x34,0x3C,0x34,0x30,0x78,0x00,
		0x1E,0x33,0x60,0x60,0x67,0x33,0x1F,0x00,
		0x66,0x66,0x66,0x7E,0x66,0x66,0x66,0x00,
		0x3C,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,
		0x0F,0x06,0x06,0x06,0x66,0x66,0x3C,0x00,
		0x73,0x33,0x36,0x3C,0x36,0x33,0x73,0x00,
		0x78,0x30,0x30,0x30,0x31,0x33,0x7F,0x00,
		0x63,0x77,0x7F,0x7F,0x6B,0x63,0x63,0x00,
		0x63,0x73,0x7B,0x6F,0x67,0x63,0x63,0x00,
		0x3E,0x63,0x63,0x63,0x63,0x63,0x3E,0x00,
		0x7E,0x33,0x33,0x3E,0x30,0x30,0x78,0x00,
		0x3C,0x66,0x66,0x66,0x6E,0x3C,0x0E,0x00,
		0x7E,0x33,0x33,0x3E,0x36,0x33,0x73,0x00,
		0x3C,0x66,0x30,0x18,0x0C,0x66,0x3C,0x00,
		0x7E,0x5A,0x18,0x18,0x18,0x18,0x3C,0x00,
		0x66,0x66,0x66,0x66,0x66,0x66,0x7E,0x00,
		0x66,0x66,0x66,0x66,0x66,0x3C,0x18,0x00,
		0x63,0x63,0x63,0x6B,0x7F,0x77,0x63,0x00,
		0x63,0x63,0x36,0x1C,0x1C,0x36,0x63,0x00,
		0x66,0x66,0x66,0x3C,0x18,0x18,0x3C,0x00,
		0x7F,0x63,0x46,0x0C,0x19,0x33,0x7F,0x00,
		0x3C,0x30,0x30,0x30,0x30,0x30,0x3C,0x00,
		0x60,0x30,0x18,0x0C,0x06,0x03,0x01,0x00,
		0x3C,0x0C,0x0C,0x0C,0x0C,0x0C,0x3C,0x00,
		0x08,0x1C,0x36,0x63,0x00,0x00,0x00,0x00,
		0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,
		0x18,0x18,0x0C,0x00,0x00,0x00,0x00,0x00,
		0x00,0x00,0x3C,0x06,0x3E,0x66,0x3B,0x00,
		0x70,0x30,0x3E,0x33,0x33,0x33,0x6E,0x00,
		0x00,0x00,0x3C,0x66,0x60,0x66,0x3C,0x00,
		0x0E,0x06,0x3E,0x66,0x66,0x66,0x3B,0x00,
		0x00,0x00,0x3C,0x66,0x7E,0x60,0x3C,0x00,
		0x1C,0x36,0x30,0x78,0x30,0x30,0x78,0x00,
		0x00,0x00,0x3B,0x66,0x66,0x3E,0x06,0x7C,
		0x70,0x30,0x36,0x3B,0x33,0x33,0x73,0x00,
		0x18,0x00,0x38,0x18,0x18,0x18,0x3C,0x00,
		0x06,0x00,0x06,0x06,0x06,0x66,0x66,0x3C,
		0x70,0x30,0x33,0x36,0x3C,0x36,0x73,0x00,
		0x38,0x18,0x18,0x18,0x18,0x18,0x3C,0x00,
		0x00,0x00,0x66,0x7F,0x7F,0x6B,0x63,0x00,
		0x00,0x00,0x7C,0x66,0x66,0x66,0x66,0x00,
		0x00,0x00,0x3C,0x66,0x66,0x66,0x3C,0x00,
		0x00,0x00,0x6E,0x33,0x33,0x3E,0x30,0x78,
		0x00,0x00,0x3B,0x66,0x66,0x3E,0x06,0x0F,
		0x00,0x00,0x6E,0x3B,0x33,0x30,0x78,0x00,
		0x00,0x00,0x3E,0x60,0x3C,0x06,0x7C,0x00,
		0x08,0x18,0x3E,0x18,0x18,0x1A,0x0C,0x00,
		0x00,0x00,0x66,0x66,0x66,0x66,0x3B,0x00,
		0x00,0x00,0x66,0x66,0x66,0x3C,0x18,0x00,
		0x00,0x00,0x63,0x6B,0x7F,0x7F,0x36,0x00,
		0x00,0x00,0x63,0x36,0x1C,0x36,0x63,0x00,
		0x00,0x00,0x66,0x66,0x66,0x3E,0x06,0x7C,
		0x00,0x00,0x7E,0x4C,0x18,0x32,0x7E,0x00,
		0x0E,0x18,0x18,0x70,0x18,0x18,0x0E,0x00,
		0x0C,0x0C,0x0C,0x00,0x0C,0x0C,0x0C,0x00,
		0x70,0x18,0x18,0x0E,0x18,0x18,0x70,0x00,
		0x3B,0x6E,0x00,0x00,0x00,0x00,0x00,0x00,
		0x1C,0x36,0x36,0x1C,0x00,0x00,0x00,0x00
};


int main() {
	cout << "!!!Hello World!!!" << endl; // prints !!!Hello World!!!

	uint8 ch;
	const uint16 width = 20;
	const uint16 height = 30;
	const uint16 percol = ceil((float)height/8);
	uint16 perchar = percol*width+1;

	uint16 chwidth;
	uint8 colbytes[percol];
	uint16 cnt = 0;

	printf("perline %02X, perchar %d \n\n", percol, perchar);

	printf("\t{\n");
	printf("\t%02X, %02X, // width, height \n", (uint16) ceil(float(width)/2), (uint16) ceil(float(height)/2));
	cnt += 2;
	for(ch = 0x20; ch < 0x80; ch++) {
		chwidth = font[(ch-0x20)*perchar];
		printf("\t");
		printf("/* '%c' (%02x), ", ch, ch);
		printf("width %02X from +%d byte */\n\t", (uint16)ceil((float)chwidth/2), cnt );
		printf("%02X, ", (uint16)ceil((float)chwidth/2) );
		cnt++;
		for(int w = 0; w < /*width*/chwidth; w+= 2) { // with shrink factor 2
			for(int i = 0; i < percol; i++) {
				colbytes[i] = font[(ch-0x20)*perchar+1+w*percol+i];
				//printf("0x%02X, ", colbytes[i]);
			}
			printf("%02X, %02X,  ",
					shrink(colbytes[0], colbytes[1]),
					shrink(colbytes[2], colbytes[3]));
			cnt+=2;
		}
		printf("\n");
	}
	printf("\t}\n");

	return 0;
}

